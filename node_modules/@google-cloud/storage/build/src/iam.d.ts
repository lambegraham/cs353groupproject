/**
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Metadata ***REMOVED*** from '@google-cloud/common';
import { Bucket ***REMOVED*** from './bucket';
/**
 * @typedef {object***REMOVED*** GetPolicyOptions
 * @property {string***REMOVED*** [userProject] The ID of the project which will be billed for
 *     the request.
 */
export interface GetPolicyOptions {
    userProject?: string;
***REMOVED***
/**
 * @typedef {array***REMOVED*** GetPolicyResponse
 * @property {object***REMOVED*** 0 The policy.
 * @property {object***REMOVED*** 1 The full API response.
 */
export declare type GetPolicyResponse = [Policy, Metadata];
/**
 * @callback GetPolicyCallback
 * @param {?Error***REMOVED*** err Request error, if any.
 * @param {object***REMOVED*** acl The policy.
 * @param {object***REMOVED*** apiResponse The full API response.
 */
export interface GetPolicyCallback {
    (err?: Error | null, acl?: Policy, apiResponse?: Metadata): void;
***REMOVED***
/**
 * @typedef {object***REMOVED*** SetPolicyOptions
 * @param {string***REMOVED*** [userProject] The ID of the project which will be
 *     billed for the request.
 */
export interface SetPolicyOptions {
    userProject?: string;
***REMOVED***
/**
 * @typedef {array***REMOVED*** SetPolicyResponse
 * @property {object***REMOVED*** 0 The policy.
 * @property {object***REMOVED*** 1 The full API response.
 */
export declare type SetPolicyResponse = [Policy, Metadata];
/**
 * @callback SetPolicyCallback
 * @param {?Error***REMOVED*** err Request error, if any.
 * @param {object***REMOVED*** acl The policy.
 * @param {object***REMOVED*** apiResponse The full API response.
 */
export interface SetPolicyCallback {
    (err?: Error | null, acl?: Policy, apiResponse?: object): void;
***REMOVED***
/**
 * @typedef {object***REMOVED*** Policy
 * @property {array***REMOVED*** policy.bindings Bindings associate members with roles.
 * @property {string***REMOVED*** [policy.etag] Etags are used to perform a read-modify-write.
 */
export interface Policy {
    bindings: PolicyBinding[];
    etag?: string;
***REMOVED***
export interface PolicyBinding {
    role: string;
    members: string[];
***REMOVED***
/**
 * @typedef {array***REMOVED*** TestIamPermissionsResponse
 * @property {object***REMOVED*** 0 A subset of permissions that the caller is allowed.
 * @property {object***REMOVED*** 1 The full API response.
 */
export declare type TestIamPermissionsResponse = [{
    [key: string]: boolean;
***REMOVED***, Metadata];
/**
 * @callback TestIamPermissionsCallback
 * @param {?Error***REMOVED*** err Request error, if any.
 * @param {object***REMOVED*** acl A subset of permissions that the caller is allowed.
 * @param {object***REMOVED*** apiResponse The full API response.
 */
export interface TestIamPermissionsCallback {
    (err?: Error | null, acl?: {
        [key: string]: boolean;
  ***REMOVED*** | null, apiResponse?: Metadata): void;
***REMOVED***
/**
 * @typedef {object***REMOVED*** TestIamPermissionsOptions Configuration options for Iam#testPermissions().
 * @param {string***REMOVED*** [userProject] The ID of the project which will be
 *     billed for the request.
 */
export interface TestIamPermissionsOptions {
    userProject?: string;
***REMOVED***
/**
 * Get and set IAM policies for your Cloud Storage bucket.
 *
 * @see [Cloud Storage IAM Management](https://cloud.google.com/storage/docs/access-control/iam#short_title_iam_management)
 * @see [Granting, Changing, and Revoking Access](https://cloud.google.com/iam/docs/granting-changing-revoking-access)
 * @see [IAM Roles](https://cloud.google.com/iam/docs/understanding-roles)
 *
 * @constructor Iam
 * @mixin
 *
 * @param {Bucket***REMOVED*** bucket The parent instance.
 * @example
 * const {Storage***REMOVED*** = require('@google-cloud/storage');
 * const storage = new Storage();
 * const bucket = storage.bucket('my-bucket');
 * // bucket.iam
 */
declare class Iam {
    private request_;
    private resourceId_;
    constructor(bucket: Bucket);
    getPolicy(options?: GetPolicyOptions): Promise<GetPolicyResponse>;
    getPolicy(options: GetPolicyOptions, callback: GetPolicyCallback): void;
    getPolicy(callback: GetPolicyCallback): void;
    setPolicy(policy: Policy, options?: SetPolicyOptions): Promise<SetPolicyResponse>;
    setPolicy(policy: Policy, callback: SetPolicyCallback): void;
    setPolicy(policy: Policy, options: SetPolicyOptions, callback: SetPolicyCallback): void;
    testPermissions(permissions: string | string[], options?: TestIamPermissionsOptions): Promise<TestIamPermissionsResponse>;
    testPermissions(permissions: string | string[], callback: TestIamPermissionsCallback): void;
    testPermissions(permissions: string | string[], options: TestIamPermissionsOptions, callback: TestIamPermissionsCallback): void;
***REMOVED***
export { Iam ***REMOVED***;
