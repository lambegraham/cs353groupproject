"use strict";
// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// Note: this file is purely for documentation. Any contents are not expected
// to be loaded as the JS file.
/**
 * A Firestore query.
 *
 * @property {Object***REMOVED*** select
 *   The projection to return.
 *
 *   This object should have the same structure as [Projection]{@link google.firestore.v1.Projection***REMOVED***
 *
 * @property {Object[]***REMOVED*** from
 *   The collections to query.
 *
 *   This object should have the same structure as [CollectionSelector]{@link google.firestore.v1.CollectionSelector***REMOVED***
 *
 * @property {Object***REMOVED*** where
 *   The filter to apply.
 *
 *   This object should have the same structure as [Filter]{@link google.firestore.v1.Filter***REMOVED***
 *
 * @property {Object[]***REMOVED*** orderBy
 *   The order to apply to the query results.
 *
 *   Firestore guarantees a stable ordering through the following rules:
 *
 *    * Any field required to appear in `order_by`, that is not already
 *      specified in `order_by`, is appended to the order in field name order
 *      by default.
 *    * If an order on `__name__` is not specified, it is appended by default.
 *
 *   Fields are appended with the same sort direction as the last order
 *   specified, or 'ASCENDING' if no order was specified. For example:
 *
 *    * `SELECT * FROM Foo ORDER BY A` becomes
 *      `SELECT * FROM Foo ORDER BY A, __name__`
 *    * `SELECT * FROM Foo ORDER BY A DESC` becomes
 *      `SELECT * FROM Foo ORDER BY A DESC, __name__ DESC`
 *    * `SELECT * FROM Foo WHERE A > 1` becomes
 *      `SELECT * FROM Foo WHERE A > 1 ORDER BY A, __name__`
 *
 *   This object should have the same structure as [Order]{@link google.firestore.v1.Order***REMOVED***
 *
 * @property {Object***REMOVED*** startAt
 *   A starting point for the query results.
 *
 *   This object should have the same structure as [Cursor]{@link google.firestore.v1.Cursor***REMOVED***
 *
 * @property {Object***REMOVED*** endAt
 *   A end point for the query results.
 *
 *   This object should have the same structure as [Cursor]{@link google.firestore.v1.Cursor***REMOVED***
 *
 * @property {number***REMOVED*** offset
 *   The number of results to skip.
 *
 *   Applies before limit, but after all other constraints. Must be >= 0 if
 *   specified.
 *
 * @property {Object***REMOVED*** limit
 *   The maximum number of results to return.
 *
 *   Applies after all other constraints.
 *   Must be >= 0 if specified.
 *
 *   This object should have the same structure as [Int32Value]{@link google.protobuf.Int32Value***REMOVED***
 *
 * @typedef StructuredQuery
 * @memberof google.firestore.v1
 * @see [google.firestore.v1.StructuredQuery definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/firestore/v1/query.proto***REMOVED***
 */
const StructuredQuery = {
    // This is for documentation. Actual contents will be loaded by gRPC.
    /**
     * A selection of a collection, such as `messages as m1`.
     *
     * @property {string***REMOVED*** collectionId
     *   The collection ID.
     *   When set, selects only collections with this ID.
     *
     * @property {boolean***REMOVED*** allDescendants
     *   When false, selects only collections that are immediate children of
     *   the `parent` specified in the containing `RunQueryRequest`.
     *   When true, selects all descendant collections.
     *
     * @typedef CollectionSelector
     * @memberof google.firestore.v1
     * @see [google.firestore.v1.StructuredQuery.CollectionSelector definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/firestore/v1/query.proto***REMOVED***
     */
    CollectionSelector: {
    // This is for documentation. Actual contents will be loaded by gRPC.
  ***REMOVED***,
    /**
     * A filter.
     *
     * @property {Object***REMOVED*** compositeFilter
     *   A composite filter.
     *
     *   This object should have the same structure as [CompositeFilter]{@link google.firestore.v1.CompositeFilter***REMOVED***
     *
     * @property {Object***REMOVED*** fieldFilter
     *   A filter on a document field.
     *
     *   This object should have the same structure as [FieldFilter]{@link google.firestore.v1.FieldFilter***REMOVED***
     *
     * @property {Object***REMOVED*** unaryFilter
     *   A filter that takes exactly one argument.
     *
     *   This object should have the same structure as [UnaryFilter]{@link google.firestore.v1.UnaryFilter***REMOVED***
     *
     * @typedef Filter
     * @memberof google.firestore.v1
     * @see [google.firestore.v1.StructuredQuery.Filter definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/firestore/v1/query.proto***REMOVED***
     */
    Filter: {
    // This is for documentation. Actual contents will be loaded by gRPC.
  ***REMOVED***,
    /**
     * A filter that merges multiple other filters using the given operator.
     *
     * @property {number***REMOVED*** op
     *   The operator for combining multiple filters.
     *
     *   The number should be among the values of [Operator]{@link google.firestore.v1.Operator***REMOVED***
     *
     * @property {Object[]***REMOVED*** filters
     *   The list of filters to combine.
     *   Must contain at least one filter.
     *
     *   This object should have the same structure as [Filter]{@link google.firestore.v1.Filter***REMOVED***
     *
     * @typedef CompositeFilter
     * @memberof google.firestore.v1
     * @see [google.firestore.v1.StructuredQuery.CompositeFilter definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/firestore/v1/query.proto***REMOVED***
     */
    CompositeFilter: {
        // This is for documentation. Actual contents will be loaded by gRPC.
        /**
         * A composite filter operator.
         *
         * @enum {number***REMOVED***
         * @memberof google.firestore.v1
         */
        Operator: {
            /**
             * Unspecified. This value must not be used.
             */
            OPERATOR_UNSPECIFIED: 0,
            /**
             * The results are required to satisfy each of the combined filters.
             */
            AND: 1,
      ***REMOVED***,
  ***REMOVED***,
    /**
     * A filter on a specific field.
     *
     * @property {Object***REMOVED*** field
     *   The field to filter by.
     *
     *   This object should have the same structure as [FieldReference]{@link google.firestore.v1.FieldReference***REMOVED***
     *
     * @property {number***REMOVED*** op
     *   The operator to filter by.
     *
     *   The number should be among the values of [Operator]{@link google.firestore.v1.Operator***REMOVED***
     *
     * @property {Object***REMOVED*** value
     *   The value to compare to.
     *
     *   This object should have the same structure as [Value]{@link google.firestore.v1.Value***REMOVED***
     *
     * @typedef FieldFilter
     * @memberof google.firestore.v1
     * @see [google.firestore.v1.StructuredQuery.FieldFilter definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/firestore/v1/query.proto***REMOVED***
     */
    FieldFilter: {
        // This is for documentation. Actual contents will be loaded by gRPC.
        /**
         * A field filter operator.
         *
         * @enum {number***REMOVED***
         * @memberof google.firestore.v1
         */
        Operator: {
            /**
             * Unspecified. This value must not be used.
             */
            OPERATOR_UNSPECIFIED: 0,
            /**
             * Less than. Requires that the field come first in `order_by`.
             */
            LESS_THAN: 1,
            /**
             * Less than or equal. Requires that the field come first in `order_by`.
             */
            LESS_THAN_OR_EQUAL: 2,
            /**
             * Greater than. Requires that the field come first in `order_by`.
             */
            GREATER_THAN: 3,
            /**
             * Greater than or equal. Requires that the field come first in
             * `order_by`.
             */
            GREATER_THAN_OR_EQUAL: 4,
            /**
             * Equal.
             */
            EQUAL: 5,
            /**
             * Contains. Requires that the field is an array.
             */
            ARRAY_CONTAINS: 7,
      ***REMOVED***,
  ***REMOVED***,
    /**
     * A filter with a single operand.
     *
     * @property {number***REMOVED*** op
     *   The unary operator to apply.
     *
     *   The number should be among the values of [Operator]{@link google.firestore.v1.Operator***REMOVED***
     *
     * @property {Object***REMOVED*** field
     *   The field to which to apply the operator.
     *
     *   This object should have the same structure as [FieldReference]{@link google.firestore.v1.FieldReference***REMOVED***
     *
     * @typedef UnaryFilter
     * @memberof google.firestore.v1
     * @see [google.firestore.v1.StructuredQuery.UnaryFilter definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/firestore/v1/query.proto***REMOVED***
     */
    UnaryFilter: {
        // This is for documentation. Actual contents will be loaded by gRPC.
        /**
         * A unary operator.
         *
         * @enum {number***REMOVED***
         * @memberof google.firestore.v1
         */
        Operator: {
            /**
             * Unspecified. This value must not be used.
             */
            OPERATOR_UNSPECIFIED: 0,
            /**
             * Test if a field is equal to NaN.
             */
            IS_NAN: 2,
            /**
             * Test if an expression evaluates to Null.
             */
            IS_NULL: 3,
      ***REMOVED***,
  ***REMOVED***,
    /**
     * An order on a field.
     *
     * @property {Object***REMOVED*** field
     *   The field to order by.
     *
     *   This object should have the same structure as [FieldReference]{@link google.firestore.v1.FieldReference***REMOVED***
     *
     * @property {number***REMOVED*** direction
     *   The direction to order by. Defaults to `ASCENDING`.
     *
     *   The number should be among the values of [Direction]{@link google.firestore.v1.Direction***REMOVED***
     *
     * @typedef Order
     * @memberof google.firestore.v1
     * @see [google.firestore.v1.StructuredQuery.Order definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/firestore/v1/query.proto***REMOVED***
     */
    Order: {
    // This is for documentation. Actual contents will be loaded by gRPC.
  ***REMOVED***,
    /**
     * A reference to a field, such as `max(messages.time) as max_time`.
     *
     * @property {string***REMOVED*** fieldPath
     *
     * @typedef FieldReference
     * @memberof google.firestore.v1
     * @see [google.firestore.v1.StructuredQuery.FieldReference definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/firestore/v1/query.proto***REMOVED***
     */
    FieldReference: {
    // This is for documentation. Actual contents will be loaded by gRPC.
  ***REMOVED***,
    /**
     * The projection of document's fields to return.
     *
     * @property {Object[]***REMOVED*** fields
     *   The fields to return.
     *
     *   If empty, all fields are returned. To only return the name
     *   of the document, use `['__name__']`.
     *
     *   This object should have the same structure as [FieldReference]{@link google.firestore.v1.FieldReference***REMOVED***
     *
     * @typedef Projection
     * @memberof google.firestore.v1
     * @see [google.firestore.v1.StructuredQuery.Projection definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/firestore/v1/query.proto***REMOVED***
     */
    Projection: {
    // This is for documentation. Actual contents will be loaded by gRPC.
  ***REMOVED***,
    /**
     * A sort direction.
     *
     * @enum {number***REMOVED***
     * @memberof google.firestore.v1
     */
    Direction: {
        /**
         * Unspecified.
         */
        DIRECTION_UNSPECIFIED: 0,
        /**
         * Ascending.
         */
        ASCENDING: 1,
        /**
         * Descending.
         */
        DESCENDING: 2,
  ***REMOVED***,
***REMOVED***;
/**
 * A position in a query result set.
 *
 * @property {Object[]***REMOVED*** values
 *   The values that represent a position, in the order they appear in
 *   the order by clause of a query.
 *
 *   Can contain fewer values than specified in the order by clause.
 *
 *   This object should have the same structure as [Value]{@link google.firestore.v1.Value***REMOVED***
 *
 * @property {boolean***REMOVED*** before
 *   If the position is just before or just after the given values, relative
 *   to the sort order defined by the query.
 *
 * @typedef Cursor
 * @memberof google.firestore.v1
 * @see [google.firestore.v1.Cursor definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/firestore/v1/query.proto***REMOVED***
 */
const Cursor = {
// This is for documentation. Actual contents will be loaded by gRPC.
***REMOVED***;
//# sourceMappingURL=doc_query.js.map