var wellKnownSymbol = require('../internals/well-known-symbol');

var ITERATOR = wellKnownSymbol('iterator');
var SAFE_CLOSING = false;

try {
  var called = 0;
  var iteratorWithReturn = {
    next: function () {
      return { done: !!called++ ***REMOVED***;
  ***REMOVED***,
    'return': function () {
      SAFE_CLOSING = true;
  ***REMOVED***
***REMOVED***
  iteratorWithReturn[ITERATOR] = function () {
    return this;
***REMOVED***
  // eslint-disable-next-line no-throw-literal
  Array.from(iteratorWithReturn, function () { throw 2; ***REMOVED***);
***REMOVED*** catch (error) { /* empty */ ***REMOVED***

module.exports = function (exec, SKIP_CLOSING) {
  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
  var ITERATION_SUPPORT = false;
  try {
    var object = {***REMOVED***;
    object[ITERATOR] = function () {
      return {
        next: function () {
          return { done: ITERATION_SUPPORT = true ***REMOVED***;
      ***REMOVED***
    ***REMOVED***
  ***REMOVED***
    exec(object);
***REMOVED*** catch (error) { /* empty */ ***REMOVED***
  return ITERATION_SUPPORT;
***REMOVED***;
