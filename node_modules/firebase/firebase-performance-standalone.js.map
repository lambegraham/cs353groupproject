{"version":3,"file":"firebase-performance-standalone.js","sources":["../../node_modules/tslib/tslib.es6.js","../util/src/deepCopy.ts","../util/src/errors.ts","../logger/src/logger.ts","../util/src/obj.ts","../app/src/errors.ts","../app/src/constants.ts","../app/src/lite/firebaseAppLite.ts","../app/src/logger.ts","../app/index.lite.ts","../app/src/lite/firebaseNamespaceLite.ts","../app/src/firebaseNamespaceCore.ts","../../node_modules/idb/lib/idb.mjs","../installations/src/util/constants.ts","../installations/src/util/errors.ts","../installations/src/helpers/extract-app-config.ts","../installations/src/api/common.ts","../installations/src/util/sleep.ts","../installations/src/helpers/buffer-to-base64-url-safe.ts","../installations/src/helpers/generate-fid.ts","../installations/src/helpers/idb-manager.ts","../installations/src/helpers/get-installation-entry.ts","../installations/src/api/create-installation.ts","../installations/src/api/generate-auth-token.ts","../installations/src/helpers/refresh-auth-token.ts","../installations/src/functions/get-token.ts","../installations/src/api/delete-installation.ts","../installations/src/index.ts","../installations/src/functions/get-id.ts","../installations/src/functions/delete-installation.ts","../performance/src/services/api_service.ts","../performance/src/services/settings_service.ts","../performance/src/constants.ts","../performance/src/utils/errors.ts","../performance/src/services/iid_service.ts","../performance/src/utils/attributes_utils.ts","../performance/src/utils/console_logger.ts","../performance/src/services/remote_config_service.ts","../performance/src/services/initialization_service.ts","../performance/src/services/cc_service.ts","../performance/src/services/perf_logger.ts","../performance/src/utils/metric_utils.ts","../performance/src/resources/trace.ts","../performance/src/resources/network_request.ts","../performance/src/services/oob_resources_service.ts","../performance/src/controllers/perf.ts","../performance/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] ***REMOVED*** instanceof Array && function (d, b) { d.__proto__ = b; ***REMOVED***) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; ***REMOVED***;\r\n    return extendStatics(d, b);\r\n***REMOVED***;\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; ***REMOVED***\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n***REMOVED***\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n      ***REMOVED***\r\n        return t;\r\n  ***REMOVED***\r\n    return __assign.apply(this, arguments);\r\n***REMOVED***\r\n\r\nexport function __rest(s, e) {\r\n    var t = {***REMOVED***;\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n      ***REMOVED***\r\n    return t;\r\n***REMOVED***\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n***REMOVED***\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); ***REMOVED***\r\n***REMOVED***\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n***REMOVED***\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); ***REMOVED*** catch (e) { reject(e); ***REMOVED*** ***REMOVED***\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); ***REMOVED*** catch (e) { reject(e); ***REMOVED*** ***REMOVED***\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); ***REMOVED***).then(fulfilled, rejected); ***REMOVED***\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n  ***REMOVED***);\r\n***REMOVED***\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; ***REMOVED***, trys: [], ops: [] ***REMOVED***, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) ***REMOVED***, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; ***REMOVED***), g;\r\n    function verb(n) { return function (v) { return step([n, v]); ***REMOVED***; ***REMOVED***\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false ***REMOVED***;\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; ***REMOVED***\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; ***REMOVED***\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; ***REMOVED***\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; ***REMOVED***\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n          ***REMOVED***\r\n            op = body.call(thisArg, _);\r\n      ***REMOVED*** catch (e) { op = [6, e]; y = 0; ***REMOVED*** finally { f = t = 0; ***REMOVED***\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true ***REMOVED***;\r\n  ***REMOVED***\r\n***REMOVED***\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n***REMOVED***\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o ***REMOVED***;\r\n      ***REMOVED***\r\n  ***REMOVED***\r\n***REMOVED***\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n  ***REMOVED***\r\n    catch (error) { e = { error: error ***REMOVED***; ***REMOVED***\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n      ***REMOVED***\r\n        finally { if (e) throw e.error; ***REMOVED***\r\n  ***REMOVED***\r\n    return ar;\r\n***REMOVED***\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n***REMOVED***\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n***REMOVED***;\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n***REMOVED***\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {***REMOVED***, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; ***REMOVED***, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); ***REMOVED***); ***REMOVED***; ***REMOVED***\r\n    function resume(n, v) { try { step(g[n](v)); ***REMOVED*** catch (e) { settle(q[0][3], e); ***REMOVED*** ***REMOVED***\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); ***REMOVED***\r\n    function fulfill(value) { resume(\"next\", value); ***REMOVED***\r\n    function reject(value) { resume(\"throw\", value); ***REMOVED***\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); ***REMOVED***\r\n***REMOVED***\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {***REMOVED***, verb(\"next\"), verb(\"throw\", function (e) { throw e; ***REMOVED***), verb(\"return\"), i[Symbol.iterator] = function () { return this; ***REMOVED***, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" ***REMOVED*** : f ? f(v) : v; ***REMOVED*** : f; ***REMOVED***\r\n***REMOVED***\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {***REMOVED***, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; ***REMOVED***, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); ***REMOVED***); ***REMOVED***; ***REMOVED***\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d ***REMOVED***); ***REMOVED***, reject); ***REMOVED***\r\n***REMOVED***\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw ***REMOVED***); ***REMOVED*** else { cooked.raw = raw; ***REMOVED***\r\n    return cooked;\r\n***REMOVED***;\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {***REMOVED***;\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n***REMOVED***\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod ***REMOVED***;\r\n***REMOVED***\r\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n***REMOVED***\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n***REMOVED***\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {***REMOVED***;\n    ***REMOVED***\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n***REMOVED***\n\n  for (const prop in source) {\n    if (!source.hasOwnProperty(prop)) {\n      continue;\n  ***REMOVED***\n    (target as { [key: string]: unknown ***REMOVED***)[prop] = deepExtend(\n      (target as { [key: string]: unknown ***REMOVED***)[prop],\n      (source as { [key: string]: unknown ***REMOVED***)[prop]\n    );\n***REMOVED***\n\n  return target;\n***REMOVED***\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string***REMOVED***\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n * ***REMOVED***\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file***REMOVED***\",\n * ***REMOVED***\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName***REMOVED***);\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if (e.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *   ***REMOVED***\n * ***REMOVED***\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n***REMOVED***;\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n***REMOVED***\n\nexport interface ErrorData {\n  [key: string]: StringLike | undefined;\n***REMOVED***\n\nexport interface FirebaseError extends Error, ErrorData {\n  // Unique code for error - format is service/error-code-string.\n  readonly code: string;\n\n  // Developer-friendly error message.\n  readonly message: string;\n\n  // Always 'FirebaseError'.\n  readonly name: typeof ERROR_NAME;\n\n  // Where available - stack backtrace in a string.\n  readonly stack?: string;\n***REMOVED***\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  readonly name = ERROR_NAME;\n\n  constructor(readonly code: string, message: string) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n  ***REMOVED***\n***REMOVED***\n***REMOVED***\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData ***REMOVED*** = {***REMOVED***\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {***REMOVED***\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {***REMOVED***;\n    const fullCode = `${this.service***REMOVED***/${code***REMOVED***`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName***REMOVED***: ${message***REMOVED*** (${fullCode***REMOVED***).`;\n\n    const error = new FirebaseError(fullCode, fullMessage);\n\n    // Keys with an underscore at the end of their name are not included in\n    // error.data for some reason.\n    // TODO: Replace with Object.entries when lib is updated to es2017.\n    for (const key of Object.keys(customData)) {\n      if (key.slice(-1) !== '_') {\n        if (key in error) {\n          console.warn(\n            `Overwriting FirebaseError base field \"${key***REMOVED***\" can cause unexpected behavior.`\n          );\n      ***REMOVED***\n        error[key] = customData[key];\n    ***REMOVED***\n  ***REMOVED***\n\n    return error;\n***REMOVED***\n***REMOVED***\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? value.toString() : `<${key***REMOVED***?>`;\n***REMOVED***);\n***REMOVED***\n\nconst PATTERN = /\\{\\$([^***REMOVED***]+)***REMOVED***/g;\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n***REMOVED***\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n***REMOVED***\n  const now = new Date().toISOString();\n  switch (logType) {\n    /**\n     * By default, `console.debug` is not displayed in the developer console (in\n     * chrome). To avoid forcing users to have to opt-in to these logs twice\n     * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n     * logs to the `console.log` function.\n     */\n    case LogLevel.DEBUG:\n      console.log(`[${now***REMOVED***]  ${instance.name***REMOVED***:`, ...args);\n      break;\n    case LogLevel.VERBOSE:\n      console.log(`[${now***REMOVED***]  ${instance.name***REMOVED***:`, ...args);\n      break;\n    case LogLevel.INFO:\n      console.info(`[${now***REMOVED***]  ${instance.name***REMOVED***:`, ...args);\n      break;\n    case LogLevel.WARN:\n      console.warn(`[${now***REMOVED***]  ${instance.name***REMOVED***:`, ...args);\n      break;\n    case LogLevel.ERROR:\n      console.error(`[${now***REMOVED***]  ${instance.name***REMOVED***:`, ...args);\n      break;\n    default:\n      throw new Error(\n        `Attempted to log a message with an invalid logType (value: ${logType***REMOVED***)`\n      );\n***REMOVED***\n***REMOVED***;\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n***REMOVED***\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n  get logLevel(): LogLevel {\n    return this._logLevel;\n***REMOVED***\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError('Invalid value assigned to `logLevel`');\n  ***REMOVED***\n    this._logLevel = val;\n***REMOVED***\n\n  /**\n   * The log handler for the Logger instance.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n***REMOVED***\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n  ***REMOVED***\n    this._logHandler = val;\n***REMOVED***\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n***REMOVED***\n  log(...args: unknown[]): void {\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n***REMOVED***\n  info(...args: unknown[]): void {\n    this._logHandler(this, LogLevel.INFO, ...args);\n***REMOVED***\n  warn(...args: unknown[]): void {\n    this._logHandler(this, LogLevel.WARN, ...args);\n***REMOVED***\n  error(...args: unknown[]): void {\n    this._logHandler(this, LogLevel.ERROR, ...args);\n***REMOVED***\n***REMOVED***\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: keyof T): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n***REMOVED***\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n***REMOVED*** else {\n    return undefined;\n***REMOVED***\n***REMOVED***\n\nexport function isEmpty(obj: object): obj is {***REMOVED*** {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n  ***REMOVED***\n***REMOVED***\n  return true;\n***REMOVED***\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V ***REMOVED***,\n  fn: (value: V, key: K, obj: { [key in K]: V ***REMOVED***) => U,\n  contextObj?: unknown\n): { [key in K]: U ***REMOVED*** {\n  const res: Partial<{ [key in K]: U ***REMOVED***> = {***REMOVED***;\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n  ***REMOVED***\n***REMOVED***\n  return res as { [key in K]: U ***REMOVED***;\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap ***REMOVED*** from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument'\n***REMOVED***\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName***REMOVED***' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName***REMOVED***\",\n  [AppError.DUPLICATE_APP]: \"Firebase App named '{$appName***REMOVED***' already exists\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName***REMOVED***' already deleted\",\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName***REMOVED***() takes either no argument or a ' +\n    'Firebase App instance.'\n***REMOVED***;\n\ntype ErrorParams = { [key in AppError]: { appName: string ***REMOVED*** ***REMOVED***;\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppConfig\n***REMOVED*** from '@firebase/app-types';\nimport {\n  _FirebaseApp,\n  _FirebaseNamespace,\n  FirebaseService\n***REMOVED*** from '@firebase/app-types/private';\nimport { deepCopy, deepExtend ***REMOVED*** from '@firebase/util';\nimport { ERROR_FACTORY, AppError ***REMOVED*** from '../errors';\nimport { DEFAULT_ENTRY_NAME ***REMOVED*** from '../constants';\n\ninterface ServicesCache {\n  [name: string]: {\n    [serviceName: string]: FirebaseService;\n***REMOVED***\n***REMOVED***\n\n/**\n * Global context object for a collection of services using\n * a shared authentication state.\n */\nexport class FirebaseAppLiteImpl implements FirebaseApp {\n  private readonly options_: FirebaseOptions;\n  private readonly name_: string;\n  private isDeleted_ = false;\n  private services_: ServicesCache = {***REMOVED***;\n  private automaticDataCollectionEnabled_: boolean;\n\n  // lite version has an empty INTERNAL namespace\n  readonly INTERNAL = {***REMOVED***;\n\n  constructor(\n    options: FirebaseOptions,\n    config: FirebaseAppConfig,\n    private readonly firebase_: _FirebaseNamespace\n  ) {\n    this.name_ = config.name!;\n    this.automaticDataCollectionEnabled_ =\n      config.automaticDataCollectionEnabled || false;\n    this.options_ = deepCopy<FirebaseOptions>(options);\n***REMOVED***\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed_();\n    return this.automaticDataCollectionEnabled_;\n***REMOVED***\n\n  set automaticDataCollectionEnabled(val) {\n    this.checkDestroyed_();\n    this.automaticDataCollectionEnabled_ = val;\n***REMOVED***\n\n  get name(): string {\n    this.checkDestroyed_();\n    return this.name_;\n***REMOVED***\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed_();\n    return this.options_;\n***REMOVED***\n\n  delete(): Promise<void> {\n    return new Promise(resolve => {\n      this.checkDestroyed_();\n      resolve();\n  ***REMOVED***)\n      .then(() => {\n        this.firebase_.INTERNAL.removeApp(this.name_);\n        const services: FirebaseService[] = [];\n\n        for (const serviceKey of Object.keys(this.services_)) {\n          for (const instanceKey of Object.keys(this.services_[serviceKey])) {\n            services.push(this.services_[serviceKey][instanceKey]);\n        ***REMOVED***\n      ***REMOVED***\n\n        return Promise.all(\n          services\n            .filter(service => 'INTERNAL' in service)\n            .map(service => service.INTERNAL!.delete())\n        );\n    ***REMOVED***)\n      .then((): void => {\n        this.isDeleted_ = true;\n        this.services_ = {***REMOVED***;\n    ***REMOVED***);\n***REMOVED***\n\n  /**\n   * Return a service instance associated with this app (creating it\n   * on demand), identified by the passed instanceIdentifier.\n   *\n   * NOTE: Currently storage is the only one that is leveraging this\n   * functionality. They invoke it by calling:\n   *\n   * ```javascript\n   * firebase.app().storage('STORAGE BUCKET ID')\n   * ```\n   *\n   * The service name is passed to this already\n   * @internal\n   */\n  _getService(\n    name: string,\n    instanceIdentifier: string = DEFAULT_ENTRY_NAME\n  ): FirebaseService {\n    this.checkDestroyed_();\n\n    if (!this.services_[name]) {\n      this.services_[name] = {***REMOVED***;\n  ***REMOVED***\n\n    if (!this.services_[name][instanceIdentifier]) {\n      /**\n       * If a custom instance has been defined (i.e. not '[DEFAULT]')\n       * then we will pass that instance on, otherwise we pass `null`\n       */\n      const instanceSpecifier =\n        instanceIdentifier !== DEFAULT_ENTRY_NAME\n          ? instanceIdentifier\n          : undefined;\n      const service = this.firebase_.INTERNAL.factories[name](\n        this,\n        this.extendApp.bind(this),\n        instanceSpecifier\n      );\n      this.services_[name][instanceIdentifier] = service;\n  ***REMOVED***\n\n    return this.services_[name][instanceIdentifier];\n***REMOVED***\n\n  /**\n   * Callback function used to extend an App instance at the time\n   * of service instance creation.\n   */\n  private extendApp(props: { [name: string]: unknown ***REMOVED***): void {\n    // Copy the object onto the FirebaseAppImpl prototype\n    deepExtend(this, props);\n***REMOVED***\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed_(): void {\n    if (this.isDeleted_) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this.name_ ***REMOVED***);\n  ***REMOVED***\n***REMOVED***\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger ***REMOVED*** from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createFirebaseNamespaceLite ***REMOVED*** from './src/lite/firebaseNamespaceLite';\n\nexport const firebase = createFirebaseNamespaceLite();\n\n// eslint-disable-next-line import/no-default-export\nexport default firebase;\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseNamespace ***REMOVED*** from '@firebase/app-types';\nimport {\n  _FirebaseApp,\n  _FirebaseNamespace,\n  FirebaseServiceFactory,\n  AppHook,\n  FirebaseServiceNamespace,\n  FirebaseService\n***REMOVED*** from '@firebase/app-types/private';\nimport { FirebaseAppLiteImpl ***REMOVED*** from './firebaseAppLite';\nimport { createFirebaseNamespaceCore ***REMOVED*** from '../firebaseNamespaceCore';\n\nexport function createFirebaseNamespaceLite(): FirebaseNamespace {\n  const namespace = createFirebaseNamespaceCore(FirebaseAppLiteImpl);\n\n  namespace.SDK_VERSION = `${namespace.SDK_VERSION***REMOVED***_LITE`;\n\n  const registerService = (namespace as _FirebaseNamespace).INTERNAL\n    .registerService;\n  (namespace as _FirebaseNamespace).INTERNAL.registerService = registerServiceForLite;\n\n  /**\n   * This is a special implementation, so it only works with performance.\n   * only allow performance SDK to register.\n   */\n  function registerServiceForLite(\n    name: string,\n    createService: FirebaseServiceFactory,\n    serviceProperties?: { [prop: string]: unknown ***REMOVED***,\n    appHook?: AppHook,\n    allowMultipleInstances?: boolean\n  ): FirebaseServiceNamespace<FirebaseService> {\n    // only allow performance to register with firebase lite\n    if (name !== 'performance' && name !== 'installations') {\n      throw Error(`${name***REMOVED*** cannot register with the standalone perf instance`);\n  ***REMOVED***\n\n    return registerService(\n      name,\n      createService,\n      serviceProperties,\n      appHook,\n      allowMultipleInstances\n    );\n***REMOVED***\n\n  return namespace;\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseNamespace,\n  FirebaseAppConfig\n***REMOVED*** from '@firebase/app-types';\nimport {\n  _FirebaseApp,\n  _FirebaseNamespace,\n  FirebaseService,\n  FirebaseServiceFactory,\n  FirebaseServiceNamespace,\n  AppHook\n***REMOVED*** from '@firebase/app-types/private';\nimport { deepExtend, contains ***REMOVED*** from '@firebase/util';\nimport { FirebaseAppImpl ***REMOVED*** from './firebaseApp';\nimport { ERROR_FACTORY, AppError ***REMOVED*** from './errors';\nimport { FirebaseAppLiteImpl ***REMOVED*** from './lite/firebaseAppLite';\nimport { DEFAULT_ENTRY_NAME ***REMOVED*** from './constants';\nimport { version ***REMOVED*** from '../../firebase/package.json';\nimport { logger ***REMOVED*** from './logger';\n\n/**\n * Because auth can't share code with other components, we attach the utility functions\n * in an internal namespace to share code.\n * This function return a firebase namespace object without\n * any utility functions, so it can be shared between the regular firebaseNamespace and\n * the lite version.\n */\nexport function createFirebaseNamespaceCore(\n  firebaseAppImpl: typeof FirebaseAppImpl | typeof FirebaseAppLiteImpl\n): FirebaseNamespace {\n  const apps: { [name: string]: FirebaseApp ***REMOVED*** = {***REMOVED***;\n  const factories: { [service: string]: FirebaseServiceFactory ***REMOVED*** = {***REMOVED***;\n  const appHooks: { [service: string]: AppHook ***REMOVED*** = {***REMOVED***;\n\n  // A namespace is a plain JavaScript Object.\n  const namespace: FirebaseNamespace = {\n    // Hack to prevent Babel from modifying the object returned\n    // as the firebase namespace.\n    // @ts-ignore\n    __esModule: true,\n    initializeApp,\n    // @ts-ignore\n    app,\n    // @ts-ignore\n    apps: null,\n    SDK_VERSION: version,\n    INTERNAL: {\n      registerService,\n      removeApp,\n      factories,\n      useAsService\n  ***REMOVED***\n***REMOVED***\n\n  // Inject a circular default export to allow Babel users who were previously\n  // using:\n  //\n  //   import firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase').default;\n  //\n  // instead of\n  //\n  //   import * as firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase');\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (namespace as any)['default'] = namespace;\n\n  // firebase.apps is a read-only getter.\n  Object.defineProperty(namespace, 'apps', {\n    get: getApps\n***REMOVED***);\n\n  /**\n   * Called by App.delete() - but before any services associated with the App\n   * are deleted.\n   */\n  function removeApp(name: string): void {\n    const app = apps[name];\n    callAppHooks(app, 'delete');\n    delete apps[name];\n***REMOVED***\n\n  /**\n   * Get the App object for a given name (or DEFAULT).\n   */\n  function app(name?: string): FirebaseApp {\n    name = name || DEFAULT_ENTRY_NAME;\n    if (!contains(apps, name)) {\n      throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name ***REMOVED***);\n  ***REMOVED***\n    return apps[name];\n***REMOVED***\n\n  // @ts-ignore\n  app['App'] = firebaseAppImpl;\n  /**\n   * Create a new App instance (name must be unique).\n   */\n  function initializeApp(\n    options: FirebaseOptions,\n    config?: FirebaseAppConfig\n  ): FirebaseApp;\n  function initializeApp(options: FirebaseOptions, name?: string): FirebaseApp;\n  function initializeApp(\n    options: FirebaseOptions,\n    rawConfig = {***REMOVED***\n  ): FirebaseApp {\n    if (typeof rawConfig !== 'object' || rawConfig === null) {\n      const name = rawConfig;\n      rawConfig = { name ***REMOVED***;\n  ***REMOVED***\n\n    const config = rawConfig as FirebaseAppConfig;\n\n    if (config.name === undefined) {\n      config.name = DEFAULT_ENTRY_NAME;\n  ***REMOVED***\n\n    const { name ***REMOVED*** = config;\n\n    if (typeof name !== 'string' || !name) {\n      throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n        appName: String(name)\n    ***REMOVED***);\n  ***REMOVED***\n\n    if (contains(apps, name)) {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name ***REMOVED***);\n  ***REMOVED***\n\n    const app = new firebaseAppImpl(\n      options,\n      config,\n      namespace as _FirebaseNamespace\n    );\n\n    apps[name] = app;\n    callAppHooks(app, 'create');\n\n    return app;\n***REMOVED***\n\n  /*\n   * Return an array of all the non-deleted FirebaseApps.\n   */\n  function getApps(): FirebaseApp[] {\n    // Make a copy so caller cannot mutate the apps list.\n    return Object.keys(apps).map(name => apps[name]);\n***REMOVED***\n\n  /*\n   * Register a Firebase Service.\n   *\n   * firebase.INTERNAL.registerService()\n   *\n   * TODO: Implement serviceProperties.\n   */\n  function registerService(\n    name: string,\n    createService: FirebaseServiceFactory,\n    serviceProperties?: { [prop: string]: unknown ***REMOVED***,\n    appHook?: AppHook,\n    allowMultipleInstances = false\n  ): FirebaseServiceNamespace<FirebaseService> {\n    // If re-registering a service that already exists, return existing service\n    if (factories[name]) {\n      logger.debug(`There were multiple attempts to register service ${name***REMOVED***.`);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return (namespace as any)[name] as FirebaseServiceNamespace<\n        FirebaseService\n      >;\n  ***REMOVED***\n\n    // Capture the service factory for later service instantiation\n    factories[name] = createService;\n\n    // Capture the appHook, if passed\n    if (appHook) {\n      appHooks[name] = appHook;\n\n      // Run the **new** app hook on all existing apps\n      getApps().forEach(app => {\n        appHook('create', app);\n    ***REMOVED***);\n  ***REMOVED***\n\n    // The Service namespace is an accessor function ...\n    function serviceNamespace(appArg: FirebaseApp = app()): FirebaseService {\n      // @ts-ignore\n      if (typeof appArg[name] !== 'function') {\n        // Invalid argument.\n        // This happens in the following case: firebase.storage('gs:/')\n        throw ERROR_FACTORY.create(AppError.INVALID_APP_ARGUMENT, {\n          appName: name\n      ***REMOVED***);\n    ***REMOVED***\n\n      // Forward service instance lookup to the FirebaseApp.\n      // @ts-ignore\n      return appArg[name]();\n  ***REMOVED***\n\n    // ... and a container for service-level properties.\n    if (serviceProperties !== undefined) {\n      deepExtend(serviceNamespace, serviceProperties);\n  ***REMOVED***\n\n    // Monkey-patch the serviceNamespace onto the firebase namespace\n    // @ts-ignore\n    namespace[name] = serviceNamespace;\n\n    // Patch the FirebaseAppImpl prototype\n    // @ts-ignore\n    firebaseAppImpl.prototype[name] =\n      // TODO: The eslint disable can be removed and the 'ignoreRestArgs'\n      // option added to the no-explicit-any rule when ESlint releases it.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      function(...args: any) {\n        const serviceFxn = this._getService.bind(this, name);\n        return serviceFxn.apply(this, allowMultipleInstances ? args : []);\n    ***REMOVED***\n\n    return serviceNamespace;\n***REMOVED***\n\n  function callAppHooks(app: FirebaseApp, eventName: string): void {\n    for (const serviceName of Object.keys(factories)) {\n      // Ignore virtual services\n      const factoryName = useAsService(app, serviceName);\n      if (factoryName === null) {\n        return;\n    ***REMOVED***\n\n      if (appHooks[factoryName]) {\n        appHooks[factoryName](eventName, app);\n    ***REMOVED***\n  ***REMOVED***\n***REMOVED***\n\n  // Map the requested service to a registered service name\n  // (used to map auth to serverAuth service when needed).\n  function useAsService(app: FirebaseApp, name: string): string | null {\n    if (name === 'serverAuth') {\n      return null;\n  ***REMOVED***\n\n    const useService = name;\n\n    return useService;\n***REMOVED***\n\n  return namespace;\n***REMOVED***\n","function toArray(arr) {\n  return Array.prototype.slice.call(arr);\n***REMOVED***\n\nfunction promisifyRequest(request) {\n  return new Promise(function(resolve, reject) {\n    request.onsuccess = function() {\n      resolve(request.result);\n  ***REMOVED***\n\n    request.onerror = function() {\n      reject(request.error);\n  ***REMOVED***\n***REMOVED***);\n***REMOVED***\n\nfunction promisifyRequestCall(obj, method, args) {\n  var request;\n  var p = new Promise(function(resolve, reject) {\n    request = obj[method].apply(obj, args);\n    promisifyRequest(request).then(resolve, reject);\n***REMOVED***);\n\n  p.request = request;\n  return p;\n***REMOVED***\n\nfunction promisifyCursorRequestCall(obj, method, args) {\n  var p = promisifyRequestCall(obj, method, args);\n  return p.then(function(value) {\n    if (!value) return;\n    return new Cursor(value, p.request);\n***REMOVED***);\n***REMOVED***\n\nfunction proxyProperties(ProxyClass, targetProp, properties) {\n  properties.forEach(function(prop) {\n    Object.defineProperty(ProxyClass.prototype, prop, {\n      get: function() {\n        return this[targetProp][prop];\n    ***REMOVED***,\n      set: function(val) {\n        this[targetProp][prop] = val;\n    ***REMOVED***\n  ***REMOVED***);\n***REMOVED***);\n***REMOVED***\n\nfunction proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return promisifyRequestCall(this[targetProp], prop, arguments);\n  ***REMOVED***\n***REMOVED***);\n***REMOVED***\n\nfunction proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return this[targetProp][prop].apply(this[targetProp], arguments);\n  ***REMOVED***\n***REMOVED***);\n***REMOVED***\n\nfunction proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n  ***REMOVED***\n***REMOVED***);\n***REMOVED***\n\nfunction Index(index) {\n  this._index = index;\n***REMOVED***\n\nproxyProperties(Index, '_index', [\n  'name',\n  'keyPath',\n  'multiEntry',\n  'unique'\n]);\n\nproxyRequestMethods(Index, '_index', IDBIndex, [\n  'get',\n  'getKey',\n  'getAll',\n  'getAllKeys',\n  'count'\n]);\n\nproxyCursorRequestMethods(Index, '_index', IDBIndex, [\n  'openCursor',\n  'openKeyCursor'\n]);\n\nfunction Cursor(cursor, request) {\n  this._cursor = cursor;\n  this._request = request;\n***REMOVED***\n\nproxyProperties(Cursor, '_cursor', [\n  'direction',\n  'key',\n  'primaryKey',\n  'value'\n]);\n\nproxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n  'update',\n  'delete'\n]);\n\n// proxy 'next' methods\n['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n  if (!(methodName in IDBCursor.prototype)) return;\n  Cursor.prototype[methodName] = function() {\n    var cursor = this;\n    var args = arguments;\n    return Promise.resolve().then(function() {\n      cursor._cursor[methodName].apply(cursor._cursor, args);\n      return promisifyRequest(cursor._request).then(function(value) {\n        if (!value) return;\n        return new Cursor(value, cursor._request);\n    ***REMOVED***);\n  ***REMOVED***);\n***REMOVED***\n***REMOVED***);\n\nfunction ObjectStore(store) {\n  this._store = store;\n***REMOVED***\n\nObjectStore.prototype.createIndex = function() {\n  return new Index(this._store.createIndex.apply(this._store, arguments));\n***REMOVED***;\n\nObjectStore.prototype.index = function() {\n  return new Index(this._store.index.apply(this._store, arguments));\n***REMOVED***;\n\nproxyProperties(ObjectStore, '_store', [\n  'name',\n  'keyPath',\n  'indexNames',\n  'autoIncrement'\n]);\n\nproxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n  'put',\n  'add',\n  'delete',\n  'clear',\n  'get',\n  'getAll',\n  'getKey',\n  'getAllKeys',\n  'count'\n]);\n\nproxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n  'openCursor',\n  'openKeyCursor'\n]);\n\nproxyMethods(ObjectStore, '_store', IDBObjectStore, [\n  'deleteIndex'\n]);\n\nfunction Transaction(idbTransaction) {\n  this._tx = idbTransaction;\n  this.complete = new Promise(function(resolve, reject) {\n    idbTransaction.oncomplete = function() {\n      resolve();\n  ***REMOVED***\n    idbTransaction.onerror = function() {\n      reject(idbTransaction.error);\n  ***REMOVED***\n    idbTransaction.onabort = function() {\n      reject(idbTransaction.error);\n  ***REMOVED***\n***REMOVED***);\n***REMOVED***\n\nTransaction.prototype.objectStore = function() {\n  return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n***REMOVED***;\n\nproxyProperties(Transaction, '_tx', [\n  'objectStoreNames',\n  'mode'\n]);\n\nproxyMethods(Transaction, '_tx', IDBTransaction, [\n  'abort'\n]);\n\nfunction UpgradeDB(db, oldVersion, transaction) {\n  this._db = db;\n  this.oldVersion = oldVersion;\n  this.transaction = new Transaction(transaction);\n***REMOVED***\n\nUpgradeDB.prototype.createObjectStore = function() {\n  return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n***REMOVED***;\n\nproxyProperties(UpgradeDB, '_db', [\n  'name',\n  'version',\n  'objectStoreNames'\n]);\n\nproxyMethods(UpgradeDB, '_db', IDBDatabase, [\n  'deleteObjectStore',\n  'close'\n]);\n\nfunction DB(db) {\n  this._db = db;\n***REMOVED***\n\nDB.prototype.transaction = function() {\n  return new Transaction(this._db.transaction.apply(this._db, arguments));\n***REMOVED***;\n\nproxyProperties(DB, '_db', [\n  'name',\n  'version',\n  'objectStoreNames'\n]);\n\nproxyMethods(DB, '_db', IDBDatabase, [\n  'close'\n]);\n\n// Add cursor iterators\n// TODO: remove this once browsers do the right thing with promises\n['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n  [ObjectStore, Index].forEach(function(Constructor) {\n    // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n    if (!(funcName in Constructor.prototype)) return;\n\n    Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n      var args = toArray(arguments);\n      var callback = args[args.length - 1];\n      var nativeObject = this._store || this._index;\n      var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n      request.onsuccess = function() {\n        callback(request.result);\n    ***REMOVED***\n  ***REMOVED***\n***REMOVED***);\n***REMOVED***);\n\n// polyfill getAll\n[Index, ObjectStore].forEach(function(Constructor) {\n  if (Constructor.prototype.getAll) return;\n  Constructor.prototype.getAll = function(query, count) {\n    var instance = this;\n    var items = [];\n\n    return new Promise(function(resolve) {\n      instance.iterateCursor(query, function(cursor) {\n        if (!cursor) {\n          resolve(items);\n          return;\n      ***REMOVED***\n        items.push(cursor.value);\n\n        if (count !== undefined && items.length == count) {\n          resolve(items);\n          return;\n      ***REMOVED***\n        cursor.continue();\n    ***REMOVED***);\n  ***REMOVED***);\n***REMOVED***\n***REMOVED***);\n\nexport function openDb(name, version, upgradeCallback) {\n  var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n  var request = p.request;\n\n  if (request) {\n    request.onupgradeneeded = function(event) {\n      if (upgradeCallback) {\n        upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n    ***REMOVED***\n  ***REMOVED***\n***REMOVED***\n\n  return p.then(function(db) {\n    return new DB(db);\n***REMOVED***);\n***REMOVED***\n\nexport function deleteDb(name) {\n  return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { version ***REMOVED*** from '../../package.json';\n\nexport const PENDING_TIMEOUT_MS = 10000;\n\nexport const PACKAGE_VERSION = `w:${version***REMOVED***`;\nexport const INTERNAL_AUTH_VERSION = 'FIS_v2';\n\nexport const INSTALLATIONS_API_URL =\n  'https://firebaseinstallations.googleapis.com/v1';\n\nexport const TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\n\nexport const SERVICE = 'installations';\nexport const SERVICE_NAME = 'Installations';\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, FirebaseError ***REMOVED*** from '@firebase/util';\nimport { SERVICE, SERVICE_NAME ***REMOVED*** from './constants';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  CREATE_INSTALLATION_FAILED = 'create-installation-failed',\n  GENERATE_TOKEN_FAILED = 'generate-token-failed',\n  NOT_REGISTERED = 'not-registered',\n  INSTALLATION_NOT_FOUND = 'installation-not-found',\n  REQUEST_FAILED = 'request-failed',\n  APP_OFFLINE = 'app-offline',\n  DELETE_PENDING_REGISTRATION = 'delete-pending-registration'\n***REMOVED***\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string ***REMOVED*** = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: 'Missing App configuration values.',\n  [ErrorCode.CREATE_INSTALLATION_FAILED]:\n    'Could not register Firebase Installation.',\n  [ErrorCode.GENERATE_TOKEN_FAILED]: 'Could not generate Auth Token.',\n  [ErrorCode.NOT_REGISTERED]: 'Firebase Installation is not registered.',\n  [ErrorCode.INSTALLATION_NOT_FOUND]: 'Firebase Installation not found.',\n  [ErrorCode.REQUEST_FAILED]:\n    '{$requestName***REMOVED*** request failed with error \"{$serverCode***REMOVED*** {$serverStatus***REMOVED***: {$serverMessage***REMOVED***\"',\n  [ErrorCode.APP_OFFLINE]: 'Could not process request. Application offline.',\n  [ErrorCode.DELETE_PENDING_REGISTRATION]:\n    \"Can't delete installation while there is a pending registration request.\"\n***REMOVED***;\n\ninterface ErrorParams {\n  [ErrorCode.REQUEST_FAILED]: {\n    requestName: string;\n***REMOVED*** & ServerErrorData;\n***REMOVED***\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n\nexport interface ServerErrorData {\n  serverCode: number;\n  serverMessage: string;\n  serverStatus: string;\n***REMOVED***\n\nexport type ServerError = FirebaseError & ServerErrorData;\n\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nexport function isServerError(error: unknown): error is ServerError {\n  return (\n    error instanceof FirebaseError &&\n    error.code.includes(ErrorCode.REQUEST_FAILED)\n  );\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp ***REMOVED*** from '@firebase/app-types';\nimport { AppConfig ***REMOVED*** from '../interfaces/app-config';\nimport { ERROR_FACTORY, ErrorCode ***REMOVED*** from '../util/errors';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES);\n***REMOVED***\n\n  const appName = app.name;\n  const { projectId, apiKey, appId ***REMOVED*** = app.options;\n\n  if (!appName || !projectId || !apiKey || !appId) {\n    throw ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES);\n***REMOVED***\n\n  return { appName, projectId, apiKey, appId ***REMOVED***;\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError ***REMOVED*** from '@firebase/util';\nimport { GenerateAuthTokenResponse ***REMOVED*** from '../interfaces/api-response';\nimport { AppConfig ***REMOVED*** from '../interfaces/app-config';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry,\n  RequestStatus\n***REMOVED*** from '../interfaces/installation-entry';\nimport {\n  INSTALLATIONS_API_URL,\n  INTERNAL_AUTH_VERSION\n***REMOVED*** from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode ***REMOVED*** from '../util/errors';\n\nexport function getInstallationsEndpoint({ projectId ***REMOVED***: AppConfig): string {\n  return `${INSTALLATIONS_API_URL***REMOVED***/projects/${projectId***REMOVED***/installations`;\n***REMOVED***\n\nexport function extractAuthTokenInfoFromResponse(\n  response: GenerateAuthTokenResponse\n): CompletedAuthToken {\n  return {\n    token: response.token,\n    requestStatus: RequestStatus.COMPLETED,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n***REMOVED***\n***REMOVED***\n\nexport async function getErrorFromResponse(\n  requestName: string,\n  response: Response\n): Promise<FirebaseError> {\n  const responseJson: ErrorResponse = await response.json();\n  const errorData = responseJson.error;\n  return ERROR_FACTORY.create(ErrorCode.REQUEST_FAILED, {\n    requestName,\n    serverCode: errorData.code,\n    serverMessage: errorData.message,\n    serverStatus: errorData.status\n***REMOVED***);\n***REMOVED***\n\nexport function getHeaders({ apiKey ***REMOVED***: AppConfig): Headers {\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n***REMOVED***);\n***REMOVED***\n\nexport function getHeadersWithAuth(\n  appConfig: AppConfig,\n  { refreshToken ***REMOVED***: RegisteredInstallationEntry\n): Headers {\n  const headers = getHeaders(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n***REMOVED***\n\nexport interface ErrorResponse {\n  error: {\n    code: number;\n    message: string;\n    status: string;\n***REMOVED***\n***REMOVED***\n\n/**\n * Calls the passed in fetch wrapper and returns the response.\n * If the returned response has a status of 5xx, re-runs the function once and\n * returns the response.\n */\nexport async function retryIfServerError(\n  fn: () => Promise<Response>\n): Promise<Response> {\n  const result = await fn();\n\n  if (result.status >= 500 && result.status < 600) {\n    // Internal Server Error. Retry request.\n    return fn();\n***REMOVED***\n\n  return result;\n***REMOVED***\n\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn: string): number {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n***REMOVED***\n\nfunction getAuthorizationHeader(refreshToken: string): string {\n  return `${INTERNAL_AUTH_VERSION***REMOVED*** ${refreshToken***REMOVED***`;\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n***REMOVED***);\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function bufferToBase64UrlSafe(array: Uint8Array): string {\n  const b64 = btoa(String.fromCharCode(...array));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bufferToBase64UrlSafe ***REMOVED*** from './buffer-to-base64-url-safe';\n\nexport const VALID_FID_PATTERN = /^[cdef][\\w-]{21***REMOVED***$/;\nexport const INVALID_FID = '';\n\n/**\n * Generates a new FID using random values from Web Crypto API.\n * Returns an empty string if FID generation fails for any reason.\n */\nexport function generateFid(): string {\n  try {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    const fidByteArray = new Uint8Array(17);\n    const crypto =\n      self.crypto || ((self as unknown) as { msCrypto: Crypto ***REMOVED***).msCrypto;\n    crypto.getRandomValues(fidByteArray);\n\n    // Replace the first 4 random bits with the constant FID header of 0b0111.\n    fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\n\n    const fid = encode(fidByteArray);\n\n    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n***REMOVED*** catch {\n    // FID generation errored\n    return INVALID_FID;\n***REMOVED***\n***REMOVED***\n\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray: Uint8Array): string {\n  const b64String = bufferToBase64UrlSafe(fidByteArray);\n\n  // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n  return b64String.substr(0, 22);\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DB, openDb ***REMOVED*** from 'idb';\nimport { AppConfig ***REMOVED*** from '../interfaces/app-config';\nimport { InstallationEntry ***REMOVED*** from '../interfaces/installation-entry';\n\nconst DATABASE_NAME = 'firebase-installations-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\n\nlet dbPromise: Promise<DB> | null = null;\nfunction getDbPromise(): Promise<DB> {\n  if (!dbPromise) {\n    dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, upgradeDB => {\n      // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (upgradeDB.oldVersion) {\n        case 0:\n          upgradeDB.createObjectStore(OBJECT_STORE_NAME);\n    ***REMOVED***\n  ***REMOVED***);\n***REMOVED***\n  return dbPromise;\n***REMOVED***\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function get(\n  appConfig: AppConfig\n): Promise<InstallationEntry | undefined> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  return db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key);\n***REMOVED***\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function set<ValueType extends InstallationEntry>(\n  appConfig: AppConfig,\n  value: ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).put(value, key);\n  await tx.complete;\n  return value;\n***REMOVED***\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function remove(appConfig: AppConfig): Promise<void> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.complete;\n***REMOVED***\n\n/**\n * Atomically updates a record with the result of updateFn, which gets\n * called with the current value. If newValue is undefined, the record is\n * deleted instead.\n * @return Updated value\n */\nexport async function update<ValueType extends InstallationEntry | undefined>(\n  appConfig: AppConfig,\n  updateFn: (previousValue: InstallationEntry | undefined) => ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const store = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue: InstallationEntry | undefined = await store.get(key);\n  const newValue = updateFn(oldValue);\n\n  if (newValue === undefined) {\n    await store.delete(key);\n***REMOVED*** else {\n    await store.put(newValue, key);\n***REMOVED***\n\n  await tx.complete;\n  return newValue;\n***REMOVED***\n\nexport async function clear(): Promise<void> {\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).clear();\n  await tx.complete;\n***REMOVED***\n\nfunction getKey(appConfig: AppConfig): string {\n  return `${appConfig.appName***REMOVED***!${appConfig.appId***REMOVED***`;\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createInstallation ***REMOVED*** from '../api/create-installation';\nimport { AppConfig ***REMOVED*** from '../interfaces/app-config';\nimport {\n  InProgressInstallationEntry,\n  InstallationEntry,\n  RequestStatus,\n  RegisteredInstallationEntry\n***REMOVED*** from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS ***REMOVED*** from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError ***REMOVED*** from '../util/errors';\nimport { sleep ***REMOVED*** from '../util/sleep';\nimport { generateFid, INVALID_FID ***REMOVED*** from './generate-fid';\nimport { remove, set, update ***REMOVED*** from './idb-manager';\n\nexport interface InstallationEntryWithRegistrationPromise {\n  installationEntry: InstallationEntry;\n  registrationPromise?: Promise<RegisteredInstallationEntry>;\n***REMOVED***\n\n/**\n * Updates and returns the InstallationEntry from the database.\n * Also triggers a registration request if it is necessary and possible.\n */\nexport async function getInstallationEntry(\n  appConfig: AppConfig\n): Promise<InstallationEntryWithRegistrationPromise> {\n  let registrationPromise: Promise<RegisteredInstallationEntry> | undefined;\n\n  const installationEntry = await update(appConfig, oldEntry => {\n    const installationEntry = updateOrCreateInstallationEntry(oldEntry);\n    const entryWithPromise = triggerRegistrationIfNecessary(\n      appConfig,\n      installationEntry\n    );\n    registrationPromise = entryWithPromise.registrationPromise;\n    return entryWithPromise.installationEntry;\n***REMOVED***);\n\n  if (installationEntry.fid === INVALID_FID) {\n    // FID generation failed. Waiting for the FID from the server.\n    return { installationEntry: await registrationPromise! ***REMOVED***;\n***REMOVED***\n\n  return {\n    installationEntry,\n    registrationPromise\n***REMOVED***\n***REMOVED***\n\n/**\n * Creates a new Installation Entry if one does not exist.\n * Also clears timed out pending requests.\n */\nfunction updateOrCreateInstallationEntry(\n  oldEntry: InstallationEntry | undefined\n): InstallationEntry {\n  const entry: InstallationEntry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: RequestStatus.NOT_STARTED\n***REMOVED***\n\n  return clearTimedOutRequest(entry);\n***REMOVED***\n\n/**\n * If the Firebase Installation is not registered yet, this will trigger the\n * registration and return an InProgressInstallationEntry.\n */\nfunction triggerRegistrationIfNecessary(\n  appConfig: AppConfig,\n  installationEntry: InstallationEntry\n): InstallationEntryWithRegistrationPromise {\n  if (installationEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n    if (!navigator.onLine) {\n      // Registration required but app is offline.\n      const registrationPromiseWithError = Promise.reject(\n        ERROR_FACTORY.create(ErrorCode.APP_OFFLINE)\n      );\n      return {\n        installationEntry,\n        registrationPromise: registrationPromiseWithError\n    ***REMOVED***\n  ***REMOVED***\n\n    // Try registering. Change status to IN_PROGRESS.\n    const inProgressEntry: InProgressInstallationEntry = {\n      fid: installationEntry.fid,\n      registrationStatus: RequestStatus.IN_PROGRESS,\n      registrationTime: Date.now()\n  ***REMOVED***\n    const registrationPromise = registerInstallation(\n      appConfig,\n      inProgressEntry\n    );\n    return { installationEntry: inProgressEntry, registrationPromise ***REMOVED***;\n***REMOVED*** else if (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS\n  ) {\n    return {\n      installationEntry,\n      registrationPromise: waitUntilFidRegistration(appConfig)\n  ***REMOVED***\n***REMOVED*** else {\n    return { installationEntry ***REMOVED***;\n***REMOVED***\n***REMOVED***\n\n/** This will be executed only once for each new Firebase Installation. */\nasync function registerInstallation(\n  appConfig: AppConfig,\n  installationEntry: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  try {\n    const registeredInstallationEntry = await createInstallation(\n      appConfig,\n      installationEntry\n    );\n    return set(appConfig, registeredInstallationEntry);\n***REMOVED*** catch (e) {\n    if (isServerError(e) && e.serverCode === 409) {\n      // Server returned a \"FID can not be used\" error.\n      // Generate a new ID next time.\n      await remove(appConfig);\n  ***REMOVED*** else {\n      // Registration failed. Set FID as not registered.\n      await set(appConfig, {\n        fid: installationEntry.fid,\n        registrationStatus: RequestStatus.NOT_STARTED\n    ***REMOVED***);\n  ***REMOVED***\n    throw e;\n***REMOVED***\n***REMOVED***\n\n/** Call if FID registration is pending. */\nasync function waitUntilFidRegistration(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry: InstallationEntry = await updateInstallationRequest(appConfig);\n  while (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n    // createInstallation request still in progress.\n    await sleep(100);\n\n    entry = await updateInstallationRequest(appConfig);\n***REMOVED***\n\n  if (entry.registrationStatus === RequestStatus.NOT_STARTED) {\n    throw ERROR_FACTORY.create(ErrorCode.CREATE_INSTALLATION_FAILED);\n***REMOVED***\n\n  return entry;\n***REMOVED***\n\n/**\n * Called only if there is a CreateInstallation request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * CreateInstallation request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateInstallationRequest(\n  appConfig: AppConfig\n): Promise<InstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!oldEntry) {\n      throw ERROR_FACTORY.create(ErrorCode.INSTALLATION_NOT_FOUND);\n  ***REMOVED***\n    return clearTimedOutRequest(oldEntry);\n***REMOVED***);\n***REMOVED***\n\nfunction clearTimedOutRequest(entry: InstallationEntry): InstallationEntry {\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: RequestStatus.NOT_STARTED\n  ***REMOVED***\n***REMOVED***\n\n  return entry;\n***REMOVED***\n\nfunction hasInstallationRequestTimedOut(\n  installationEntry: InstallationEntry\n): boolean {\n  return (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS &&\n    installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CreateInstallationResponse ***REMOVED*** from '../interfaces/api-response';\nimport { AppConfig ***REMOVED*** from '../interfaces/app-config';\nimport {\n  InProgressInstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n***REMOVED*** from '../interfaces/installation-entry';\nimport { INTERNAL_AUTH_VERSION, PACKAGE_VERSION ***REMOVED*** from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeaders,\n  getInstallationsEndpoint,\n  retryIfServerError\n***REMOVED*** from './common';\n\nexport async function createInstallation(\n  appConfig: AppConfig,\n  { fid ***REMOVED***: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  const endpoint = getInstallationsEndpoint(appConfig);\n\n  const headers = getHeaders(appConfig);\n  const body = {\n    fid,\n    authVersion: INTERNAL_AUTH_VERSION,\n    appId: appConfig.appId,\n    sdkVersion: PACKAGE_VERSION\n***REMOVED***\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n***REMOVED***\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: CreateInstallationResponse = await response.json();\n    const registeredInstallationEntry: RegisteredInstallationEntry = {\n      fid: responseValue.fid || fid,\n      registrationStatus: RequestStatus.COMPLETED,\n      refreshToken: responseValue.refreshToken,\n      authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n  ***REMOVED***\n    return registeredInstallationEntry;\n***REMOVED*** else {\n    throw await getErrorFromResponse('Create Installation', response);\n***REMOVED***\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenerateAuthTokenResponse ***REMOVED*** from '../interfaces/api-response';\nimport { AppConfig ***REMOVED*** from '../interfaces/app-config';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry\n***REMOVED*** from '../interfaces/installation-entry';\nimport { PACKAGE_VERSION ***REMOVED*** from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n***REMOVED*** from './common';\n\nexport async function generateAuthToken(\n  appConfig: AppConfig,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n  const body = {\n    installation: {\n      sdkVersion: PACKAGE_VERSION\n  ***REMOVED***\n***REMOVED***\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n***REMOVED***\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: GenerateAuthTokenResponse = await response.json();\n    const completedAuthToken: CompletedAuthToken = extractAuthTokenInfoFromResponse(\n      responseValue\n    );\n    return completedAuthToken;\n***REMOVED*** else {\n    throw await getErrorFromResponse('Generate Auth Token', response);\n***REMOVED***\n***REMOVED***\n\nfunction getGenerateAuthTokenEndpoint(\n  appConfig: AppConfig,\n  { fid ***REMOVED***: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)***REMOVED***/${fid***REMOVED***/authTokens:generate`;\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { generateAuthToken ***REMOVED*** from '../api/generate-auth-token';\nimport { AppConfig ***REMOVED*** from '../interfaces/app-config';\nimport {\n  AuthToken,\n  CompletedAuthToken,\n  InProgressAuthToken,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n***REMOVED*** from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS, TOKEN_EXPIRATION_BUFFER ***REMOVED*** from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError ***REMOVED*** from '../util/errors';\nimport { sleep ***REMOVED*** from '../util/sleep';\nimport { remove, set, update ***REMOVED*** from './idb-manager';\n\n/**\n * Returns a valid authentication token for the installation. Generates a new\n * token if one doesn't exist, is expired or about to expire.\n *\n * Should only be called if the Firebase Installation is registered.\n */\nexport async function refreshAuthToken(\n  appConfig: AppConfig,\n  forceRefresh = false\n): Promise<string> {\n  let tokenPromise: Promise<CompletedAuthToken> | undefined;\n  const entry = await update(appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n  ***REMOVED***\n\n    const oldAuthToken = oldEntry.authToken;\n    if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n      // There is a valid token in the DB.\n      return oldEntry;\n  ***REMOVED*** else if (oldAuthToken.requestStatus === RequestStatus.IN_PROGRESS) {\n      // There already is a token request in progress.\n      tokenPromise = waitUntilAuthTokenRequest(appConfig);\n      return oldEntry;\n  ***REMOVED*** else {\n      // No token or token expired.\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n    ***REMOVED***\n\n      const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n      tokenPromise = fetchAuthTokenFromServer(appConfig, inProgressEntry);\n      return inProgressEntry;\n  ***REMOVED***\n***REMOVED***);\n\n  const authToken: CompletedAuthToken = tokenPromise\n    ? await tokenPromise\n    : (entry.authToken as CompletedAuthToken);\n  return authToken.token;\n***REMOVED***\n\n/**\n * Call only if FID is registered and Auth Token request is in progress.\n */\nasync function waitUntilAuthTokenRequest(\n  appConfig: AppConfig\n): Promise<CompletedAuthToken> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry = await updateAuthTokenRequest(appConfig);\n  while (entry.authToken.requestStatus === RequestStatus.IN_PROGRESS) {\n    // generateAuthToken still in progress.\n    await sleep(100);\n\n    entry = await updateAuthTokenRequest(appConfig);\n***REMOVED***\n\n  const authToken = entry.authToken;\n  if (authToken.requestStatus === RequestStatus.NOT_STARTED) {\n    throw ERROR_FACTORY.create(ErrorCode.GENERATE_TOKEN_FAILED);\n***REMOVED*** else {\n    return authToken;\n***REMOVED***\n***REMOVED***\n\n/**\n * Called only if there is a GenerateAuthToken request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * GenerateAuthToken request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateAuthTokenRequest(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n  ***REMOVED***\n\n    const oldAuthToken = oldEntry.authToken;\n    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n      return {\n        ...oldEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED ***REMOVED***\n    ***REMOVED***\n  ***REMOVED***\n\n    return oldEntry;\n***REMOVED***);\n***REMOVED***\n\nasync function fetchAuthTokenFromServer(\n  appConfig: AppConfig,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  try {\n    const authToken = await generateAuthToken(appConfig, installationEntry);\n    const updatedInstallationEntry: RegisteredInstallationEntry = {\n      ...installationEntry,\n      authToken\n  ***REMOVED***\n    await set(appConfig, updatedInstallationEntry);\n    return authToken;\n***REMOVED*** catch (e) {\n    if (isServerError(e) && (e.serverCode === 401 || e.serverCode === 404)) {\n      // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n      // Generate a new ID next time.\n      await remove(appConfig);\n  ***REMOVED*** else {\n      const updatedInstallationEntry: RegisteredInstallationEntry = {\n        ...installationEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED ***REMOVED***\n    ***REMOVED***\n      await set(appConfig, updatedInstallationEntry);\n  ***REMOVED***\n    throw e;\n***REMOVED***\n***REMOVED***\n\nfunction isEntryRegistered(\n  installationEntry: InstallationEntry | undefined\n): installationEntry is RegisteredInstallationEntry {\n  return (\n    installationEntry !== undefined &&\n    installationEntry.registrationStatus === RequestStatus.COMPLETED\n  );\n***REMOVED***\n\nfunction isAuthTokenValid(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.COMPLETED &&\n    !isAuthTokenExpired(authToken)\n  );\n***REMOVED***\n\nfunction isAuthTokenExpired(authToken: CompletedAuthToken): boolean {\n  const now = Date.now();\n  return (\n    now < authToken.creationTime ||\n    authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER\n  );\n***REMOVED***\n\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(\n  oldEntry: RegisteredInstallationEntry\n): RegisteredInstallationEntry {\n  const inProgressAuthToken: InProgressAuthToken = {\n    requestStatus: RequestStatus.IN_PROGRESS,\n    requestTime: Date.now()\n***REMOVED***\n  return {\n    ...oldEntry,\n    authToken: inProgressAuthToken\n***REMOVED***\n***REMOVED***\n\nfunction hasAuthTokenRequestTimedOut(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.IN_PROGRESS &&\n    authToken.requestTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp ***REMOVED*** from '@firebase/app-types';\nimport { extractAppConfig ***REMOVED*** from '../helpers/extract-app-config';\nimport { getInstallationEntry ***REMOVED*** from '../helpers/get-installation-entry';\nimport { refreshAuthToken ***REMOVED*** from '../helpers/refresh-auth-token';\nimport { AppConfig ***REMOVED*** from '../interfaces/app-config';\nimport { RequestStatus ***REMOVED*** from '../interfaces/installation-entry';\nimport { ERROR_FACTORY, ErrorCode ***REMOVED*** from '../util/errors';\n\nexport async function getToken(\n  app: FirebaseApp,\n  forceRefresh = false\n): Promise<string> {\n  const appConfig = extractAppConfig(app);\n\n  await completeInstallationRegistration(appConfig);\n\n  // At this point we either have a Registered Installation in the DB, or we've\n  // already thrown an error.\n  return refreshAuthToken(appConfig, forceRefresh);\n***REMOVED***\n\nasync function completeInstallationRegistration(\n  appConfig: AppConfig\n): Promise<void> {\n  const { installationEntry, registrationPromise ***REMOVED*** = await getInstallationEntry(\n    appConfig\n  );\n\n  if (registrationPromise) {\n    // A createInstallation request is in progress. Wait until it finishes.\n    await registrationPromise;\n***REMOVED*** else if (installationEntry.registrationStatus !== RequestStatus.COMPLETED) {\n    // Installation ID can't be registered.\n    throw ERROR_FACTORY.create(ErrorCode.CREATE_INSTALLATION_FAILED);\n***REMOVED***\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig ***REMOVED*** from '../interfaces/app-config';\nimport { RegisteredInstallationEntry ***REMOVED*** from '../interfaces/installation-entry';\nimport {\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n***REMOVED*** from './common';\n\nexport async function deleteInstallation(\n  appConfig: AppConfig,\n  installationEntry: RegisteredInstallationEntry\n): Promise<void> {\n  const endpoint = getDeleteEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n  const request: RequestInit = {\n    method: 'DELETE',\n    headers\n***REMOVED***\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (!response.ok) {\n    throw await getErrorFromResponse('Delete Installation', response);\n***REMOVED***\n***REMOVED***\n\nfunction getDeleteEndpoint(\n  appConfig: AppConfig,\n  { fid ***REMOVED***: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)***REMOVED***/${fid***REMOVED***`;\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport {\n  _FirebaseNamespace,\n  FirebaseServiceFactory\n***REMOVED*** from '@firebase/app-types/private';\nimport { FirebaseInstallations ***REMOVED*** from '@firebase/installations-types';\n\nimport { deleteInstallation, getId, getToken ***REMOVED*** from './functions';\nimport { extractAppConfig ***REMOVED*** from './helpers/extract-app-config';\n\nexport function registerInstallations(instance: _FirebaseNamespace): void {\n  const installationsName = 'installations';\n\n  const factoryMethod: FirebaseServiceFactory = app => {\n    // Throws if app isn't configured properly.\n    extractAppConfig(app);\n\n    return {\n      app,\n      getId: () => getId(app),\n      getToken: (forceRefresh?: boolean) => getToken(app, forceRefresh),\n      delete: () => deleteInstallation(app)\n  ***REMOVED***\n***REMOVED***\n\n  instance.INTERNAL.registerService(installationsName, factoryMethod);\n***REMOVED***\n\nregisterInstallations(firebase as _FirebaseNamespace);\n\n/**\n * Define extension behavior of `registerInstallations`\n */\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    installations(app?: FirebaseApp): FirebaseInstallations;\n***REMOVED***\n  interface FirebaseApp {\n    installations(): FirebaseInstallations;\n***REMOVED***\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp ***REMOVED*** from '@firebase/app-types';\nimport { extractAppConfig ***REMOVED*** from '../helpers/extract-app-config';\nimport { getInstallationEntry ***REMOVED*** from '../helpers/get-installation-entry';\nimport { refreshAuthToken ***REMOVED*** from '../helpers/refresh-auth-token';\nimport { RequestStatus ***REMOVED*** from '../interfaces/installation-entry';\n\nexport async function getId(app: FirebaseApp): Promise<string> {\n  const appConfig = extractAppConfig(app);\n  const { installationEntry, registrationPromise ***REMOVED*** = await getInstallationEntry(\n    appConfig\n  );\n\n  if (registrationPromise) {\n    // Suppress registration errors as they are not a problem for getId.\n    registrationPromise.catch(() => {***REMOVED***);\n***REMOVED***\n\n  if (installationEntry.registrationStatus === RequestStatus.COMPLETED) {\n    // If the installation is already registered, update the authentication\n    // token if needed. Suppress errors as they are not relevant to getId.\n    refreshAuthToken(appConfig).catch(() => {***REMOVED***);\n***REMOVED***\n\n  return installationEntry.fid;\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp ***REMOVED*** from '@firebase/app-types';\nimport { deleteInstallation as deleteInstallationRequest ***REMOVED*** from '../api/delete-installation';\nimport { extractAppConfig ***REMOVED*** from '../helpers/extract-app-config';\nimport { remove, update ***REMOVED*** from '../helpers/idb-manager';\nimport { RequestStatus ***REMOVED*** from '../interfaces/installation-entry';\nimport { ERROR_FACTORY, ErrorCode ***REMOVED*** from '../util/errors';\n\nexport async function deleteInstallation(app: FirebaseApp): Promise<void> {\n  const appConfig = extractAppConfig(app);\n\n  const entry = await update(appConfig, oldEntry => {\n    if (oldEntry && oldEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n      // Delete the unregistered entry without sending a deleteInstallation request.\n      return undefined;\n  ***REMOVED***\n    return oldEntry;\n***REMOVED***);\n\n  if (entry) {\n    if (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n      // Can't delete while trying to register.\n      throw ERROR_FACTORY.create(ErrorCode.DELETE_PENDING_REGISTRATION);\n  ***REMOVED*** else if (entry.registrationStatus === RequestStatus.COMPLETED) {\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n    ***REMOVED*** else {\n        await deleteInstallationRequest(appConfig, entry);\n        await remove(appConfig);\n    ***REMOVED***\n  ***REMOVED***\n***REMOVED***\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode ***REMOVED*** from '../utils/errors';\n\ndeclare global {\n  interface Window {\n    PerformanceObserver: typeof PerformanceObserver;\n    perfMetrics?: { onFirstInputDelay: Function ***REMOVED***;\n***REMOVED***\n***REMOVED***\n\nlet apiInstance: Api | undefined;\nlet windowInstance: Window | undefined;\n\nexport type EntryType =\n  | 'mark'\n  | 'measure'\n  | 'paint'\n  | 'resource'\n  | 'frame'\n  | 'navigation';\n\n/**\n * This class holds a reference to various browser related objects injected by set methods.\n */\nexport class Api {\n  private performance: Performance;\n  /** PreformanceObserver constructor function. */\n  private PerformanceObserver: typeof PerformanceObserver;\n  private windowLocation: Location;\n  onFirstInputDelay?: Function;\n  localStorage!: Storage;\n  document: Document;\n  navigator: Navigator;\n\n  constructor(window?: Window) {\n    if (!window) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_WINDOW);\n  ***REMOVED***\n    this.performance = window.performance;\n    this.PerformanceObserver = window.PerformanceObserver;\n    this.windowLocation = window.location;\n    this.navigator = window.navigator;\n    this.document = window.document;\n    if (this.navigator && this.navigator.cookieEnabled) {\n      // If user blocks cookies on the browser, accessing localStorage will throw an exception.\n      this.localStorage = window.localStorage;\n  ***REMOVED***\n    if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\n      this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\n  ***REMOVED***\n***REMOVED***\n\n  getUrl(): string {\n    // Do not capture the string query part of url.\n    return this.windowLocation.href.split('?')[0];\n***REMOVED***\n\n  mark(name: string): void {\n    if (!this.performance || !this.performance.mark) {\n      return;\n  ***REMOVED***\n    this.performance.mark(name);\n***REMOVED***\n\n  measure(measureName: string, mark1: string, mark2: string): void {\n    if (!this.performance || !this.performance.measure) {\n      return;\n  ***REMOVED***\n    this.performance.measure(measureName, mark1, mark2);\n***REMOVED***\n\n  getEntriesByType(type: EntryType): PerformanceEntry[] {\n    if (!this.performance || !this.performance.getEntriesByType) {\n      return [];\n  ***REMOVED***\n    return this.performance.getEntriesByType(type);\n***REMOVED***\n\n  getEntriesByName(name: string): PerformanceEntry[] {\n    if (!this.performance || !this.performance.getEntriesByName) {\n      return [];\n  ***REMOVED***\n    return this.performance.getEntriesByName(name);\n***REMOVED***\n\n  getTimeOrigin(): number {\n    // Polyfill the time origin with performance.timing.navigationStart.\n    return (\n      this.performance &&\n      (this.performance.timeOrigin || this.performance.timing.navigationStart)\n    );\n***REMOVED***\n\n  requiredApisAvailable(): boolean {\n    if (fetch && Promise && this.navigator && this.navigator.cookieEnabled) {\n      return true;\n  ***REMOVED***\n    return false;\n***REMOVED***\n\n  setupObserver(\n    entryType: EntryType,\n    callback: (entry: PerformanceEntry) => void\n  ): void {\n    if (!this.PerformanceObserver) {\n      return;\n  ***REMOVED***\n    const observer = new this.PerformanceObserver(list => {\n      for (const entry of list.getEntries()) {\n        // `entry` is a PerformanceEntry instance.\n        callback(entry);\n    ***REMOVED***\n  ***REMOVED***);\n\n    // Start observing the entry types you care about.\n    observer.observe({ entryTypes: [entryType] ***REMOVED***);\n***REMOVED***\n\n  static getInstance(): Api {\n    if (apiInstance === undefined) {\n      apiInstance = new Api(windowInstance);\n  ***REMOVED***\n    return apiInstance;\n***REMOVED***\n***REMOVED***\n\nexport function setupApi(window: Window): void {\n  windowInstance = window;\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp ***REMOVED*** from '@firebase/app-types';\nimport { ERROR_FACTORY, ErrorCode ***REMOVED*** from '../utils/errors';\n\nlet settingsServiceInstance: SettingsService | undefined;\n\nexport class SettingsService {\n  // The variable which controls logging of automatic traces and HTTP/S network monitoring.\n  instrumentationEnabled = true;\n\n  // The variable which controls logging of custom traces.\n  dataCollectionEnabled = true;\n\n  // Configuration flags set through remote config.\n  loggingEnabled = false;\n  // Sampling rate between 0 and 1.\n  tracesSamplingRate = 1;\n  networkRequestsSamplingRate = 1;\n  // Address of logging service.\n  logEndPointUrl =\n    'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto';\n  logSource = 462;\n\n  // Flags which control per session logging of traces and network requests.\n  logTraceAfterSampling = false;\n  logNetworkAfterSampling = false;\n\n  // TTL of config retrieved from remote config in hours.\n  configTimeToLive = 12;\n\n  firebaseAppInstance!: FirebaseApp;\n\n  getAppId(): string {\n    const appId =\n      this.firebaseAppInstance &&\n      this.firebaseAppInstance.options &&\n      this.firebaseAppInstance.options.appId;\n    if (!appId) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_APP_ID);\n  ***REMOVED***\n    return appId;\n***REMOVED***\n\n  getProjectId(): string {\n    const projectId =\n      this.firebaseAppInstance &&\n      this.firebaseAppInstance.options &&\n      this.firebaseAppInstance.options.projectId;\n    if (!projectId) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_PROJECT_ID);\n  ***REMOVED***\n    return projectId;\n***REMOVED***\n\n  getApiKey(): string {\n    const apiKey =\n      this.firebaseAppInstance &&\n      this.firebaseAppInstance.options &&\n      this.firebaseAppInstance.options.apiKey;\n    if (!apiKey) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_API_KEY);\n  ***REMOVED***\n    return apiKey;\n***REMOVED***\n\n  static getInstance(): SettingsService {\n    if (settingsServiceInstance === undefined) {\n      settingsServiceInstance = new SettingsService();\n  ***REMOVED***\n    return settingsServiceInstance;\n***REMOVED***\n***REMOVED***\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { version ***REMOVED*** from '../package.json';\n\nexport const SDK_VERSION = version;\n/** The prefix for start User Timing marks used for creating Traces. */\nexport const TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\n/** The prefix for stop User Timing marks used for creating Traces. */\nexport const TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\n/** The prefix for User Timing measure used for creating Traces. */\nexport const TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\n/** The prefix for out of the box page load Trace name. */\nexport const OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\n\nexport const FIRST_PAINT_COUNTER_NAME = '_fp';\n\nexport const FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\n\nexport const FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\n\nexport const CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\n\nexport const CONFIG_EXPIRY_LOCAL_STORAGE_KEY =\n  '@firebase/performance/configexpire';\n\nexport const SERVICE = 'performance';\nexport const SERVICE_NAME = 'Performance';\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory ***REMOVED*** from '@firebase/util';\nimport { SERVICE, SERVICE_NAME ***REMOVED*** from '../constants';\n\nexport const enum ErrorCode {\n  TRACE_STARTED_BEFORE = 'trace started',\n  TRACE_STOPPED_BEFORE = 'trace stopped',\n  NO_WINDOW = 'no window',\n  NO_APP_ID = 'no app id',\n  NO_PROJECT_ID = 'no project id',\n  NO_API_KEY = 'no api key',\n  INVALID_CC_LOG = 'invalid cc log',\n  FB_NOT_DEFAULT = 'FB not default',\n  RC_NOT_OK = 'RC response not ok',\n  INVALID_ATTRIBUTE_NAME = 'invalid attribute name',\n  INVALID_ATTRIBUTE_VALUE = 'invalid attribute value',\n  INVALID_CUSTOM_METRIC_NAME = 'invalide custom metric name'\n***REMOVED***\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string ***REMOVED*** = {\n  [ErrorCode.TRACE_STARTED_BEFORE]: 'Trace {$traceName***REMOVED*** was started before.',\n  [ErrorCode.TRACE_STOPPED_BEFORE]: 'Trace {$traceName***REMOVED*** is not running.',\n  [ErrorCode.NO_WINDOW]: 'Window is not available.',\n  [ErrorCode.NO_APP_ID]: 'App id is not available.',\n  [ErrorCode.NO_PROJECT_ID]: 'Project id is not available.',\n  [ErrorCode.NO_API_KEY]: 'Api key is not available.',\n  [ErrorCode.INVALID_CC_LOG]: 'Attempted to queue invalid cc event',\n  [ErrorCode.FB_NOT_DEFAULT]:\n    'Performance can only start when Firebase app instance is the default one.',\n  [ErrorCode.RC_NOT_OK]: 'RC response is not ok',\n  [ErrorCode.INVALID_ATTRIBUTE_NAME]:\n    'Attribute name {$attributeName***REMOVED*** is invalid.',\n  [ErrorCode.INVALID_ATTRIBUTE_VALUE]:\n    'Attribute value {$attributeValue***REMOVED*** is invalid.',\n  [ErrorCode.INVALID_CUSTOM_METRIC_NAME]:\n    'Custom metric name {$customMetricName***REMOVED*** is invalid'\n***REMOVED***;\n\ninterface ErrorParams {\n  [ErrorCode.TRACE_STARTED_BEFORE]: { traceName: string ***REMOVED***;\n  [ErrorCode.TRACE_STOPPED_BEFORE]: { traceName: string ***REMOVED***;\n  [ErrorCode.INVALID_ATTRIBUTE_NAME]: { attributeName: string ***REMOVED***;\n  [ErrorCode.INVALID_ATTRIBUTE_VALUE]: { attributeValue: string ***REMOVED***;\n  [ErrorCode.INVALID_CUSTOM_METRIC_NAME]: { customMetricName: string ***REMOVED***;\n***REMOVED***\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport '@firebase/installations';\nimport { SettingsService ***REMOVED*** from './settings_service';\n\nlet iid: string | undefined;\nlet authToken: string | undefined;\n\nexport function getIidPromise(): Promise<string> {\n  const iidPromise = SettingsService.getInstance()\n    .firebaseAppInstance.installations()\n    .getId();\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  iidPromise.then((iidVal: string) => {\n    iid = iidVal;\n***REMOVED***);\n  return iidPromise;\n***REMOVED***\n\n// This method should be used after the iid is retrieved by getIidPromise method.\nexport function getIid(): string | undefined {\n  return iid;\n***REMOVED***\n\nexport function getAuthTokenPromise(): Promise<string> {\n  const authTokenPromise = SettingsService.getInstance()\n    .firebaseAppInstance.installations()\n    .getToken();\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  authTokenPromise.then((authTokenVal: string) => {\n    authToken = authTokenVal;\n***REMOVED***);\n  return authTokenPromise;\n***REMOVED***\n\nexport function getAuthenticationToken(): string | undefined {\n  return authToken;\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Api ***REMOVED*** from '../services/api_service';\n\n// The values and orders of the following enums should not be changed.\nconst enum ServiceWorkerStatus {\n  UNKNOWN = 0,\n  UNSUPPORTED = 1,\n  CONTROLLED = 2,\n  UNCONTROLLED = 3\n***REMOVED***\n\nexport enum VisibilityState {\n  UNKNOWN = 0,\n  VISIBLE = 1,\n  HIDDEN = 2,\n  PRERENDER = 3,\n  UNLOADED = 4\n***REMOVED***\n\nconst enum EffectiveConnectionType {\n  UNKNOWN = 0,\n  CONNECTION_SLOW_2G = 1,\n  CONNECTION_2G = 2,\n  CONNECTION_3G = 3,\n  CONNECTION_4G = 4\n***REMOVED***\n\nconst RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\nconst ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\w*$');\nconst MAX_ATTRIBUTE_NAME_LENGTH = 40;\nconst MAX_ATTRIBUTE_VALUE_LENGTH = 100;\n\nexport function getServiceWorkerStatus(): ServiceWorkerStatus {\n  const navigator = Api.getInstance().navigator;\n  if ('serviceWorker' in navigator) {\n    if (navigator.serviceWorker.controller) {\n      return ServiceWorkerStatus.CONTROLLED;\n  ***REMOVED*** else {\n      return ServiceWorkerStatus.UNCONTROLLED;\n  ***REMOVED***\n***REMOVED*** else {\n    return ServiceWorkerStatus.UNSUPPORTED;\n***REMOVED***\n***REMOVED***\n\nexport function getVisibilityState(): VisibilityState {\n  const document = Api.getInstance().document;\n  const visibilityState = document.visibilityState;\n  switch (visibilityState) {\n    case 'visible':\n      return VisibilityState.VISIBLE;\n    case 'hidden':\n      return VisibilityState.HIDDEN;\n    case 'prerender':\n      return VisibilityState.PRERENDER;\n    default:\n      return VisibilityState.UNKNOWN;\n***REMOVED***\n***REMOVED***\n\nexport function getEffectiveConnectionType(): EffectiveConnectionType {\n  const navigator = Api.getInstance().navigator;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const navigatorConnection = (navigator as any).connection;\n  const effectiveType =\n    navigatorConnection && navigatorConnection.effectiveType;\n  switch (effectiveType) {\n    case 'slow-2g':\n      return EffectiveConnectionType.CONNECTION_SLOW_2G;\n    case '2g':\n      return EffectiveConnectionType.CONNECTION_2G;\n    case '3g':\n      return EffectiveConnectionType.CONNECTION_3G;\n    case '4g':\n      return EffectiveConnectionType.CONNECTION_4G;\n    default:\n      return EffectiveConnectionType.UNKNOWN;\n***REMOVED***\n***REMOVED***\n\nexport function isValidCustomAttributeName(name: string): boolean {\n  if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\n    return false;\n***REMOVED***\n  const matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(prefix =>\n    name.startsWith(prefix)\n  );\n  return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\n***REMOVED***\n\nexport function isValidCustomAttributeValue(value: string): boolean {\n  return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel ***REMOVED*** from '@firebase/logger';\nimport { SERVICE_NAME ***REMOVED*** from '../constants';\n\nexport const consoleLogger = new Logger(SERVICE_NAME);\nconsoleLogger.logLevel = LogLevel.INFO;\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SettingsService ***REMOVED*** from './settings_service';\nimport {\n  SDK_VERSION,\n  CONFIG_LOCAL_STORAGE_KEY,\n  CONFIG_EXPIRY_LOCAL_STORAGE_KEY\n***REMOVED*** from '../constants';\nimport { Api ***REMOVED*** from './api_service';\nimport { getAuthTokenPromise ***REMOVED*** from './iid_service';\nimport { consoleLogger ***REMOVED*** from '../utils/console_logger';\nimport { ERROR_FACTORY, ErrorCode ***REMOVED*** from '../utils/errors';\n\nconst REMOTE_CONFIG_SDK_VERSION = '0.0.1';\n\ninterface SecondaryConfig {\n  loggingEnabled?: boolean;\n  logEndPointUrl?: string;\n  logSource?: number;\n  tracesSamplingRate?: number;\n  networkRequestsSamplingRate?: number;\n***REMOVED***\n\n// These values will be used if the remote config object is successfully\n// retrieved, but the template does not have these fields.\nconst SECONDARY_CONFIGS: SecondaryConfig = {\n  loggingEnabled: true\n***REMOVED***;\n\n/* eslint-disable camelcase */\ninterface RemoteConfigTemplate {\n  fpr_enabled?: string;\n  fpr_log_source?: string;\n  fpr_log_endpoint_url?: string;\n  fpr_vc_network_request_sampling_rate?: string;\n  fpr_vc_trace_sampling_rate?: string;\n  fpr_vc_session_sampling_rate?: string;\n***REMOVED***\n/* eslint-enable camelcase */\n\ninterface RemoteConfigResponse {\n  entries?: RemoteConfigTemplate;\n  state?: string;\n***REMOVED***\n\nconst FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\n\nexport function getConfig(iid: string): Promise<void> {\n  const config = getStoredConfig();\n  if (config) {\n    processConfig(config);\n    return Promise.resolve();\n***REMOVED***\n\n  return getRemoteConfig(iid)\n    .then(config => processConfig(config))\n    .then(\n      config => storeConfig(config),\n      /** Do nothing for error, use defaults set in settings service. */ () => {***REMOVED***\n    );\n***REMOVED***\n\nfunction getStoredConfig(): RemoteConfigResponse | undefined {\n  const localStorage = Api.getInstance().localStorage;\n  const expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\n  if (!expiryString || !configValid(expiryString)) {\n    return;\n***REMOVED***\n\n  const configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\n  if (!configStringified) {\n    return;\n***REMOVED***\n  try {\n    const configResponse: RemoteConfigResponse = JSON.parse(configStringified);\n    return configResponse;\n***REMOVED*** catch {\n    return;\n***REMOVED***\n***REMOVED***\n\nfunction storeConfig(config: RemoteConfigResponse | undefined): void {\n  if (!config) {\n    return;\n***REMOVED***\n  const localStorage = Api.getInstance().localStorage;\n  localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\n  localStorage.setItem(\n    CONFIG_EXPIRY_LOCAL_STORAGE_KEY,\n    String(\n      Date.now() +\n        SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000\n    )\n  );\n***REMOVED***\n\nconst COULD_NOT_GET_CONFIG_MSG =\n  'Could not fetch config, will use default configs';\n\nfunction getRemoteConfig(\n  iid: string\n): Promise<RemoteConfigResponse | undefined> {\n  // Perf needs auth token only to retrieve remote config.\n  return getAuthTokenPromise()\n    .then(authToken => {\n      const projectId = SettingsService.getInstance().getProjectId();\n      const configEndPoint = `https://firebaseremoteconfig.googleapis.com/v1/projects/${projectId***REMOVED***/namespaces/fireperf:fetch?key=${SettingsService.getInstance().getApiKey()***REMOVED***`;\n      const request = new Request(configEndPoint, {\n        method: 'POST',\n        headers: {\n          Authorization: `${FIS_AUTH_PREFIX***REMOVED*** ${authToken***REMOVED***`\n      ***REMOVED***,\n        /* eslint-disable camelcase */\n        body: JSON.stringify({\n          app_instance_id: iid,\n          app_instance_id_token: authToken,\n          app_id: SettingsService.getInstance().getAppId(),\n          app_version: SDK_VERSION,\n          sdk_version: REMOTE_CONFIG_SDK_VERSION\n      ***REMOVED***)\n        /* eslint-enable camelcase */\n    ***REMOVED***);\n      return fetch(request).then(response => {\n        if (response.ok) {\n          return response.json() as RemoteConfigResponse;\n      ***REMOVED***\n        // In case response is not ok. This will be caught by catch.\n        throw ERROR_FACTORY.create(ErrorCode.RC_NOT_OK);\n    ***REMOVED***);\n  ***REMOVED***)\n    .catch(() => {\n      consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\n      return undefined;\n  ***REMOVED***);\n***REMOVED***\n\n/**\n * Processes config coming either from calling RC or from local storage.\n * This method only runs if call is successful or config in storage\n * is valie.\n */\nfunction processConfig(\n  config: RemoteConfigResponse | undefined\n): RemoteConfigResponse | undefined {\n  if (!config) {\n    return config;\n***REMOVED***\n  const settingsServiceInstance = SettingsService.getInstance();\n  const entries = config.entries || {***REMOVED***;\n  if (entries.fpr_enabled !== undefined) {\n    // TODO: Change the assignment of loggingEnabled once the received type is known.\n    settingsServiceInstance.loggingEnabled =\n      String(entries.fpr_enabled) === 'true';\n***REMOVED*** else if (SECONDARY_CONFIGS.loggingEnabled !== undefined) {\n    // Config retrieved successfully, but there is no fpr_enabled in template.\n    // Use secondary configs value.\n    settingsServiceInstance.loggingEnabled = SECONDARY_CONFIGS.loggingEnabled;\n***REMOVED***\n  if (entries.fpr_log_source) {\n    settingsServiceInstance.logSource = Number(entries.fpr_log_source);\n***REMOVED*** else if (SECONDARY_CONFIGS.logSource) {\n    settingsServiceInstance.logSource = SECONDARY_CONFIGS.logSource;\n***REMOVED***\n  if (entries.fpr_log_endpoint_url) {\n    settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\n***REMOVED*** else if (SECONDARY_CONFIGS.logEndPointUrl) {\n    settingsServiceInstance.logEndPointUrl = SECONDARY_CONFIGS.logEndPointUrl;\n***REMOVED***\n  if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\n    settingsServiceInstance.networkRequestsSamplingRate = Number(\n      entries.fpr_vc_network_request_sampling_rate\n    );\n***REMOVED*** else if (SECONDARY_CONFIGS.networkRequestsSamplingRate !== undefined) {\n    settingsServiceInstance.networkRequestsSamplingRate =\n      SECONDARY_CONFIGS.networkRequestsSamplingRate;\n***REMOVED***\n  if (entries.fpr_vc_trace_sampling_rate !== undefined) {\n    settingsServiceInstance.tracesSamplingRate = Number(\n      entries.fpr_vc_trace_sampling_rate\n    );\n***REMOVED*** else if (SECONDARY_CONFIGS.tracesSamplingRate !== undefined) {\n    settingsServiceInstance.tracesSamplingRate =\n      SECONDARY_CONFIGS.tracesSamplingRate;\n***REMOVED***\n  // Set the per session trace and network logging flags.\n  settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(\n    settingsServiceInstance.tracesSamplingRate\n  );\n  settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(\n    settingsServiceInstance.networkRequestsSamplingRate\n  );\n  return config;\n***REMOVED***\n\nfunction configValid(expiry: string): boolean {\n  return Number(expiry) > Date.now();\n***REMOVED***\n\nfunction shouldLogAfterSampling(samplingRate: number): boolean {\n  return Math.random() <= samplingRate;\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getIidPromise ***REMOVED*** from './iid_service';\nimport { getConfig ***REMOVED*** from './remote_config_service';\nimport { Api ***REMOVED*** from './api_service';\n\nconst enum InitializationStatus {\n  notInitialized = 1,\n  initializationPending,\n  initialized\n***REMOVED***\n\nlet initializationStatus = InitializationStatus.notInitialized;\n\nlet initializationPromise: Promise<void> | undefined;\n\nexport function getInitializationPromise(): Promise<void> {\n  initializationStatus = InitializationStatus.initializationPending;\n\n  initializationPromise = initializationPromise || initializePerf();\n\n  return initializationPromise;\n***REMOVED***\n\nexport function isPerfInitialized(): boolean {\n  return initializationStatus === InitializationStatus.initialized;\n***REMOVED***\n\nfunction initializePerf(): Promise<void> {\n  return getDocumentReadyComplete()\n    .then(() => getIidPromise())\n    .then(iid => getConfig(iid))\n    .then(\n      () => changeInitializationStatus(),\n      () => changeInitializationStatus()\n    );\n***REMOVED***\n\n/**\n * Returns a promise which resolves whenever the document readystate is complete or\n * immediately if it is called after page load complete.\n */\nfunction getDocumentReadyComplete(): Promise<void> {\n  const document = Api.getInstance().document;\n  return new Promise(resolve => {\n    if (document && document.readyState !== 'complete') {\n      const handler = (): void => {\n        if (document.readyState === 'complete') {\n          document.removeEventListener('readystatechange', handler);\n          resolve();\n      ***REMOVED***\n    ***REMOVED***\n      document.addEventListener('readystatechange', handler);\n  ***REMOVED*** else {\n      resolve();\n  ***REMOVED***\n***REMOVED***);\n***REMOVED***\n\nfunction changeInitializationStatus(): void {\n  initializationStatus = InitializationStatus.initialized;\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogHandler, Logger, LogLevel ***REMOVED*** from '@firebase/logger';\nimport { SettingsService ***REMOVED*** from './settings_service';\nimport { ERROR_FACTORY, ErrorCode ***REMOVED*** from '../utils/errors';\nimport { consoleLogger ***REMOVED*** from '../utils/console_logger';\n\nconst DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\nconst INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000;\n// If end point does not work, the call will be tried for these many times.\nconst DEFAULT_REMAINING_TRIES = 3;\nlet remainingTries = DEFAULT_REMAINING_TRIES;\n\ninterface BatchEvent {\n  message: string;\n  eventTime: number;\n***REMOVED***\n\n/* eslint-disable camelcase */\n// CC accepted log format.\ninterface CcBatchLogFormat {\n  request_time_ms: string;\n  client_info: ClientInfo;\n  log_source: number;\n  log_event: Log[];\n***REMOVED***\n\ninterface ClientInfo {\n  client_type: number;\n  js_client_info: {***REMOVED***;\n***REMOVED***\n\ninterface Log {\n  source_extension_json: string;\n  event_time_ms: string;\n***REMOVED***\n/* eslint-enable camelcase */\n\nlet queue: BatchEvent[] = [];\n\nfunction processQueue(timeOffset: number): void {\n  setTimeout(() => {\n    // If there is no remainingTries left, stop retrying.\n    if (remainingTries === 0) {\n      return;\n  ***REMOVED***\n\n    // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\n    if (!queue.length) {\n      return processQueue(DEFAULT_SEND_INTERVAL_MS);\n  ***REMOVED***\n\n    // Capture a snapshot of the queue and empty the \"official queue\".\n    const staged = [...queue];\n    queue = [];\n\n    /* eslint-disable camelcase */\n    // We will pass the JSON serialized event to the backend.\n    const log_event = staged.map(evt => ({\n      source_extension_json: evt.message,\n      event_time_ms: String(evt.eventTime)\n  ***REMOVED***));\n\n    const data: CcBatchLogFormat = {\n      request_time_ms: String(Date.now()),\n      client_info: {\n        client_type: 1, // 1 is JS\n        js_client_info: {***REMOVED***\n    ***REMOVED***,\n      log_source: SettingsService.getInstance().logSource,\n      log_event\n  ***REMOVED***\n    /* eslint-enable camelcase */\n\n    fetch(SettingsService.getInstance().logEndPointUrl, {\n      method: 'POST',\n      body: JSON.stringify(data)\n  ***REMOVED***)\n      .then(res => {\n        if (!res.ok) {\n          consoleLogger.info('Call to Firebase backend failed.');\n      ***REMOVED***\n        return res.json();\n    ***REMOVED***)\n      .then(res => {\n        const wait = Number(res.next_request_wait_millis);\n\n        // Find the next call wait time from the response.\n        const requestOffset = isNaN(wait)\n          ? DEFAULT_SEND_INTERVAL_MS\n          : Math.max(DEFAULT_SEND_INTERVAL_MS, wait);\n        remainingTries = DEFAULT_REMAINING_TRIES;\n        // Schedule the next process.\n        processQueue(requestOffset);\n    ***REMOVED***)\n      .catch(() => {\n        /**\n         * If the request fails for some reason, add the events that were attempted\n         * back to the primary queue to retry later.\n         */\n        queue = [...staged, ...queue];\n        remainingTries--;\n        consoleLogger.info(`Tries left: ${remainingTries***REMOVED***.`);\n        processQueue(DEFAULT_SEND_INTERVAL_MS);\n    ***REMOVED***);\n***REMOVED***, timeOffset);\n***REMOVED***\n\nprocessQueue(INITIAL_SEND_TIME_DELAY_MS);\n\nfunction addToQueue(evt: BatchEvent): void {\n  if (!evt.eventTime || !evt.message) {\n    throw ERROR_FACTORY.create(ErrorCode.INVALID_CC_LOG);\n***REMOVED***\n  // Add the new event to the queue.\n  queue = [...queue, evt];\n***REMOVED***\n\n/** Log handler for cc service to send the performance logs to the server. */\nexport function ccHandler(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  serializer: (...args: any[]) => string\n): LogHandler {\n  // The underscores for loggerInstance and level parameters are added to avoid the\n  // noUnusedParameters related error.\n  return (_loggerInstance: Logger, _level: LogLevel, ...args) => {\n    const message = serializer(...args);\n    addToQueue({\n      message,\n      eventTime: Date.now()\n  ***REMOVED***);\n***REMOVED***\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getIid ***REMOVED*** from './iid_service';\nimport { NetworkRequest ***REMOVED*** from '../resources/network_request';\nimport { Trace ***REMOVED*** from '../resources/trace';\nimport { Api ***REMOVED*** from './api_service';\nimport { SettingsService ***REMOVED*** from './settings_service';\nimport {\n  getServiceWorkerStatus,\n  getVisibilityState,\n  VisibilityState,\n  getEffectiveConnectionType\n***REMOVED*** from '../utils/attributes_utils';\nimport {\n  isPerfInitialized,\n  getInitializationPromise\n***REMOVED*** from './initialization_service';\nimport { Logger ***REMOVED*** from '@firebase/logger';\nimport { ccHandler ***REMOVED*** from './cc_service';\nimport { SDK_VERSION ***REMOVED*** from '../constants';\n\nconst enum ResourceType {\n  NetworkRequest,\n  Trace\n***REMOVED***\n\n/* eslint-disable camelcase */\ninterface ApplicationInfo {\n  google_app_id: string;\n  app_instance_id?: string;\n  web_app_info: WebAppInfo;\n  application_process_state: number;\n***REMOVED***\n\ninterface WebAppInfo {\n  sdk_version: string;\n  page_url: string;\n  service_worker_status: number;\n  visibility_state: number;\n  effective_connection_type: number;\n***REMOVED***\n\ninterface PerfNetworkLog {\n  application_info: ApplicationInfo;\n  network_request_metric: NetworkRequestMetric;\n***REMOVED***\n\ninterface PerfTraceLog {\n  application_info: ApplicationInfo;\n  trace_metric: TraceMetric;\n***REMOVED***\n\ninterface NetworkRequestMetric {\n  url: string;\n  http_method: number;\n  http_response_code: number;\n  response_payload_bytes?: number;\n  client_start_time_us?: number;\n  time_to_response_initiated_us?: number;\n  time_to_response_completed_us?: number;\n***REMOVED***\n\ninterface TraceMetric {\n  name: string;\n  is_auto: boolean;\n  client_start_time_us: number;\n  duration_us: number;\n  counters?: Array<{ key: string; value: number ***REMOVED***>;\n  custom_attributes?: Array<{ key: string; value: string ***REMOVED***>;\n***REMOVED***\n/* eslint-enble camelcase */\n\nlet logger: Logger | undefined;\n// This method is not called before initialization.\nfunction getLogger(): Logger {\n  if (logger) {\n    return logger;\n***REMOVED***\n  const ccLogger = ccHandler(serializer);\n  logger = new Logger('@firebase/performance/cc');\n  logger.logHandler = ccLogger;\n  return logger;\n***REMOVED***\n\nexport function logTrace(trace: Trace): void {\n  const settingsService = SettingsService.getInstance();\n  // Do not log if trace is auto generated and instrumentation is disabled.\n  if (!settingsService.instrumentationEnabled && trace.isAuto) {\n    return;\n***REMOVED***\n  // Do not log if trace is custom and data collection is disabled.\n  if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\n    return;\n***REMOVED***\n  // Do not log if required apis are not available.\n  if (!Api.getInstance().requiredApisAvailable()) {\n    return;\n***REMOVED***\n  // Only log the page load auto traces if page is visible.\n  if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) {\n    return;\n***REMOVED***\n\n  if (\n    !settingsService.loggingEnabled ||\n    !settingsService.logTraceAfterSampling\n  ) {\n    return;\n***REMOVED***\n\n  if (isPerfInitialized()) {\n    sendTraceLog(trace);\n***REMOVED*** else {\n    // Custom traces can be used before the initialization but logging\n    // should wait until after.\n    getInitializationPromise().then(\n      () => sendTraceLog(trace),\n      () => sendTraceLog(trace)\n    );\n***REMOVED***\n***REMOVED***\n\nfunction sendTraceLog(trace: Trace): void {\n  if (getIid()) {\n    setTimeout(() => getLogger().log(trace, ResourceType.Trace), 0);\n***REMOVED***\n***REMOVED***\n\nexport function logNetworkRequest(networkRequest: NetworkRequest): void {\n  const settingsService = SettingsService.getInstance();\n  // Do not log network requests if instrumentation is disabled.\n  if (!settingsService.instrumentationEnabled) {\n    return;\n***REMOVED***\n  // Do not log the js sdk's call to cc service to avoid unnecessary cycle.\n  if (networkRequest.url === settingsService.logEndPointUrl.split('?')[0]) {\n    return;\n***REMOVED***\n\n  if (\n    !settingsService.loggingEnabled ||\n    !settingsService.logNetworkAfterSampling\n  ) {\n    return;\n***REMOVED***\n\n  setTimeout(\n    () => getLogger().log(networkRequest, ResourceType.NetworkRequest),\n    0\n  );\n***REMOVED***\n\nfunction serializer(resource: {***REMOVED***, resourceType: ResourceType): string {\n  if (resourceType === ResourceType.NetworkRequest) {\n    return serializeNetworkRequest(resource as NetworkRequest);\n***REMOVED***\n  return serializeTrace(resource as Trace);\n***REMOVED***\n\nfunction serializeNetworkRequest(networkRequest: NetworkRequest): string {\n  const networkRequestMetric: NetworkRequestMetric = {\n    url: networkRequest.url,\n    http_method: networkRequest.httpMethod || 0,\n    http_response_code: 200,\n    response_payload_bytes: networkRequest.responsePayloadBytes,\n    client_start_time_us: networkRequest.startTimeUs,\n    time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\n    time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\n***REMOVED***\n  const perfMetric: PerfNetworkLog = {\n    application_info: getApplicationInfo(),\n    network_request_metric: networkRequestMetric\n***REMOVED***\n  return JSON.stringify(perfMetric);\n***REMOVED***\n\nfunction serializeTrace(trace: Trace): string {\n  const traceMetric: TraceMetric = {\n    name: trace.name,\n    is_auto: trace.isAuto,\n    client_start_time_us: trace.startTimeUs,\n    duration_us: trace.durationUs\n***REMOVED***\n\n  if (Object.keys(trace.counters).length !== 0) {\n    traceMetric.counters = convertToKeyValueArray(trace.counters);\n***REMOVED***\n  const customAttributes = trace.getAttributes();\n  if (Object.keys(customAttributes).length !== 0) {\n    traceMetric.custom_attributes = convertToKeyValueArray(customAttributes);\n***REMOVED***\n\n  const perfMetric: PerfTraceLog = {\n    application_info: getApplicationInfo(),\n    trace_metric: traceMetric\n***REMOVED***\n  return JSON.stringify(perfMetric);\n***REMOVED***\n\nfunction getApplicationInfo(): ApplicationInfo {\n  return {\n    google_app_id: SettingsService.getInstance().getAppId(),\n    app_instance_id: getIid(),\n    web_app_info: {\n      sdk_version: SDK_VERSION,\n      page_url: Api.getInstance().getUrl(),\n      service_worker_status: getServiceWorkerStatus(),\n      visibility_state: getVisibilityState(),\n      effective_connection_type: getEffectiveConnectionType()\n  ***REMOVED***,\n    application_process_state: 0\n***REMOVED***\n***REMOVED***\n\nfunction convertToKeyValueArray<T>(obj: {\n  [key: string]: T;\n***REMOVED***): Array<{\n  key: string;\n  value: T;\n***REMOVED***> {\n  const keys = Object.keys(obj);\n  return keys.map(key => ({ key, value: obj[key] ***REMOVED***));\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FIRST_PAINT_COUNTER_NAME,\n  FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n  FIRST_INPUT_DELAY_COUNTER_NAME,\n  OOB_TRACE_PAGE_LOAD_PREFIX\n***REMOVED*** from '../constants';\n\nconst MAX_METRIC_NAME_LENGTH = 100;\nconst RESERVED_AUTO_PREFIX = '_';\nconst oobMetrics = [\n  FIRST_PAINT_COUNTER_NAME,\n  FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n  FIRST_INPUT_DELAY_COUNTER_NAME\n];\n\n/**\n * Returns true if the metric is custom and does not start with reserved prefix, or if\n * the metric is one of out of the box page load trace metrics.\n */\nexport function isValidMetricName(name: string, traceName?: string): boolean {\n  if (name.length === 0 || name.length > MAX_METRIC_NAME_LENGTH) {\n    return false;\n***REMOVED***\n  return (\n    (traceName &&\n      traceName.startsWith(OOB_TRACE_PAGE_LOAD_PREFIX) &&\n      oobMetrics.indexOf(name) > -1) ||\n    !name.startsWith(RESERVED_AUTO_PREFIX)\n  );\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  TRACE_START_MARK_PREFIX,\n  TRACE_STOP_MARK_PREFIX,\n  TRACE_MEASURE_PREFIX,\n  OOB_TRACE_PAGE_LOAD_PREFIX,\n  FIRST_PAINT_COUNTER_NAME,\n  FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n  FIRST_INPUT_DELAY_COUNTER_NAME\n***REMOVED*** from '../constants';\nimport { Api ***REMOVED*** from '../services/api_service';\nimport { logTrace ***REMOVED*** from '../services/perf_logger';\nimport { ERROR_FACTORY, ErrorCode ***REMOVED*** from '../utils/errors';\nimport {\n  isValidCustomAttributeName,\n  isValidCustomAttributeValue\n***REMOVED*** from '../utils/attributes_utils';\nimport { isValidMetricName ***REMOVED*** from '../utils/metric_utils';\nimport { PerformanceTrace ***REMOVED*** from '@firebase/performance-types';\n\nconst enum TraceState {\n  UNINITIALIZED = 1,\n  RUNNING,\n  TERMINATED\n***REMOVED***\n\nexport class Trace implements PerformanceTrace {\n  private state: TraceState = TraceState.UNINITIALIZED;\n  startTimeUs!: number;\n  durationUs!: number;\n  private customAttributes: { [key: string]: string ***REMOVED*** = {***REMOVED***;\n  counters: { [counterName: string]: number ***REMOVED*** = {***REMOVED***;\n  private api = Api.getInstance();\n  private randomId = Math.floor(Math.random() * 1000000);\n  private traceStartMark!: string;\n  private traceStopMark!: string;\n  private traceMeasure!: string;\n\n  /**\n   * @param name The name of the trace.\n   * @param isAuto If the trace is auto-instrumented.\n   * @param traceMeasureName The name of the measure marker in user timing specification. This field\n   * is only set when the trace is built for logging when the user directly uses the user timing\n   * api (performance.mark and performance.measure).\n   */\n  constructor(\n    readonly name: string,\n    readonly isAuto = false,\n    traceMeasureName?: string\n  ) {\n    if (!this.isAuto) {\n      this.traceStartMark = `${TRACE_START_MARK_PREFIX***REMOVED***-${this.randomId***REMOVED***-${this.name***REMOVED***`;\n      this.traceStopMark = `${TRACE_STOP_MARK_PREFIX***REMOVED***-${this.randomId***REMOVED***-${this.name***REMOVED***`;\n      this.traceMeasure =\n        traceMeasureName ||\n        `${TRACE_MEASURE_PREFIX***REMOVED***-${this.randomId***REMOVED***-${this.name***REMOVED***`;\n\n      if (traceMeasureName) {\n        // For the case of direct user timing traces, no start stop will happen. The measure object\n        // is already available.\n        this.calculateTraceMetrics();\n    ***REMOVED***\n  ***REMOVED***\n***REMOVED***\n\n  /**\n   * Starts a trace. The measurement of the duration starts at this point.\n   */\n  start(): void {\n    if (this.state !== TraceState.UNINITIALIZED) {\n      throw ERROR_FACTORY.create(ErrorCode.TRACE_STARTED_BEFORE, {\n        traceName: this.name\n    ***REMOVED***);\n  ***REMOVED***\n    this.api.mark(this.traceStartMark);\n    this.state = TraceState.RUNNING;\n***REMOVED***\n\n  /**\n   * Stops the trace. The measurement of the duration of the trace stops at this point and trace\n   * is logged.\n   */\n  stop(): void {\n    if (this.state !== TraceState.RUNNING) {\n      throw ERROR_FACTORY.create(ErrorCode.TRACE_STOPPED_BEFORE, {\n        traceName: this.name\n    ***REMOVED***);\n  ***REMOVED***\n    this.state = TraceState.TERMINATED;\n    this.api.mark(this.traceStopMark);\n    this.api.measure(\n      this.traceMeasure,\n      this.traceStartMark,\n      this.traceStopMark\n    );\n    this.calculateTraceMetrics();\n    logTrace(this);\n***REMOVED***\n\n  /**\n   * Records a trace with predetermined values. If this method is used a trace is created and logged\n   * directly. No need to use start and stop methods.\n   * @param startTime Trace start time since epoch in millisec\n   * @param duration The duraction of the trace in millisec\n   * @param options An object which can optionally hold maps of custom metrics and custom attributes\n   */\n  record(\n    startTime: number,\n    duration: number,\n    options?: {\n      metrics?: { [key: string]: number ***REMOVED***;\n      attributes?: { [key: string]: string ***REMOVED***;\n  ***REMOVED***\n  ): void {\n    this.durationUs = Math.floor(duration * 1000);\n    this.startTimeUs = Math.floor(startTime * 1000);\n    if (options && options.attributes) {\n      this.customAttributes = { ...options.attributes ***REMOVED***;\n  ***REMOVED***\n    if (options && options.metrics) {\n      for (const metric of Object.keys(options.metrics)) {\n        if (!isNaN(Number(options.metrics[metric]))) {\n          this.counters[metric] = Number(Math.floor(options.metrics[metric]));\n      ***REMOVED***\n    ***REMOVED***\n  ***REMOVED***\n    logTrace(this);\n***REMOVED***\n\n  /**\n   * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\n   * custom metric if one with the given name does not exist.\n   * @param counter Name of the custom metric\n   * @param num Increment by value\n   */\n  incrementMetric(counter: string, num = 1): void {\n    if (this.counters[counter] === undefined) {\n      this.putMetric(counter, 0);\n  ***REMOVED***\n    this.counters[counter] += num;\n***REMOVED***\n\n  /**\n   * Sets a custom metric to a specified value. Will create a new custom metric if one with the\n   * given name does not exist.\n   * @param counter Name of the custom metric\n   * @param num Set custom metric to this value\n   */\n  putMetric(counter: string, num: number): void {\n    if (isValidMetricName(counter, this.name)) {\n      this.counters[counter] = num;\n  ***REMOVED*** else {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_CUSTOM_METRIC_NAME, {\n        customMetricName: counter\n    ***REMOVED***);\n  ***REMOVED***\n***REMOVED***\n\n  /**\n   * Returns the value of the custom metric by that name. If a custom metric with that name does\n   * not exist will return zero.\n   * @param counter\n   */\n  getMetric(counter: string): number {\n    return this.counters[counter] || 0;\n***REMOVED***\n\n  /**\n   * Sets a custom attribute of a trace to a certain value.\n   * @param attr\n   * @param value\n   */\n  putAttribute(attr: string, value: string): void {\n    const isValidName = isValidCustomAttributeName(attr);\n    const isValidValue = isValidCustomAttributeValue(value);\n    if (isValidName && isValidValue) {\n      this.customAttributes[attr] = value;\n      return;\n  ***REMOVED***\n    // Throw appropriate error when the attribute name or value is invalid.\n    if (!isValidName) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_ATTRIBUTE_NAME, {\n        attributeName: attr\n    ***REMOVED***);\n  ***REMOVED***\n    if (!isValidValue) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_ATTRIBUTE_VALUE, {\n        attributeValue: value\n    ***REMOVED***);\n  ***REMOVED***\n***REMOVED***\n\n  /**\n   * Retrieves the value a custom attribute of a trace is set to.\n   * @param attr\n   */\n  getAttribute(attr: string): string | undefined {\n    return this.customAttributes[attr];\n***REMOVED***\n\n  removeAttribute(attr: string): void {\n    if (this.customAttributes[attr] === undefined) {\n      return;\n  ***REMOVED***\n    delete this.customAttributes[attr];\n***REMOVED***\n\n  getAttributes(): { [key: string]: string ***REMOVED*** {\n    return { ...this.customAttributes ***REMOVED***;\n***REMOVED***\n\n  private setStartTime(startTime: number): void {\n    this.startTimeUs = startTime;\n***REMOVED***\n\n  private setDuration(duration: number): void {\n    this.durationUs = duration;\n***REMOVED***\n\n  /**\n   * Calculates and assigns the duration and start time of the trace using the measure performance\n   * entry.\n   */\n  private calculateTraceMetrics(): void {\n    const perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\n    const perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\n    if (perfMeasureEntry) {\n      this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\n      this.startTimeUs = Math.floor(\n        (perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000\n      );\n  ***REMOVED***\n***REMOVED***\n\n  /**\n   * @param navigationTimings A single element array which contains the navigationTIming object of\n   * the page load\n   * @param paintTimings A array which contains paintTiming object of the page load\n   * @param firstInputDelay First input delay in millisec\n   */\n  static createOobTrace(\n    navigationTimings: PerformanceNavigationTiming[],\n    paintTimings: PerformanceEntry[],\n    firstInputDelay?: number\n  ): void {\n    const route = Api.getInstance().getUrl();\n    if (!route) {\n      return;\n  ***REMOVED***\n    const trace = new Trace(OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\n    const timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\n    trace.setStartTime(timeOriginUs);\n\n    // navigationTimings includes only one element.\n    if (navigationTimings && navigationTimings[0]) {\n      trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\n      trace.putMetric(\n        'domInteractive',\n        Math.floor(navigationTimings[0].domInteractive * 1000)\n      );\n      trace.putMetric(\n        'domContentLoadedEventEnd',\n        Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000)\n      );\n      trace.putMetric(\n        'loadEventEnd',\n        Math.floor(navigationTimings[0].loadEventEnd * 1000)\n      );\n  ***REMOVED***\n\n    const FIRST_PAINT = 'first-paint';\n    const FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\n    if (paintTimings) {\n      const firstPaint = paintTimings.find(\n        paintObject => paintObject.name === FIRST_PAINT\n      );\n      if (firstPaint && firstPaint.startTime) {\n        trace.putMetric(\n          FIRST_PAINT_COUNTER_NAME,\n          Math.floor(firstPaint.startTime * 1000)\n        );\n    ***REMOVED***\n      const firstContentfulPaint = paintTimings.find(\n        paintObject => paintObject.name === FIRST_CONTENTFUL_PAINT\n      );\n      if (firstContentfulPaint && firstContentfulPaint.startTime) {\n        trace.putMetric(\n          FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n          Math.floor(firstContentfulPaint.startTime * 1000)\n        );\n    ***REMOVED***\n\n      if (firstInputDelay) {\n        trace.putMetric(\n          FIRST_INPUT_DELAY_COUNTER_NAME,\n          Math.floor(firstInputDelay * 1000)\n        );\n    ***REMOVED***\n  ***REMOVED***\n\n    logTrace(trace);\n***REMOVED***\n\n  static createUserTimingTrace(measureName: string): void {\n    const trace = new Trace(measureName, false, measureName);\n    logTrace(trace);\n***REMOVED***\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Api ***REMOVED*** from '../services/api_service';\nimport { logNetworkRequest ***REMOVED*** from '../services/perf_logger';\n\n// The order of values of this enum should not be changed.\nexport const enum HttpMethod {\n  HTTP_METHOD_UNKNOWN = 0,\n  GET = 1,\n  PUT = 2,\n  POST = 3,\n  DELETE = 4,\n  HEAD = 5,\n  PATCH = 6,\n  OPTIONS = 7,\n  TRACE = 8,\n  CONNECT = 9\n***REMOVED***\n\n// Durations are in microseconds.\nexport interface NetworkRequest {\n  url: string;\n  httpMethod?: HttpMethod;\n  requestPayloadBytes?: number;\n  responsePayloadBytes?: number;\n  httpResponseCode?: number;\n  responseContentType?: string;\n  startTimeUs?: number;\n  timeToRequestCompletedUs?: number;\n  timeToResponseInitiatedUs?: number;\n  timeToResponseCompletedUs?: number;\n***REMOVED***\n\nexport function createNetworkRequestEntry(entry: PerformanceEntry): void {\n  const performanceEntry = entry as PerformanceResourceTiming;\n  if (!performanceEntry || performanceEntry.responseStart === undefined) {\n    return;\n***REMOVED***\n  const timeOrigin = Api.getInstance().getTimeOrigin();\n  const startTimeUs = Math.floor(\n    (performanceEntry.startTime + timeOrigin) * 1000\n  );\n  const timeToResponseInitiatedUs = performanceEntry.responseStart\n    ? Math.floor(\n        (performanceEntry.responseStart - performanceEntry.startTime) * 1000\n      )\n    : undefined;\n  const timeToResponseCompletedUs = Math.floor(\n    (performanceEntry.responseEnd - performanceEntry.startTime) * 1000\n  );\n  // Remove the query params from logged network request url.\n  const url = performanceEntry.name && performanceEntry.name.split('?')[0];\n  const networkRequest: NetworkRequest = {\n    url,\n    responsePayloadBytes: performanceEntry.transferSize,\n    startTimeUs,\n    timeToResponseInitiatedUs,\n    timeToResponseCompletedUs\n***REMOVED***\n\n  logNetworkRequest(networkRequest);\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Api ***REMOVED*** from './api_service';\nimport { Trace ***REMOVED*** from '../resources/trace';\nimport { createNetworkRequestEntry ***REMOVED*** from '../resources/network_request';\nimport { TRACE_MEASURE_PREFIX ***REMOVED*** from '../constants';\nimport { getIid ***REMOVED*** from './iid_service';\n\nconst FID_WAIT_TIME_MS = 5000;\n\nexport function setupOobResources(): void {\n  // Do not initialize unless iid is available.\n  if (!getIid()) {\n    return;\n***REMOVED***\n  // The load event might not have fired yet, and that means performance navigation timing\n  // object has a duration of 0. The setup should run after all current tasks in js queue.\n  setTimeout(() => setupOobTraces(), 0);\n  setTimeout(() => setupNetworkRequests(), 0);\n  setTimeout(() => setupUserTimingTraces(), 0);\n***REMOVED***\n\nfunction setupNetworkRequests(): void {\n  const api = Api.getInstance();\n  const resources = api.getEntriesByType('resource');\n  for (const resource of resources) {\n    createNetworkRequestEntry(resource);\n***REMOVED***\n  api.setupObserver('resource', createNetworkRequestEntry);\n***REMOVED***\n\nfunction setupOobTraces(): void {\n  const api = Api.getInstance();\n  const navigationTimings = api.getEntriesByType(\n    'navigation'\n  ) as PerformanceNavigationTiming[];\n  const paintTimings = api.getEntriesByType('paint');\n  // If First Input Desly polyfill is added to the page, report the fid value.\n  // https://github.com/GoogleChromeLabs/first-input-delay\n  if (api.onFirstInputDelay) {\n    // If the fid call back is not called for certain time, continue without it.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let timeoutId: any = setTimeout(() => {\n      Trace.createOobTrace(navigationTimings, paintTimings);\n      timeoutId = undefined;\n  ***REMOVED***, FID_WAIT_TIME_MS);\n    api.onFirstInputDelay((fid: number) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n        Trace.createOobTrace(navigationTimings, paintTimings, fid);\n    ***REMOVED***\n  ***REMOVED***);\n***REMOVED*** else {\n    Trace.createOobTrace(navigationTimings, paintTimings);\n***REMOVED***\n***REMOVED***\n\nfunction setupUserTimingTraces(): void {\n  const api = Api.getInstance();\n  // Run through the measure performance entries collected up to this point.\n  const measures = api.getEntriesByType('measure');\n  for (const measure of measures) {\n    createUserTimingTrace(measure);\n***REMOVED***\n  // Setup an observer to capture the measures from this point on.\n  api.setupObserver('measure', createUserTimingTrace);\n***REMOVED***\n\nfunction createUserTimingTrace(measure: PerformanceEntry): void {\n  const measureName = measure.name;\n  // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\n  if (\n    measureName.substring(0, TRACE_MEASURE_PREFIX.length) ===\n    TRACE_MEASURE_PREFIX\n  ) {\n    return;\n***REMOVED***\n  Trace.createUserTimingTrace(measureName);\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Trace ***REMOVED*** from '../resources/trace';\nimport { setupOobResources ***REMOVED*** from '../services/oob_resources_service';\nimport { SettingsService ***REMOVED*** from '../services/settings_service';\nimport { getInitializationPromise ***REMOVED*** from '../services/initialization_service';\nimport { Api ***REMOVED*** from '../services/api_service';\nimport { FirebaseApp ***REMOVED*** from '@firebase/app-types';\nimport { FirebasePerformance ***REMOVED*** from '@firebase/performance-types';\nimport { consoleLogger ***REMOVED*** from '../utils/console_logger';\n\nexport class PerformanceController implements FirebasePerformance {\n  constructor(readonly app: FirebaseApp) {\n    if (Api.getInstance().requiredApisAvailable()) {\n      getInitializationPromise().then(setupOobResources, setupOobResources);\n  ***REMOVED*** else {\n      consoleLogger.info(\n        'Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.'\n      );\n  ***REMOVED***\n***REMOVED***\n\n  trace(name: string): Trace {\n    return new Trace(name);\n***REMOVED***\n\n  set instrumentationEnabled(val: boolean) {\n    SettingsService.getInstance().instrumentationEnabled = val;\n***REMOVED***\n  get instrumentationEnabled(): boolean {\n    return SettingsService.getInstance().instrumentationEnabled;\n***REMOVED***\n\n  set dataCollectionEnabled(val: boolean) {\n    SettingsService.getInstance().dataCollectionEnabled = val;\n***REMOVED***\n  get dataCollectionEnabled(): boolean {\n    return SettingsService.getInstance().dataCollectionEnabled;\n***REMOVED***\n***REMOVED***\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport { FirebaseApp, FirebaseNamespace ***REMOVED*** from '@firebase/app-types';\nimport {\n  _FirebaseNamespace,\n  FirebaseServiceFactory\n***REMOVED*** from '@firebase/app-types/private';\nimport { PerformanceController ***REMOVED*** from './src/controllers/perf';\nimport { setupApi ***REMOVED*** from './src/services/api_service';\nimport { SettingsService ***REMOVED*** from './src/services/settings_service';\nimport { ERROR_FACTORY, ErrorCode ***REMOVED*** from './src/utils/errors';\nimport { FirebasePerformance ***REMOVED*** from '@firebase/performance-types';\n\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport function registerPerformance(instance: FirebaseNamespace): void {\n  const factoryMethod: FirebaseServiceFactory = (\n    app: FirebaseApp\n  ): PerformanceController => {\n    if (app.name !== DEFAULT_ENTRY_NAME) {\n      throw ERROR_FACTORY.create(ErrorCode.FB_NOT_DEFAULT);\n  ***REMOVED***\n    if (typeof window === 'undefined') {\n      throw ERROR_FACTORY.create(ErrorCode.NO_WINDOW);\n  ***REMOVED***\n    setupApi(window);\n    SettingsService.getInstance().firebaseAppInstance = app;\n    return new PerformanceController(app);\n***REMOVED***\n\n  // Register performance with firebase-app.\n  const namespaceExports = {***REMOVED***;\n  (instance as _FirebaseNamespace).INTERNAL.registerService(\n    'performance',\n    factoryMethod,\n    namespaceExports\n  );\n***REMOVED***\n\nregisterPerformance(firebase);\n\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    performance?: {\n      (app?: FirebaseApp): FirebasePerformance;\n  ***REMOVED***\n***REMOVED***\n  interface FirebaseApp {\n    performance?(): FirebasePerformance;\n***REMOVED***\n***REMOVED***\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__read","o","m","r","ar","error","__spreadArrays","il","k","a","j","jl","deepExtend","target","source","constructor","Date","getTime","undefined","prop","Error","create","__","code","message","_super","_this","FirebaseError","captureStackTrace","ErrorFactory","_i","data","customData","fullCode","service","template","errors","replace","PATTERN","key","toString","replaceTemplate","fullMessage","serviceName","_b","keys","_a","slice","console","warn","LogLevel","contains","obj","defaultLogHandler","instance","logType","args","logLevel","now","toISOString","DEBUG","VERBOSE","log","name","INFO","info","WARN","ERROR","defaultLogLevel","Logger","_logLevel","val","_logHandler","ERRORS","ERROR_FACTORY","DEFAULT_ENTRY_NAME","FirebaseAppLiteImpl","checkDestroyed_","automaticDataCollectionEnabled_","name_","options_","firebase_","INTERNAL","removeApp","services","services_","serviceKey","_c","instanceKey","all","filter","map","delete","isDeleted_","instanceIdentifier","instanceSpecifier","factories","extendApp","bind","props","appName","options","config","automaticDataCollectionEnabled","deepCopy","logger","firebase","namespace","firebaseAppImpl","apps","appHooks","__esModule","initializeApp","rawConfig","String","app","callAppHooks","SDK_VERSION","version","registerService","createService","serviceProperties","appHook","allowMultipleInstances","debug","getApps","forEach","serviceNamespace","appArg","_getService","useAsService","eventName","factoryName","defineProperty","get","createFirebaseNamespaceCore","createFirebaseNamespaceLite","promisifyRequest","request","onsuccess","onerror","promisifyRequestCall","method","proxyProperties","ProxyClass","targetProp","properties","set","proxyRequestMethods","Constructor","proxyMethods","proxyCursorRequestMethods","Cursor","promisifyCursorRequestCall","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","arr","toArray","callback","nativeObject","getAll","query","count","items","iterateCursor","continue","PENDING_TIMEOUT_MS","PACKAGE_VERSION","INTERNAL_AUTH_VERSION","INSTALLATIONS_API_URL","TOKEN_EXPIRATION_BUFFER","ERROR_DESCRIPTION_MAP","isServerError","includes","extractAppConfig","projectId","apiKey","appId","getInstallationsEndpoint","extractAuthTokenInfoFromResponse","response","token","requestStatus","expiresIn","responseExpiresIn","Number","getExpiresInFromResponseExpiresIn","creationTime","getErrorFromResponse","requestName","json","responseJson","errorData","serverCode","serverMessage","serverStatus","status","getHeaders","Headers","Content-Type","Accept","x-goog-api-key","getHeadersWithAuth","appConfig","refreshToken","headers","append","getAuthorizationHeader","retryIfServerError","fn","sleep","ms","setTimeout","bufferToBase64UrlSafe","array","btoa","fromCharCode","concat","VALID_FID_PATTERN","INVALID_FID","generateFid","fidByteArray","Uint8Array","self","crypto","msCrypto","getRandomValues","fid","substr","encode","test","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","getDbPromise","upgradeCallback","indexedDB","onupgradeneeded","event","openDb","upgradeDB","getKey","tx","put","remove","update","updateFn","oldValue","newValue","getInstallationEntry","oldEntry","installationEntry","clearTimedOutRequest","registrationStatus","updateOrCreateInstallationEntry","entryWithPromise","registrationPromise","updateInstallationRequest","entry","waitUntilFidRegistration","navigator","onLine","registrationPromiseWithError","inProgressEntry","registrationTime","endpoint","authVersion","sdkVersion","JSON","stringify","fetch","ok","responseValue","authToken","createInstallation","registeredInstallationEntry","e_1","registerInstallation","triggerRegistrationIfNecessary","hasInstallationRequestTimedOut","generateAuthToken","getGenerateAuthTokenEndpoint","installation","refreshAuthToken","forceRefresh","isEntryRegistered","oldAuthToken","isAuthTokenExpired","isAuthTokenValid","tokenPromise","updateAuthTokenRequest","waitUntilAuthTokenRequest","inProgressAuthToken","requestTime","makeAuthTokenRequestInProgressEntry","updatedInstallationEntry","fetchAuthTokenFromServer","hasAuthTokenRequestTimedOut","getToken","completeInstallationRegistration","deleteInstallation","getDeleteEndpoint","getId","catch","deleteInstallationRequest","apiInstance","windowInstance","settingsServiceInstance","TRACE_MEASURE_PREFIX","CONFIG_LOCAL_STORAGE_KEY","CONFIG_EXPIRY_LOCAL_STORAGE_KEY","SERVICE_NAME","Api","windowLocation","href","split","performance","mark","measureName","mark1","mark2","measure","type","getEntriesByType","getEntriesByName","timeOrigin","timing","navigationStart","cookieEnabled","entryType","PerformanceObserver","list","getEntries","observe","entryTypes","window","location","document","localStorage","perfMetrics","onFirstInputDelay","iid","VisibilityState","SettingsService","firebaseAppInstance","getIid","RESERVED_ATTRIBUTE_PREFIXES","ATTRIBUTE_FORMAT_REGEX","RegExp","getVisibilityState","getInstance","visibilityState","VISIBLE","HIDDEN","PRERENDER","UNKNOWN","consoleLogger","REMOTE_CONFIG_SDK_VERSION","SECONDARY_CONFIGS","loggingEnabled","FIS_AUTH_PREFIX","getConfig","expiryString","getItem","expiry","configValid","configStringified","parse","getStoredConfig","processConfig","authTokenPromise","installations","authTokenVal","getAuthTokenPromise","configEndPoint","getProjectId","getApiKey","Request","Authorization","app_instance_id","app_instance_id_token","app_id","getAppId","app_version","sdk_version","COULD_NOT_GET_CONFIG_MSG","getRemoteConfig","setItem","configTimeToLive","storeConfig","entries","fpr_enabled","fpr_log_source","logSource","fpr_log_endpoint_url","logEndPointUrl","fpr_vc_network_request_sampling_rate","networkRequestsSamplingRate","fpr_vc_trace_sampling_rate","tracesSamplingRate","logTraceAfterSampling","shouldLogAfterSampling","logNetworkAfterSampling","samplingRate","Math","random","initializationPromise","initializationStatus","getInitializationPromise","readyState","handler_1","removeEventListener","addEventListener","getDocumentReadyComplete","iidPromise","iidVal","getIidPromise","changeInitializationStatus","DEFAULT_SEND_INTERVAL_MS","DEFAULT_REMAINING_TRIES","remainingTries","queue","ccHandler","serializer","_loggerInstance","_level","evt","eventTime","addToQueue","getLogger","ccLogger","logHandler","logTrace","trace","settingsService","instrumentationEnabled","isAuto","dataCollectionEnabled","requiredApisAvailable","sendTraceLog","resource","resourceType","networkRequest","networkRequestMetric","url","http_method","httpMethod","http_response_code","response_payload_bytes","responsePayloadBytes","client_start_time_us","startTimeUs","time_to_response_initiated_us","timeToResponseInitiatedUs","time_to_response_completed_us","timeToResponseCompletedUs","perfMetric","application_info","getApplicationInfo","network_request_metric","serializeNetworkRequest","traceMetric","is_auto","duration_us","durationUs","counters","convertToKeyValueArray","customAttributes","getAttributes","custom_attributes","trace_metric","serializeTrace","google_app_id","web_app_info","page_url","getUrl","service_worker_status","serviceWorker","controller","getServiceWorkerStatus","visibility_state","effective_connection_type","navigatorConnection","connection","effectiveType","getEffectiveConnectionType","application_process_state","processQueue","timeOffset","staged","log_event","source_extension_json","event_time_ms","request_time_ms","client_info","client_type","js_client_info","log_source","res","wait","next_request_wait_millis","requestOffset","isNaN","max","oobMetrics","Trace","state","traceName","api","traceStartMark","traceStopMark","traceMeasure","calculateTraceMetrics","startTime","duration","floor","attributes","metrics","metric","counter","num","putMetric","startsWith","indexOf","isValidMetricName","customMetricName","attr","isValidName","some","prefix","match","isValidCustomAttributeName","isValidValue","isValidCustomAttributeValue","attributeName","attributeValue","perfMeasureEntries","perfMeasureEntry","getTimeOrigin","navigationTimings","paintTimings","firstInputDelay","route","timeOriginUs","setStartTime","setDuration","domInteractive","domContentLoadedEventEnd","loadEventEnd","firstPaint","find","paintObject","firstContentfulPaint","traceMeasureName","TRACE_START_MARK_PREFIX","randomId","TRACE_STOP_MARK_PREFIX","createNetworkRequestEntry","performanceEntry","responseStart","responseEnd","logNetworkRequest","transferSize","FID_WAIT_TIME_MS","setupOobResources","timeoutId_1","createOobTrace","clearTimeout","setupOobTraces","resources","resources_1","setupObserver","setupNetworkRequests","measures","measures_1","createUserTimingTrace","setupUserTimingTraces","substring","PerformanceController","setupApi"],"mappings":"8LAgBA,IAAIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IASrB,IAAIO,EAAW,WAQlB,OAPAA,EAAWN,OAAOO,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIN,KADTK,EAAIG,UAAUF,GACOV,OAAOc,UAAUT,eAAeU,KAAKN,EAAGL,KAAII,EAAEJ,GAAKK,EAAEL,IAE9E,OAAOI,IAEKQ,MAAMC,KAAML,YA8BzB,SAASM,EAAUC,EAASC,EAAYC,EAAGC,GAC9C,OAAO,IAAWD,EAANA,GAAUE,SAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,IACpF,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,IAAW,MAAOG,GAAKL,EAAOK,IACvF,SAASF,EAAKI,GAAUA,EAAOC,KAAOT,EAAQQ,EAAOL,OAAS,IAAIN,EAAE,SAAUG,GAAWA,EAAQQ,EAAOL,SAAWO,KAAKR,EAAWK,GACnIH,GAAMN,EAAYA,EAAUN,MAAMG,EAASC,GAAc,KAAKS,UAI/D,SAASM,EAAYhB,EAASiB,GACjC,IAAsGC,EAAGC,EAAG9B,EAAG+B,EAA3GC,EAAI,CAAEC,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAPlC,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOmC,KAAM,GAAIC,IAAK,IAChG,OAAOL,EAAI,CAAEV,KAAMgB,EAAK,GAAIC,MAASD,EAAK,GAAIE,OAAUF,EAAK,IAAwB,mBAAXG,SAA0BT,EAAES,OAAOC,UAAY,WAAa,OAAOhC,OAAUsB,EACvJ,SAASM,EAAKlC,GAAK,OAAO,SAAUuC,GAAK,OACzC,SAAcC,GACV,GAAId,EAAG,MAAM,IAAIe,UAAU,mCAC3B,KAAOZ,GAAG,IACN,GAAIH,EAAI,EAAGC,IAAM9B,EAAY,EAAR2C,EAAG,GAASb,EAAU,OAAIa,EAAG,GAAKb,EAAS,SAAO9B,EAAI8B,EAAU,SAAM9B,EAAEO,KAAKuB,GAAI,GAAKA,EAAET,SAAWrB,EAAIA,EAAEO,KAAKuB,EAAGa,EAAG,KAAKlB,KAAM,OAAOzB,EAE3J,OADI8B,EAAI,EAAG9B,IAAG2C,EAAK,CAAS,EAARA,EAAG,GAAQ3C,EAAEmB,QACzBwB,EAAG,IACP,KAAK,EAAG,KAAK,EAAG3C,EAAI2C,EAAI,MACxB,KAAK,EAAc,OAAXX,EAAEC,QAAgB,CAAEd,MAAOwB,EAAG,GAAIlB,MAAM,GAChD,KAAK,EAAGO,EAAEC,QAASH,EAAIa,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKX,EAAEI,IAAIS,MAAOb,EAAEG,KAAKU,MAAO,SACxC,QACI,KAAkB7C,EAAe,GAA3BA,EAAIgC,EAAEG,MAAY9B,QAAcL,EAAEA,EAAEK,OAAS,MAAkB,IAAVsC,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEX,EAAI,EAAG,SACjG,GAAc,IAAVW,EAAG,MAAc3C,GAAM2C,EAAG,GAAK3C,EAAE,IAAM2C,EAAG,GAAK3C,EAAE,IAAM,CAAEgC,EAAEC,MAAQU,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYX,EAAEC,MAAQjC,EAAE,GAAI,CAAEgC,EAAEC,MAAQjC,EAAE,GAAIA,EAAI2C,EAAI,MAC7D,GAAI3C,GAAKgC,EAAEC,MAAQjC,EAAE,GAAI,CAAEgC,EAAEC,MAAQjC,EAAE,GAAIgC,EAAEI,IAAIU,KAAKH,GAAK,MACvD3C,EAAE,IAAIgC,EAAEI,IAAIS,MAChBb,EAAEG,KAAKU,MAAO,SAEtBF,EAAKf,EAAKrB,KAAKI,EAASqB,GAC1B,MAAOV,GAAKqB,EAAK,CAAC,EAAGrB,GAAIQ,EAAI,UAAeD,EAAI7B,EAAI,EACtD,GAAY,EAAR2C,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAExB,MAAOwB,EAAG,GAAKA,EAAG,QAAK,EAAQlB,MAAM,GArB9BL,CAAK,CAACjB,EAAGuC,MAwCtD,SAASK,EAAOC,EAAG7C,GACtB,IAAI8C,EAAsB,mBAAXT,QAAyBQ,EAAER,OAAOC,UACjD,IAAKQ,EAAG,OAAOD,EACf,IAAmBE,EAAY5B,EAA3BpB,EAAI+C,EAAE1C,KAAKyC,GAAOG,EAAK,GAC3B,IACI,WAAc,IAANhD,GAAsB,EAANA,QAAc+C,EAAIhD,EAAEmB,QAAQI,MAAM0B,EAAGL,KAAKI,EAAE/B,OAExE,MAAOiC,GAAS9B,EAAI,CAAE8B,MAAOA,WAEzB,IACQF,IAAMA,EAAEzB,OAASwB,EAAI/C,EAAU,SAAI+C,EAAE1C,KAAKL,WAExC,GAAIoB,EAAG,MAAMA,EAAE8B,OAE7B,OAAOD,EASJ,SAASE,IACZ,IAAK,IAAIpD,EAAI,EAAGC,EAAI,EAAGoD,EAAKlD,UAAUC,OAAQH,EAAIoD,EAAIpD,IAAKD,GAAKG,UAAUF,GAAGG,OACxE,IAAI6C,EAAIvD,MAAMM,GAAIsD,EAAI,EAA3B,IAA8BrD,EAAI,EAAGA,EAAIoD,EAAIpD,IACzC,IAAK,IAAIsD,EAAIpD,UAAUF,GAAIuD,EAAI,EAAGC,EAAKF,EAAEnD,OAAQoD,EAAIC,EAAID,IAAKF,IAC1DL,EAAEK,GAAKC,EAAEC,GACjB,OAAOP,EC/GX,SAAgBS,EAAWC,EAAiBC,GAC1C,KAAMA,aAAkBrE,QACtB,OAAOqE,EAGT,OAAQA,EAAOC,aACb,KAAKC,KAIH,OAAO,IAAIA,KADOF,EACQG,WAE5B,KAAKxE,YACYyE,IAAXL,IACFA,EAAS,IAEX,MACF,KAAKjE,MAEHiE,EAAS,GACT,MAEF,QAEE,OAAOC,EAGX,IAAK,IAAMK,KAAQL,EACZA,EAAOhE,eAAeqE,KAG1BN,EAAsCM,GAAQP,EAC5CC,EAAsCM,GACtCL,EAAsCK,KAI3C,OAAON,ECZT,IFtC0BtE,EAAGC,SEgEM4E,MF/D/B9E,EADsBC,IAAGC,UAGzBD,EAAEgB,UAAkB,OAANf,EAAaC,OAAO4E,OAAO7E,IAAM8E,EAAG/D,UAAYf,EAAEe,UAAW,IAAI+D,OAD/E,SAASA,IAAO5D,KAAKqD,YAAcxE,EEiErC,WAAqBgF,EAAcC,GAAnC,MACEC,YAAMD,gBADaE,OAAAH,EAFZG,OA3BQ,gBAkCfjF,OAAOC,eAAegF,EAAMC,EAAcpE,WAItC6D,MAAMQ,mBACRR,MAAMQ,kBAAkBF,EAAMG,EAAatE,UAAU8D,iBAezDQ,mBAAA,SACEN,OACA,aAAAO,mBAAAA,IAAAC,oBAeA,IAbA,IAAMC,EAAcD,EAAK,IAAoB,GACvCE,EAAcvE,KAAKwE,YAAWX,EAC9BY,EAAWzE,KAAK0E,OAAOb,GAEvBC,EAAUW,EAwBpB,SAAyBA,EAAkBJ,GACzC,OAAOI,EAASE,QAAQC,EAAS,SAACrD,EAAGsD,GACnC,IAAMnE,EAAQ2D,EAAKQ,GACnB,OAAgB,MAATnE,EAAgBA,EAAMoE,WAAa,IAAID,SA3BnBE,CAAgBN,EAAUH,GAAc,QAE7DU,EAAiBhF,KAAKiF,iBAAgBnB,OAAYS,OAElD5B,EAAQ,IAAIsB,EAAcM,EAAUS,OAKxBE,EAAAnG,OAAOoG,KAAKb,GAAZc,WAAAA,IAAyB,CAAtC,IAAMP,OACa,MAAlBA,EAAIQ,OAAO,KACTR,KAAOlC,GACT2C,QAAQC,KACN,yCAAyCV,sCAG7ClC,EAAMkC,GAAOP,EAAWO,IAI5B,OAAOlC,MAlCT,WACmB6B,EACAS,EACAP,GAFA1E,aAAAwE,EACAxE,iBAAAiF,EACAjF,YAAA0E,EA0CrB,ICzHYc,EAAAA,EDyHNZ,EAAU,gBEzIhB,SAAgBa,EAA2BC,EAAQb,GACjD,OAAO9F,OAAOc,UAAUT,eAAeU,KAAK4F,EAAKb,2LDevCW,EAAAA,EAAAA,0BAEVA,yBACAA,mBACAA,mBACAA,qBACAA,uBAwBoC,SAAhCG,EAAiCC,EAAUC,OAAS,aAAAzB,mBAAAA,IAAA0B,oBACxD,KAAID,EAAUD,EAASG,UAAvB,CAGA,IAAMC,GAAM,IAAI1C,MAAO2C,cACvB,OAAQJ,GAON,KAAKL,EAASU,MAGd,KAAKV,EAASW,QACZb,QAAQc,UAARd,WAAY,IAAIU,QAASJ,EAASS,UAAYP,IAC9C,MACF,KAAKN,EAASc,KACZhB,QAAQiB,WAARjB,WAAa,IAAIU,QAASJ,EAASS,UAAYP,IAC/C,MACF,KAAKN,EAASgB,KACZlB,QAAQC,WAARD,WAAa,IAAIU,QAASJ,EAASS,UAAYP,IAC/C,MACF,KAAKN,EAASiB,MACZnB,QAAQ3C,YAAR2C,WAAc,IAAIU,QAASJ,EAASS,UAAYP,IAChD,MACF,QACE,MAAM,IAAIpC,MACR,8DAA8DmC,SA/CtE,MAAMa,EAA4BlB,EAASc,QAsEzCvH,sBAAI4H,4BAAJ,WACE,OAAO3G,KAAK4G,eAEd,SAAaC,GACX,KAAMA,KAAOrB,GACX,MAAM,IAAIrD,UAAU,wCAEtBnC,KAAK4G,UAAYC,mCAOnB9H,sBAAI4H,8BAAJ,WACE,OAAO3G,KAAK8G,iBAEd,SAAeD,GACb,GAAmB,mBAARA,EACT,MAAM,IAAI1E,UAAU,qDAEtBnC,KAAK8G,YAAcD,mCAOrBF,kBAAA,eAAM,aAAAvC,mBAAAA,IAAA0B,kBACJ9F,KAAK8G,kBAAL9G,QAAiBA,KAAMwF,EAASU,OAAUJ,KAE5Ca,gBAAA,eAAI,aAAAvC,mBAAAA,IAAA0B,kBACF9F,KAAK8G,kBAAL9G,QAAiBA,KAAMwF,EAASW,SAAYL,KAE9Ca,iBAAA,eAAK,aAAAvC,mBAAAA,IAAA0B,kBACH9F,KAAK8G,kBAAL9G,QAAiBA,KAAMwF,EAASc,MAASR,KAE3Ca,iBAAA,eAAK,aAAAvC,mBAAAA,IAAA0B,kBACH9F,KAAK8G,kBAAL9G,QAAiBA,KAAMwF,EAASgB,MAASV,KAE3Ca,kBAAA,eAAM,aAAAvC,mBAAAA,IAAA0B,kBACJ9F,KAAK8G,kBAAL9G,QAAiBA,KAAMwF,EAASiB,OAAUX,QApD5C,WAAmBO,GAAArG,UAAAqG,EAUXrG,eAAY0G,EAcZ1G,iBAA0B2F,EErGpC,IAAMoB,oBAEF,oFAEF3B,kBAAyB,gCACzBA,mBAA0B,iDAC1BA,iBAAwB,kDACxBA,0BACE,gFAMS4B,EAAgB,IAAI7C,EAC/B,MACA,WACA4C,GC3BWE,EAAqB,eC6ChClI,sBAAImI,kDAAJ,WAEE,OADAlH,KAAKmH,kBACEnH,KAAKoH,qCAGd,SAAmCP,GACjC7G,KAAKmH,kBACLnH,KAAKoH,gCAAkCP,mCAGzC9H,sBAAImI,wBAAJ,WAEE,OADAlH,KAAKmH,kBACEnH,KAAKqH,uCAGdtI,sBAAImI,2BAAJ,WAEE,OADAlH,KAAKmH,kBACEnH,KAAKsH,0CAGdJ,mBAAA,WAAA,WACE,OAAO,IAAI5G,QAAQ,SAAAC,GACjByD,EAAKmD,kBACL5G,MAECU,KAAK,WACJ+C,EAAKuD,UAAUC,SAASC,UAAUzD,EAAKqD,OAGvC,IAFA,IAAMK,EAA8B,OAEXtC,EAAArG,OAAOoG,KAAKnB,EAAK2D,WAAjBvD,WAAAA,IACvB,IADG,IAAMwD,WACiBC,EAAA9I,OAAOoG,KAAKnB,EAAK2D,UAAUC,IAA3B1C,WAAAA,IAAyC,CAA9D,IAAM4C,OACTJ,EAASrF,KAAK2B,EAAK2D,UAAUC,GAAYE,IAI7C,OAAOxH,QAAQyH,IACbL,EACGM,OAAO,SAAAxD,GAAW,MAAA,aAAcA,IAChCyD,IAAI,SAAAzD,GAAW,OAAAA,EAAQgD,SAAUU,cAGvCjH,KAAK,WACJ+C,EAAKmE,YAAa,EAClBnE,EAAK2D,UAAY,MAkBvBT,wBAAA,SACEb,EACA+B,GAQA,gBARAA,KAEApI,KAAKmH,kBAEAnH,KAAK2H,UAAUtB,KAClBrG,KAAK2H,UAAUtB,GAAQ,KAGpBrG,KAAK2H,UAAUtB,GAAM+B,GAAqB,CAK7C,IAAMC,EACJD,IAAuBnB,EACnBmB,OACA5E,EACAgB,EAAUxE,KAAKuH,UAAUC,SAASc,UAAUjC,GAChDrG,KACAA,KAAKuI,UAAUC,KAAKxI,MACpBqI,GAEFrI,KAAK2H,UAAUtB,GAAM+B,GAAsB5D,EAG7C,OAAOxE,KAAK2H,UAAUtB,GAAM+B,IAOtBlB,sBAAR,SAAkBuB,GAEhBvF,EAAWlD,KAAMyI,IAOXvB,4BAAR,WACE,GAAIlH,KAAKmI,WACP,MAAMnB,EAAcrD,qBAA6B,CAAE+E,QAAS1I,KAAKqH,YArHrE,WACEsB,EACAC,EACiBrB,GAAAvH,eAAAuH,EAVXvH,iBAAa,EACbA,eAA2B,GAI1BA,cAAW,GAOlBA,KAAKqH,MAAQuB,EAAOvC,KACpBrG,KAAKoH,gCACHwB,EAAOC,iCAAkC,EAC3C7I,KAAKsH,SNvCT,SAA4B5G,GAC1B,OAAOwC,OAAWM,EAAW9C,GMsCXoI,CAA0BH,iBCxCjCI,EAAS,IAAIpC,EAAO,iBCFjC,IAEaqC,ECOb,WAIE,IAAMC,ECgBR,SACEC,GAEA,IAAMC,EAAwC,GACxCb,EAA2D,GAC3Dc,EAA2C,GAG3CH,EAA+B,CAInCI,YAAY,EACZC,cA+DF,SACEX,EACAY,gBAAAA,MAEA,GAAyB,iBAAdA,GAAwC,OAAdA,EAAoB,CAEvDA,EAAY,CAAElD,KADDkD,GAIf,IAAMX,EAASW,OAEK/F,IAAhBoF,EAAOvC,OACTuC,EAAOvC,KAAOY,GAGR,IAAAZ,SAER,GAAoB,iBAATA,IAAsBA,EAC/B,MAAMW,EAAcrD,sBAA8B,CAChD+E,QAASc,OAAOnD,KAIpB,GAAIZ,EAAS0D,EAAM9C,GACjB,MAAMW,EAAcrD,uBAA+B,CAAE+E,QAASrC,IAGhE,IAAMoD,EAAM,IAAIP,EACdP,EACAC,EACAK,GAMF,OAFAS,EADAP,EAAK9C,GAAQoD,EACK,UAEXA,GAjGPA,MAEAN,KAAM,KACNQ,YAAaC,EACbpC,SAAU,CACRqC,gBA8GJ,SACExD,EACAyD,EACAC,EACAC,EACAC,gBAAAA,MAGA,GAAI3B,EAAUjC,GAGZ,OAFA0C,EAAOmB,MAAM,oDAAoD7D,OAEzD4C,EAAkB5C,GAM5BiC,EAAUjC,GAAQyD,EAGdE,IACFZ,EAAS/C,GAAQ2D,EAGjBG,IAAUC,QAAQ,SAAAX,GAChBO,EAAQ,SAAUP,MAKtB,SAASY,EAAiBC,GAExB,gBAFwBA,EAAsBb,KAElB,mBAAjBa,EAAOjE,GAGhB,MAAMW,EAAcrD,8BAAsC,CACxD+E,QAASrC,IAMb,OAAOiE,EAAOjE,UAIU7C,IAAtBuG,GACF7G,EAAWmH,EAAkBN,GAkB/B,OAbAd,EAAU5C,GAAQgE,EAIlBnB,EAAgBrJ,UAAUwG,GAIxB,eAAS,aAAAjC,mBAAAA,IAAA0B,kBAEP,OADmB9F,KAAKuK,YAAY/B,KAAKxI,KAAMqG,GAC7BtG,MAAMC,KAAMiK,EAAyBnE,EAAO,KAG3DuE,GA9KL5C,UA4BJ,SAAmBpB,GAEjBqD,EADYP,EAAK9C,GACC,iBACX8C,EAAK9C,IA9BViC,YACAkC,iBAmCJ,SAASf,EAAIpD,GAEX,IAAKZ,EAAS0D,EADd9C,EAAOA,GAAQY,GAEb,MAAMD,EAAcrD,gBAAwB,CAAE+E,QAASrC,IAEzD,OAAO8C,EAAK9C,GAuDd,SAAS8D,IAEP,OAAOpL,OAAOoG,KAAKgE,GAAMlB,IAAI,SAAA5B,GAAQ,OAAA8C,EAAK9C,KA8E5C,SAASqD,EAAaD,EAAkBgB,GACtC,IAA0B,QAAArF,EAAArG,OAAOoG,KAAKmD,GAAZlE,WAAAA,IAAwB,CAA7C,IAEGsG,EAAcF,EAAaf,QACjC,GAAoB,OAAhBiB,EACF,OAGEtB,EAASsB,IACXtB,EAASsB,GAAaD,EAAWhB,IAOvC,SAASe,EAAaf,EAAkBpD,GACtC,MAAa,eAATA,EACK,KAGUA,EAKrB,OA1LC4C,EAA2B,QAAIA,EAGhClK,OAAO4L,eAAe1B,EAAW,OAAQ,CACvC2B,IAAKT,IAyBPV,EAAS,IAAIP,EA6JND,EDhPW4B,CAA4B3D,GAE9C+B,EAAUU,YAAiBV,EAAUU,oBAErC,IAAME,EAAmBZ,EAAiCzB,SACvDqC,gBA4BH,OA3BCZ,EAAiCzB,SAASqC,gBAM3C,SACExD,EACAyD,EACAC,EACAC,EACAC,GAGA,GAAa,gBAAT5D,GAAmC,kBAATA,EAI9B,OAAOwD,EACLxD,EACAyD,EACAC,EACAC,EACAC,GARA,MAAMvG,MAAS2C,yDAYZ4C,ED5Ce6B,GGfxB,SAASC,EAAiBC,GACxB,OAAO,IAAI1K,QAAQ,SAASC,EAASC,GACnCwK,EAAQC,UAAY,WAClB1K,EAAQyK,EAAQjK,SAGlBiK,EAAQE,QAAU,WAChB1K,EAAOwK,EAAQrI,UAKrB,SAASwI,EAAqBzF,EAAK0F,EAAQtF,GACzC,IAAIkF,EACA7L,EAAI,IAAImB,QAAQ,SAASC,EAASC,GAEpCuK,EADAC,EAAUtF,EAAI0F,GAAQrL,MAAM2F,EAAKI,IACP7E,KAAKV,EAASC,KAI1C,OADArB,EAAE6L,QAAUA,EACL7L,EAWT,SAASkM,EAAgBC,EAAYC,EAAYC,GAC/CA,EAAWpB,QAAQ,SAAS3G,GAC1B1E,OAAO4L,eAAeW,EAAWzL,UAAW4D,EAAM,CAChDmH,IAAK,WACH,OAAO5K,KAAKuL,GAAY9H,IAE1BgI,IAAK,SAAS5E,GACZ7G,KAAKuL,GAAY9H,GAAQoD,OAMjC,SAAS6E,EAAoBJ,EAAYC,EAAYI,EAAaH,GAChEA,EAAWpB,QAAQ,SAAS3G,GACpBA,KAAQkI,EAAY9L,YAC1ByL,EAAWzL,UAAU4D,GAAQ,WAC3B,OAAO0H,EAAqBnL,KAAKuL,GAAa9H,EAAM9D,eAK1D,SAASiM,EAAaN,EAAYC,EAAYI,EAAaH,GACzDA,EAAWpB,QAAQ,SAAS3G,GACpBA,KAAQkI,EAAY9L,YAC1ByL,EAAWzL,UAAU4D,GAAQ,WAC3B,OAAOzD,KAAKuL,GAAY9H,GAAM1D,MAAMC,KAAKuL,GAAa5L,eAK5D,SAASkM,EAA0BP,EAAYC,EAAYI,EAAaH,GACtEA,EAAWpB,QAAQ,SAAS3G,GACpBA,KAAQkI,EAAY9L,YAC1ByL,EAAWzL,UAAU4D,GAAQ,WAC3B,OA3CN,SAAoCiC,EAAK0F,EAAQtF,GAC/C,IAAI3G,EAAIgM,EAAqBzF,EAAK0F,EAAQtF,GAC1C,OAAO3G,EAAE8B,KAAK,SAASP,GACrB,GAAKA,EACL,OAAO,IAAIoL,EAAOpL,EAAOvB,EAAE6L,WAuClBe,CAA2B/L,KAAKuL,GAAa9H,EAAM9D,eAKhE,SAASqM,EAAMC,GACbjM,KAAKkM,OAASD,EAuBhB,SAASH,EAAOK,EAAQnB,GACtBhL,KAAKoM,QAAUD,EACfnM,KAAKqM,SAAWrB,EA+BlB,SAASsB,EAAYC,GACnBvM,KAAKwM,OAASD,EAuChB,SAASE,EAAYC,GACnB1M,KAAK2M,IAAMD,EACX1M,KAAK4M,SAAW,IAAItM,QAAQ,SAASC,EAASC,GAC5CkM,EAAeG,WAAa,WAC1BtM,KAEFmM,EAAexB,QAAU,WACvB1K,EAAOkM,EAAe/J,QAExB+J,EAAeI,QAAU,WACvBtM,EAAOkM,EAAe/J,UAkB5B,SAASoK,EAAUC,EAAIC,EAAYC,GACjClN,KAAKmN,IAAMH,EACXhN,KAAKiN,WAAaA,EAClBjN,KAAKkN,YAAc,IAAIT,EAAYS,GAkBrC,SAASE,EAAGJ,GACVhN,KAAKmN,IAAMH,EA/Ib3B,EAAgBW,EAAO,SAAU,CAC/B,OACA,UACA,aACA,WAGFN,EAAoBM,EAAO,SAAUqB,SAAU,CAC7C,MACA,SACA,SACA,aACA,UAGFxB,EAA0BG,EAAO,SAAUqB,SAAU,CACnD,aACA,kBAQFhC,EAAgBS,EAAQ,UAAW,CACjC,YACA,MACA,aACA,UAGFJ,EAAoBI,EAAQ,UAAWwB,UAAW,CAChD,SACA,WAIF,CAAC,UAAW,WAAY,sBAAsBlD,QAAQ,SAASmD,GACvDA,KAAcD,UAAUzN,YAC9BiM,EAAOjM,UAAU0N,GAAc,WAC7B,IAAIpB,EAASnM,KACT8F,EAAOnG,UACX,OAAOW,QAAQC,UAAUU,KAAK,WAE5B,OADAkL,EAAOC,QAAQmB,GAAYxN,MAAMoM,EAAOC,QAAStG,GAC1CiF,EAAiBoB,EAAOE,UAAUpL,KAAK,SAASP,GACrD,GAAKA,EACL,OAAO,IAAIoL,EAAOpL,EAAOyL,EAAOE,kBAUxCC,EAAYzM,UAAU2N,YAAc,WAClC,OAAO,IAAIxB,EAAMhM,KAAKwM,OAAOgB,YAAYzN,MAAMC,KAAKwM,OAAQ7M,aAG9D2M,EAAYzM,UAAUoM,MAAQ,WAC5B,OAAO,IAAID,EAAMhM,KAAKwM,OAAOP,MAAMlM,MAAMC,KAAKwM,OAAQ7M,aAGxD0L,EAAgBiB,EAAa,SAAU,CACrC,OACA,UACA,aACA,kBAGFZ,EAAoBY,EAAa,SAAUmB,eAAgB,CACzD,MACA,MACA,SACA,QACA,MACA,SACA,SACA,aACA,UAGF5B,EAA0BS,EAAa,SAAUmB,eAAgB,CAC/D,aACA,kBAGF7B,EAAaU,EAAa,SAAUmB,eAAgB,CAClD,gBAkBFhB,EAAY5M,UAAU6N,YAAc,WAClC,OAAO,IAAIpB,EAAYtM,KAAK2M,IAAIe,YAAY3N,MAAMC,KAAK2M,IAAKhN,aAG9D0L,EAAgBoB,EAAa,MAAO,CAClC,mBACA,SAGFb,EAAaa,EAAa,MAAOkB,eAAgB,CAC/C,UASFZ,EAAUlN,UAAU+N,kBAAoB,WACtC,OAAO,IAAItB,EAAYtM,KAAKmN,IAAIS,kBAAkB7N,MAAMC,KAAKmN,IAAKxN,aAGpE0L,EAAgB0B,EAAW,MAAO,CAChC,OACA,UACA,qBAGFnB,EAAamB,EAAW,MAAOc,YAAa,CAC1C,oBACA,UAOFT,EAAGvN,UAAUqN,YAAc,WACzB,OAAO,IAAIT,EAAYzM,KAAKmN,IAAID,YAAYnN,MAAMC,KAAKmN,IAAKxN,aAG9D0L,EAAgB+B,EAAI,MAAO,CACzB,OACA,UACA,qBAGFxB,EAAawB,EAAI,MAAOS,YAAa,CACnC,UAKF,CAAC,aAAc,iBAAiBzD,QAAQ,SAAS0D,GAC/C,CAACxB,EAAaN,GAAO5B,QAAQ,SAASuB,GAE9BmC,KAAYnC,EAAY9L,YAE9B8L,EAAY9L,UAAUiO,EAASnJ,QAAQ,OAAQ,YAAc,WAC3D,IAAImB,EAvPV,SAAiBiI,GACf,OAAO7O,MAAMW,UAAUwF,MAAMvF,KAAKiO,GAsPnBC,CAAQrO,WACfsO,EAAWnI,EAAKA,EAAKlG,OAAS,GAC9BsO,EAAelO,KAAKwM,QAAUxM,KAAKkM,OACnClB,EAAUkD,EAAaJ,GAAU/N,MAAMmO,EAAcpI,EAAKT,MAAM,GAAI,IACxE2F,EAAQC,UAAY,WAClBgD,EAASjD,EAAQjK,eAOzB,CAACiL,EAAOM,GAAalC,QAAQ,SAASuB,GAChCA,EAAY9L,UAAUsO,SAC1BxC,EAAY9L,UAAUsO,OAAS,SAASC,EAAOC,GAC7C,IAAIzI,EAAW5F,KACXsO,EAAQ,GAEZ,OAAO,IAAIhO,QAAQ,SAASC,GAC1BqF,EAAS2I,cAAcH,EAAO,SAASjC,GAChCA,GAILmC,EAAMjM,KAAK8J,EAAOzL,YAEJ8C,IAAV6K,GAAuBC,EAAM1O,QAAUyO,EAI3ClC,EAAOqC,WAHLjO,EAAQ+N,IANR/N,EAAQ+N,iBCzPLG,EAAqB,IAErBC,EAAkB,UAClBC,EAAwB,SAExBC,EACX,kDAEWC,EAA0B,KCIjCC,uCACmC,oCACvC1J,gCACE,4CACFA,2BAAmC,iCACnCA,oBAA4B,2CAC5BA,4BAAoC,mCACpCA,oBACE,6FACFA,iBAAyB,kDACzBA,iCACE,8EASS4B,EAAgB,IAAI7C,EDtBV,gBACK,gBCwB1B2K,GAYF,SAAgBC,EAAcpM,GAC5B,OACEA,aAAiBsB,GACjBtB,EAAMkB,KAAKmL,2BClDf,SAEgBC,GAAiBxF,GAC/B,IAAKA,IAAQA,EAAId,QACf,MAAM3B,EAAcrD,oCAGtB,IAAM+E,EAAUe,EAAIpD,KACdjB,YAAE8J,cAAWC,WAAQC,UAE3B,KAAK1G,GAAYwG,GAAcC,GAAWC,GACxC,MAAMpI,EAAcrD,oCAGtB,MAAO,CAAE+E,UAASwG,YAAWC,SAAQC,kBCFvBC,GAAyBjK,OAAE8J,cACzC,OAAUN,eAAkCM,mBAG9C,SAAgBI,GACdC,GAEA,MAAO,CACLC,MAAOD,EAASC,MAChBC,gBACAC,UA8DJ,SAA2CC,GAEzC,OAAOC,OAAOD,EAAkBhL,QAAQ,IAAK,QAhEhCkL,CAAkCN,EAASG,WACtDI,aAAcxM,KAAK0C,OAIvB,SAAsB+J,GACpBC,EACAT,mGAEoC,SAAMA,EAASU,eAEnD,OAFMC,EAA8B9K,SAC9B+K,EAAYD,EAAavN,SACxBqE,EAAcrD,wBAAiC,CACpDqM,cACAI,WAAYD,EAAUtM,KACtBwM,cAAeF,EAAUrM,QACzBwM,aAAcH,EAAUI,eAI5B,SAAgBC,GAAWpL,OAAE+J,WAC3B,OAAO,IAAIsB,QAAQ,CACjBC,eAAgB,mBAChBC,OAAQ,mBACRC,iBAAkBzB,IAItB,SAAgB0B,GACdC,EACA1L,OAAE2L,iBAEIC,EAAUR,GAAWM,GAE3B,OADAE,EAAQC,OAAO,gBAmCjB,SAAgCF,GAC9B,OAAUpC,MAAyBoC,EApCHG,CAAuBH,IAChDC,EAgBT,SAAsBG,GACpBC,iGAEe,SAAMA,YAErB,OAAqB,MAFfrQ,EAASqE,UAEJmL,QAAiBxP,EAAOwP,OAAS,OAEnCa,QAGFrQ,QClFT,SAAgBsQ,GAAMC,GACpB,OAAO,IAAIhR,QAAc,SAAAC,GACvBgR,WAAWhR,EAAS+Q,cCHRE,GAAsBC,GAEpC,OADYC,KAAKlI,OAAOmI,mBAAPnI,OlBsHZ,WACH,IAAK,IAAI9G,EAAK,GAAIjD,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3CiD,EAAKA,EAAGkP,OAAOtP,EAAO3C,UAAUF,KACpC,OAAOiD,GkBzH+B+O,KAC7B9M,QAAQ,MAAO,KAAKA,QAAQ,MAAO,KCAzC,IAAMkN,GAAoB,oBACpBC,GAAc,GAM3B,SAAgBC,KACd,IAGE,IAAMC,EAAe,IAAIC,WAAW,KAElCC,KAAKC,QAAYD,KAA0CE,UACtDC,gBAAgBL,GAGvBA,EAAa,GAAK,IAAcA,EAAa,GAAK,GAElD,IAAMM,EAUV,SAAgBN,GAKd,OAJkBR,GAAsBQ,GAIvBO,OAAO,EAAG,IAfbC,CAAOR,GAEnB,OAAOH,GAAkBY,KAAKH,GAAOA,EAAMR,GAC3C,SAEA,OAAOA,ICtBX,IAAMY,GAAgB,kCAChBC,GAAmB,EACnBC,GAAoB,+BAEtBC,GAAgC,KACpC,SAASC,KAcP,OAZED,GADGA,IRgQA,SAAgBxM,EAAMuD,EAASmJ,GACpC,IAAI5T,EAAIgM,EAAqB6H,UAAW,OAAQ,CAAC3M,EAAMuD,IACnDoB,EAAU7L,EAAE6L,QAUhB,OARIA,IACFA,EAAQiI,gBAAkB,SAASC,GAC7BH,GACFA,EAAgB,IAAIhG,EAAU/B,EAAQjK,OAAQmS,EAAMjG,WAAYjC,EAAQkC,gBAKvE/N,EAAE8B,KAAK,SAAS+L,GACrB,OAAO,IAAII,EAAGJ,KQ5QFmG,CAAOT,GAAeC,GAAkB,SAAAS,GAMlD,OAAQA,EAAUnG,YAChB,KAAK,EACHmG,EAAUxF,kBAAkBgF,OAoBtC,SAAsBnH,GACpBqF,EACApQ,qGAGW,OADLmE,EAAMwO,GAAOvC,MACFgC,aAEjB,OAFM9F,EAAK5H,aACLkO,EAAKtG,EAAGE,YAAY0F,GAAmB,cACpClF,YAAYkF,IAAmBW,IAAI7S,EAAOmE,WACnD,OADAO,YACMkO,EAAG1G,iBACT,OADAxH,YACO1E,QAIT,SAAsB8S,GAAO1C,qGAEhB,OADLjM,EAAMwO,GAAOvC,MACFgC,aAEjB,OAFM9F,EAAK5H,aACLkO,EAAKtG,EAAGE,YAAY0F,GAAmB,cACpClF,YAAYkF,IAAmB1K,OAAOrD,WAC/C,OADAO,YACMkO,EAAG1G,wBAATxH,kBASF,SAAsBqO,GACpB3C,EACA4C,2GAGW,OADL7O,EAAMwO,GAAOvC,MACFgC,aAG+B,OAH1C9F,EAAK5H,SACLkO,EAAKtG,EAAGE,YAAY0F,GAAmB,iBACvCrG,EAAQ+G,EAAG5F,YAAYkF,KAC+BhI,IAAI/F,kBAA1D8O,EAA0CvO,cAG/B5B,KAFXoQ,EAAWF,EAASC,aAGlBpH,EAAMrE,OAAOrD,kBAAnBO,sBAEA,SAAMmH,EAAMgH,IAAIK,EAAU/O,WAA1BO,0BAGF,SAAMkO,EAAG1G,iBACT,OADAxH,YACOwO,QAGT,SAOSP,GAAOvC,GACd,OAAUA,EAAUpI,YAAWoI,EAAU1B,MCxE3C,SAAsByE,GACpB/C,qGAI0B,SAAM2C,GAAO3C,EAAW,SAAAgD,GAChD,IAAMC,EAwBV,SACED,GAOA,OAAOE,GAL0BF,GAAY,CAC3CxB,IAAKP,KACLkC,uBA7B0BC,CAAgCJ,GACpDK,EAsCV,SACErD,EACAiD,GAEA,CAAA,OAAIA,EAAkBE,mBAuBf,WACLF,EAAkBE,mBAEX,CACLF,oBACAK,oBAmCN,SACEtD,iGAM+B,SAAMuD,GAA0BvD,WAA3DwD,EAA2BlP,qCACxBkP,EAAML,4BAEL5C,GAAM,aAEJ,OAFRjM,YAEciP,GAA0BvD,kBAAxCwD,EAAQlP,sBAGV,OAAIkP,EAAML,mBACR,MAAMjN,EAAcrD,qCAGtB,SAAO2Q,QAtDkBC,CAAyBzD,IAGzC,CAAEiD,qBA9BT,IAAKS,UAAUC,OAAQ,CAErB,IAAMC,EAA+BpU,QAAQE,OAC3CwG,EAAcrD,uBAEhB,MAAO,CACLoQ,oBACAK,oBAAqBM,GAKzB,IAAMC,EAA+C,CACnDrC,IAAKyB,EAAkBzB,IACvB2B,qBACAW,iBAAkBtR,KAAK0C,OAEnBoO,EAkBV,SACEtD,EACAiD,mGAGsC,yCChGtCjD,EACA1L,OAAEkN,gHAkBe,OAhBXuC,EAAWxF,GAAyByB,GAEpCE,EAAUR,GAAWM,GACrB3P,EAAO,CACXmR,MACAwC,YAAanG,EACbS,MAAO0B,EAAU1B,MACjB2F,WAAYrG,GAGR1D,EAAuB,CAC3BI,OAAQ,OACR4F,UACA7P,KAAM6T,KAAKC,UAAU9T,OAGAgQ,GAAmB,WAAM,OAAA+D,MAAML,EAAU7J,oBAA1DuE,EAAWrK,UACJiQ,MAC6C5F,EAASU,qBAOjE,OAPMmF,EAA4ClQ,YACe,CAC/DoN,IAAK8C,EAAc9C,KAAOA,EAC1B2B,qBACAlD,aAAcqE,EAAcrE,aAC5BsE,UAAW/F,GAAiC8F,EAAcC,oBAItD,SAAMtF,GAAqB,sBAAuBR,WAAxD,MAAMrK,cDkEoCoQ,CACxCxE,EACAiD,WAEF,OAJMwB,EAA8BnQ,YAI7BqG,GAAIqF,EAAWyE,kBAElBxG,eAAqC,MAAjByG,EAAEpF,cAGlBoD,GAAO1C,wBAAb1L,sBAGA,SAAMqG,GAAIqF,EAAW,CACnBwB,IAAKyB,EAAkBzB,IACvB2B,+BAFF7O,0BAKF,MAAMoQ,wBAxCsBC,CAC1B3E,EACA6D,GAEF,MAAO,CAAEZ,kBAAmBY,EAAiBP,wBAhEpBsB,CACvB5E,EACAiD,GAGF,OADAK,EAAsBD,EAAiBC,oBAChCD,EAAiBJ,mCAPpBA,EAAoB7O,UAUJoN,MAAQR,kBAEMsC,WAAlC,UAAShP,oBAAmBF,oBAG9B,SAAO,CACL6O,oBACAK,6BAwHJ,SAASC,GACPvD,GAEA,OAAO2C,GAAO3C,EAAW,SAAAgD,GACvB,IAAKA,EACH,MAAM9M,EAAcrD,iCAEtB,OAAOqQ,GAAqBF,KAIhC,SAASE,GAAqBM,GAC5B,OAUF,SACEP,GAEA,WACEA,EAAkBE,oBAClBF,EAAkBa,iBAAmBnG,EAAqBnL,KAAK0C,MAf7D2P,CAA+BrB,GAC1B,CACLhC,IAAKgC,EAAMhC,IACX2B,sBAIGK,WEzKasB,GACpB9E,EACAiD,2GAiBiB,OAfXc,EA2BR,SACE/D,EACA1L,OAAEkN,QAEF,OAAUjD,GAAyByB,OAAcwB,yBA/BhCuD,CAA6B/E,EAAWiD,GAEnD/C,EAAUH,GAAmBC,EAAWiD,GACxC5S,EAAO,CACX2U,aAAc,CACZf,WAAYrG,IAIV1D,EAAuB,CAC3BI,OAAQ,OACR4F,UACA7P,KAAM6T,KAAKC,UAAU9T,OAGAgQ,GAAmB,WAAM,OAAA+D,MAAML,EAAU7J,oBAA1DuE,EAAWnK,UACJ+P,MAC4C5F,EAASU,qBAIhE,OAJMmF,EAA2ChQ,YACFkK,GAC7C8F,WAII,SAAMrF,GAAqB,sBAAuBR,WAAxD,MAAMnK,cCrBV,SAAsB2Q,GACpBjF,EACAkF,uBAAAA,iGAGc,SAAMvC,GAAO3C,EAAW,SAAAgD,GACpC,IAAKmC,GAAkBnC,GACrB,MAAM9M,EAAcrD,yBAGtB,IAAMuS,EAAepC,EAASuB,UAC9B,IAAKW,GAoHT,SAA0BX,GACxB,WACEA,EAAU5F,gBAKd,SAA4B4F,GAC1B,IAAMrP,EAAM1C,KAAK0C,MACjB,OACEA,EAAMqP,EAAUvF,cAChBuF,EAAUvF,aAAeuF,EAAU3F,UAAY1J,EAAM6I,EARpDsH,CAAmBd,GAvHCe,CAAiBF,GAEpC,OAAOpC,EACF,OAAIoC,EAAazG,cAGtB,OADA4G,EAuBN,SACEvF,mGAMY,SAAMwF,GAAuBxF,WAArCwD,EAAQlP,qCACLkP,EAAMe,UAAU5F,uBAEf4B,GAAM,aAEJ,OAFRjM,YAEckR,GAAuBxF,kBAArCwD,EAAQlP,sBAIV,QADMiQ,EAAYf,EAAMe,WACV5F,cACZ,MAAMzI,EAAcrD,gCAEpB,SAAO0R,QA1CUkB,CAA0BzF,GAClCgD,EAGP,IAAKU,UAAUC,OACb,MAAMzN,EAAcrD,sBAGtB,IAAMgR,EAuHZ,SACEb,GAEA,IAAM0C,EAA2C,CAC/C/G,gBACAgH,YAAanT,KAAK0C,OAEpB,cACK8N,IACHuB,UAAWmB,IAhIeE,CAAoC5C,GAE5D,OADAuC,EAiEN,SACEvF,EACAiD,qGAGoB,gCAAM6B,GAAkB9E,EAAWiD,WAKrD,OALMsB,EAAYjQ,SACZuR,SACD5C,IACHsB,iBAEI5J,GAAIqF,EAAW6F,WACrB,OADAvR,YACOiQ,iBAEHtG,eAAsC,MAAjByG,EAAEpF,YAAuC,MAAjBoF,EAAEpF,oBAG3CoD,GAAO1C,kBAAb1L,sBAMA,OAJMuR,SACD5C,IACHsB,UAAW,CAAE5F,sBAEThE,GAAIqF,EAAW6F,WAArBvR,0BAEF,MAAMoQ,wBAzFWoB,CAAyB9F,EAAW6D,GAC5CA,mBArBLL,EAAQpP,SAyBwBmR,KAC5BA,uBAANjR,EAAAF,sBACAE,EAACkP,EAAMe,2BACX,WAAiB7F,YAqCnB,SAAS8G,GACPxF,GAEA,OAAO2C,GAAO3C,EAAW,SAAAgD,GACvB,IAAKmC,GAAkBnC,GACrB,MAAM9M,EAAcrD,yBAItB,OA6EJ,SAAqC0R,GACnC,WACEA,EAAU5F,eACV4F,EAAUoB,YAAchI,EAAqBnL,KAAK0C,MAhF9C6Q,CADiB/C,EAASuB,kBAGvBvB,IACHuB,UAAW,CAAE5F,mBAIVqE,IAgCX,SAASmC,GACPlC,GAEA,YACwBvQ,IAAtBuQ,OACAA,EAAkBE,4BCxIA6C,GACpBrN,EACAuM,uBAAAA,6FAIA,SAOF,SACElF,qGAEmD,SAAM+C,GACvD/C,kBADI1L,EAA6CF,SAA3C6O,uBAAmBK,4BAMnBA,uBAANlP,sBACK,OAAI6O,EAAkBE,mBAE3B,MAAMjN,EAAcrD,qEAnBhBoT,CAFAjG,EAAY7B,GAAiBxF,YAMnC,OAJArE,YAIO2Q,GAAiBjF,EAAWkF,kBCTfgB,GACpBlG,EACAiD,uGAUiB,OARXc,EAcR,SACE/D,EACA1L,OAAEkN,QAEF,OAAUjD,GAAyByB,OAAcwB,EAlBhC2E,CAAkBnG,EAAWiD,GAExC/C,EAAUH,GAAmBC,EAAWiD,GACxC/I,EAAuB,CAC3BI,OAAQ,SACR4F,cAGqBG,GAAmB,WAAM,OAAA+D,MAAML,EAAU7J,oBAA1DuE,EAAWnK,UACH+P,YACApF,GAAqB,sBAAuBR,WAAxD,MAAMnK,+BCKY4D,EAHXxB,SAASqC,gBAdQ,gBAEoB,SAAAJ,GAI5C,OAFAwF,GAAiBxF,GAEV,CACLA,MACAyN,MAAO,WAAM,gBCbSzN,uGAEyB,SAAMoK,GADnD/C,EAAY7B,GAAiBxF,YAgBnC,OAfMrE,EAA6CF,SAA3C6O,uBAAmBK,0BAMzBA,EAAoB+C,MAAM,kBAGxBpD,EAAkBE,oBAGpB8B,GAAiBjF,GAAWqG,MAAM,iBAG7BpD,EAAkBzB,UDJR4E,CAAMzN,IACnBqN,SAAU,SAACd,GAA2B,OAAAc,GAASrN,EAAKuM,IACpD9N,OAAQ,WAAM,gBEdqBuB,mGAGzB,SAAMgK,GAFd3C,EAAY7B,GAAiBxF,GAEG,SAAAqK,GACpC,IAAIA,OAAYA,EAASG,mBAIzB,OAAOH,iBALHQ,EAAQlP,UAQV,mBACEkP,EAAML,mBAAN,YAEF,MAAMjN,EAAcrD,oDACX2Q,EAAML,mBAAN,eACJO,UAAUC,OAAX,YACF,MAAMzN,EAAcrD,6BAEpB,SAAMyT,GAA0BtG,EAAWwD,WAC3C,OADAlP,YACMoO,GAAO1C,WAAb1L,yCFNY4R,CAAmBvN,cGZnC4N,GACAC,GCPAC,GCDS5N,YAMA6N,GAAuB,wBAUvBC,GAA2B,+BAE3BC,GACX,qCAGWC,GAAe,cCNtB7I,6BAC8B,yCAClC1J,oBAAkC,qCAClCA,gBAAuB,2BACvBA,gBAAuB,2BACvBA,oBAA2B,+BAC3BA,iBAAwB,4BACxBA,qBAA4B,sCAC5BA,qBACE,4EACFA,yBAAuB,wBACvBA,6BACE,8CACFA,8BACE,gDACFA,kCACE,wDAWS4B,GAAgB,IAAI7C,EDtBV,cCwBrBwT,GACA7I,QHGA8I,oBAAA,WAEE,OAAO5X,KAAK6X,eAAeC,KAAKC,MAAM,KAAK,IAG7CH,kBAAA,SAAKvR,GACErG,KAAKgY,aAAgBhY,KAAKgY,YAAYC,MAG3CjY,KAAKgY,YAAYC,KAAK5R,IAGxBuR,qBAAA,SAAQM,EAAqBC,EAAeC,GACrCpY,KAAKgY,aAAgBhY,KAAKgY,YAAYK,SAG3CrY,KAAKgY,YAAYK,QAAQH,EAAaC,EAAOC,IAG/CR,8BAAA,SAAiBU,GACf,OAAKtY,KAAKgY,aAAgBhY,KAAKgY,YAAYO,iBAGpCvY,KAAKgY,YAAYO,iBAAiBD,GAFhC,IAKXV,8BAAA,SAAiBvR,GACf,OAAKrG,KAAKgY,aAAgBhY,KAAKgY,YAAYQ,iBAGpCxY,KAAKgY,YAAYQ,iBAAiBnS,GAFhC,IAKXuR,2BAAA,WAEE,OACE5X,KAAKgY,cACJhY,KAAKgY,YAAYS,YAAczY,KAAKgY,YAAYU,OAAOC,kBAI5Df,mCAAA,WACE,SAAI1C,OAAS5U,SAAWN,KAAKwU,WAAaxU,KAAKwU,UAAUoE,gBAM3DhB,2BAAA,SACEiB,EACA5K,GAEKjO,KAAK8Y,qBAGO,IAAI9Y,KAAK8Y,oBAAoB,SAAAC,GAC5C,IAAoB,QAAA3T,EAAA2T,EAAKC,aAAL5U,WAAAA,IAAmB,CAAlC,IAAMkQ,OAETrG,EAASqG,MAKJ2E,QAAQ,CAAEC,WAAY,CAACL,MAG3BjB,eAAP,WAIE,YAHoBpU,IAAhB6T,KACFA,GAAc,IAAIO,GAAIN,KAEjBD,QAxFT,YAAY8B,GACV,IAAKA,EACH,MAAMnS,GAAcrD,oBAEtB3D,KAAKgY,YAAcmB,EAAOnB,YAC1BhY,KAAK8Y,oBAAsBK,EAAOL,oBAClC9Y,KAAK6X,eAAiBsB,EAAOC,SAC7BpZ,KAAKwU,UAAY2E,EAAO3E,UACxBxU,KAAKqZ,SAAWF,EAAOE,SACnBrZ,KAAKwU,WAAaxU,KAAKwU,UAAUoE,gBAEnC5Y,KAAKsZ,aAAeH,EAAOG,cAEzBH,EAAOI,aAAeJ,EAAOI,YAAYC,oBAC3CxZ,KAAKwZ,kBAAoBL,EAAOI,YAAYC,mBC1ClD,IGFIC,GCOQC,GAAAA,OJqBVC,sBAAA,WACE,IAAMvK,EACJpP,KAAK4Z,qBACL5Z,KAAK4Z,oBAAoBjR,SACzB3I,KAAK4Z,oBAAoBjR,QAAQyG,MACnC,IAAKA,EACH,MAAMpI,GAAcrD,oBAEtB,OAAOyL,GAGTuK,0BAAA,WACE,IAAMzK,EACJlP,KAAK4Z,qBACL5Z,KAAK4Z,oBAAoBjR,SACzB3I,KAAK4Z,oBAAoBjR,QAAQuG,UACnC,IAAKA,EACH,MAAMlI,GAAcrD,wBAEtB,OAAOuL,GAGTyK,uBAAA,WACE,IAAMxK,EACJnP,KAAK4Z,qBACL5Z,KAAK4Z,oBAAoBjR,SACzB3I,KAAK4Z,oBAAoBjR,QAAQwG,OACnC,IAAKA,EACH,MAAMnI,GAAcrD,qBAEtB,OAAOwL,GAGFwK,eAAP,WAIE,YAHgCnW,IAA5B+T,KACFA,GAA0B,IAAIoC,IAEzBpC,QA/DX,cAEEvX,6BAAyB,EAGzBA,4BAAwB,EAGxBA,qBAAiB,EAEjBA,wBAAqB,EACrBA,iCAA8B,EAE9BA,oBACE,oEACFA,eAAY,IAGZA,4BAAwB,EACxBA,8BAA0B,EAG1BA,sBAAmB,GGTrB,SAAgB6Z,KACd,OAAOJ,ICTGC,GAAAA,GAAAA,gCAEVA,2BACAA,yBACAA,+BACAA,6BAWF,IAAMI,GAA8B,CAAC,YAAa,UAAW,OACvDC,GAAyB,IAAIC,OAAO,kBAiB1C,SAAgBC,KAGd,OAFiBrC,GAAIsC,cAAcb,SACFc,iBAE/B,IAAK,UACH,OAAOT,GAAgBU,QACzB,IAAK,SACH,OAAOV,GAAgBW,OACzB,IAAK,YACH,OAAOX,GAAgBY,UACzB,QACE,OAAOZ,GAAgBa,SCvD7B,IAGaC,GAAgB,IAAI7T,EAAOgR,IACxC6C,GAAczU,SAAWP,EAASc,KCOlC,IAAMmU,GAA4B,QAY5BC,GAAqC,CACzCC,gBAAgB,GAmBZC,GAAkB,8BAExB,SAAgBC,GAAUpB,GACxB,IAAM7Q,EAcR,WACE,IAAM0Q,EAAe1B,GAAIsC,cAAcZ,aACjCwB,EAAexB,EAAayB,QAAQrD,IAC1C,IAAKoD,IAiIP,SAAqBE,GACnB,OAAOpL,OAAOoL,GAAU1X,KAAK0C,MAlIPiV,CAAYH,GAChC,OAGF,IAAMI,EAAoB5B,EAAayB,QAAQtD,IAC/C,IAAKyD,EACH,OAEF,IAEE,OAD6ClG,KAAKmG,MAAMD,GAExD,SACA,QA7BaE,GACf,OAAIxS,GACFyS,GAAczS,GACPtI,QAAQC,WAgDnB,SACEkZ,GAGA,OH/EF,WACE,IAAM6B,EAAmB3B,GAAgBO,cACtCN,oBAAoB2B,gBACpBzE,WAKH,OAHAwE,EAAiBra,KAAK,SAACua,MAGhBF,EGuEAG,GACJxa,KAAK,SAAAoU,GACJ,IACMqG,EAAiB,2DADL/B,GAAgBO,cAAcyB,iDAC6EhC,GAAgBO,cAAc0B,YACrJ5Q,EAAU,IAAI6Q,QAAQH,EAAgB,CAC1CtQ,OAAQ,OACR4F,QAAS,CACP8K,cAAkBlB,OAAmBvF,GAGvClU,KAAM6T,KAAKC,UAAU,CACnB8G,gBAAiBtC,EACjBuC,sBAAuB3G,EACvB4G,OAAQtC,GAAgBO,cAAcgC,WACtCC,YAAaxS,GACbyS,YAAa3B,OAIjB,OAAOvF,MAAMlK,GAAS/J,KAAK,SAAAsO,GACzB,GAAIA,EAAS4F,GACX,OAAO5F,EAASU,OAGlB,MAAMjJ,GAAcrD,iCAGvBwT,MAAM,WACLqD,GAAcjU,KAAK8V,MA7EhBC,CAAgB7C,GACpBxY,KAAK,SAAA2H,GAAU,OAAAyS,GAAczS,KAC7B3H,KACC,SAAA2H,GAAU,OAwBhB,SAAqBA,GACnB,IAAKA,EACH,OAEF,IAAM0Q,EAAe1B,GAAIsC,cAAcZ,aACvCA,EAAaiD,QAAQ9E,GAA0BzC,KAAKC,UAAUrM,IAC9D0Q,EAAaiD,QACX7E,GACAlO,OACElG,KAAK0C,MAC8C,GAAjD2T,GAAgBO,cAAcsC,iBAAwB,GAAK,MAlCnDC,CAAY7T,IAC6C,cAsCzE,IAAMyT,GACJ,mDA4CF,SAAShB,GACPzS,GAEA,IAAKA,EACH,OAAOA,EAET,IAAM2O,EAA0BoC,GAAgBO,cAC1CwC,EAAU9T,EAAO8T,SAAW,GA2ClC,YA1C4BlZ,IAAxBkZ,EAAQC,YAEVpF,EAAwBoD,eACU,SAAhCnR,OAAOkT,EAAQC,aAIjBpF,EAAwBoD,eAAiBD,GAAkBC,eAEzD+B,EAAQE,iBACVrF,EAAwBsF,UAAYjN,OAAO8M,EAAQE,iBAIjDF,EAAQI,uBACVvF,EAAwBwF,eAAiBL,EAAQI,2BAIEtZ,IAAjDkZ,EAAQM,uCACVzF,EAAwB0F,4BAA8BrN,OACpD8M,EAAQM,4CAM+BxZ,IAAvCkZ,EAAQQ,6BACV3F,EAAwB4F,mBAAqBvN,OAC3C8M,EAAQQ,6BAOZ3F,EAAwB6F,sBAAwBC,GAC9C9F,EAAwB4F,oBAE1B5F,EAAwB+F,wBAA0BD,GAChD9F,EAAwB0F,6BAEnBrU,EAOT,SAASyU,GAAuBE,GAC9B,OAAOC,KAAKC,UAAYF,ECrM1B,IAYIG,GAFAC,KAIJ,SAAgBC,KAKd,OAJAD,KAEAD,GAAwBA,IAuB1B,WACE,IAAMrE,EAAWzB,GAAIsC,cAAcb,SACnC,OAAO,IAAI/Y,QAAQ,SAAAC,GACjB,GAAI8Y,GAAoC,aAAxBA,EAASwE,WAA2B,CAClD,IAAMC,EAAU,WACc,aAAxBzE,EAASwE,aACXxE,EAAS0E,oBAAoB,mBAAoBD,GACjDvd,MAGJ8Y,EAAS2E,iBAAiB,mBAAoBF,QAE9Cvd,MAzBG0d,GACJhd,KAAK,WAAM,OJxBhB,WAGE,IAAMid,EAAavE,GAAgBO,cAChCN,oBAAoB2B,gBACpBrE,QAKH,OAHAgH,EAAWjd,KAAK,SAACkd,GACf1E,GAAM0E,IAEDD,EIcOE,KACXnd,KAAK,SAAAwY,GAAO,OAAAoB,GAAUpB,KACtBxY,KACC,WAAM,OAAAod,MACN,WAAM,OAAAA,OAyBZ,SAASA,KACPV,KCrDF,ICiEI5U,GDjEEuV,GAA2B,IAG3BC,GAA0B,EAC5BC,GAAiBD,GA2BjBE,GAAsB,GAiF1B,SAAgBC,GAEdC,GAIA,OAAO,SAACC,EAAyBC,OAAkB,aAAAza,mBAAAA,IAAA0B,qBAfrD,SAAoBgZ,GAClB,IAAKA,EAAIC,YAAcD,EAAIhb,QACzB,MAAMkD,GAAcrD,yBAGtB8a,KAAYA,IAAOK,IAYjBE,CAAW,CACTlb,QAFc6a,eAAc7Y,GAG5BiZ,UAAWzb,KAAK0C,SCvDtB,SAASiZ,KACP,GAAIlW,GACF,OAAOA,GAET,IAAMmW,EAAWR,GAAUC,IAG3B,OAFA5V,GAAS,IAAIpC,EAAO,6BACbwY,WAAaD,EACbnW,GAGT,SAAgBqW,GAASC,GACvB,IAAMC,EAAkB3F,GAAgBO,eAEnCoF,EAAgBC,wBAA0BF,EAAMG,SAIhDF,EAAgBG,uBAA0BJ,EAAMG,SAIhD5H,GAAIsC,cAAcwF,0BAInBL,EAAMG,QAAUvF,OAAyBP,GAAgBU,SAK1DkF,EAAgB3E,gBAChB2E,EAAgBlC,4BFhFZO,GEsFLgC,GAAaN,GAIbzB,KAA2B3c,KACzB,WAAM,OAAA0e,GAAaN,IACnB,WAAM,OAAAM,GAAaN,OAKzB,SAASM,GAAaN,GAChBxF,MACFtI,WAAW,WAAM,OAAA0N,KAAY7Y,IAAIiZ,MAA4B,GA4BjE,SAASV,GAAWiB,EAAcC,GAChC,WAAIA,EAMN,SAAiCC,GAC/B,IAAMC,EAA6C,CACjDC,IAAKF,EAAeE,IACpBC,YAAaH,EAAeI,YAAc,EAC1CC,mBAAoB,IACpBC,uBAAwBN,EAAeO,qBACvCC,qBAAsBR,EAAeS,YACrCC,8BAA+BV,EAAeW,0BAC9CC,8BAA+BZ,EAAea,2BAE1CC,EAA6B,CACjCC,iBAAkBC,KAClBC,uBAAwBhB,GAE1B,OAAO/K,KAAKC,UAAU2L,GAnBbI,CAAwBpB,GAsBnC,SAAwBP,GACtB,IAAM4B,EAA2B,CAC/B5a,KAAMgZ,EAAMhZ,KACZ6a,QAAS7B,EAAMG,OACfc,qBAAsBjB,EAAMkB,YAC5BY,YAAa9B,EAAM+B,YAGsB,IAAvCriB,OAAOoG,KAAKka,EAAMgC,UAAUzhB,SAC9BqhB,EAAYI,SAAWC,GAAuBjC,EAAMgC,WAEtD,IAAME,EAAmBlC,EAAMmC,gBACc,IAAzCziB,OAAOoG,KAAKoc,GAAkB3hB,SAChCqhB,EAAYQ,kBAAoBH,GAAuBC,IAGzD,IAAMX,EAA2B,CAC/BC,iBAAkBC,KAClBY,aAAcT,GAEhB,OAAOjM,KAAKC,UAAU2L,GAxCfe,CAAe/B,GA2CxB,SAASkB,KACP,MAAO,CACLc,cAAejI,GAAgBO,cAAcgC,WAC7CH,gBAAiBlC,KACjBgI,aAAc,CACZzF,YAAazS,GACbmY,SAAUlK,GAAIsC,cAAc6H,SAC5BC,sBL7KN,WACE,IAAMxN,EAAYoD,GAAIsC,cAAc1F,UACpC,MAAI,kBAAmBA,EACjBA,EAAUyN,cAAcC,iBK0KHC,GACvBC,iBAAkBnI,KAClBoI,0BLnJN,WACE,IAEMC,EAFY1K,GAAIsC,cAAc1F,UAEW+N,WAG/C,OADED,GAAuBA,EAAoBE,eAE3C,IAAK,UACH,SACF,IAAK,KACH,SACF,IAAK,KACH,SACF,IAAK,KACH,SACF,QACE,UKmI2BC,IAE7BC,0BAA2B,GAI/B,SAASpB,GAA0B5b,GAOjC,OADa3G,OAAOoG,KAAKO,GACbuC,IAAI,SAAApD,GAAO,OAAGA,MAAKnE,MAAOgF,EAAIb,ODrL5C,SAAS8d,EAAaC,GACpBrR,WAAW,WAET,GAAuB,IAAnBiN,GAAJ,CAKA,IAAKC,GAAM7e,OACT,OAAO+iB,EAAarE,IAItB,IAAMuE,IAAapE,IACnBA,GAAQ,GAIR,IAAMqE,EAAYD,EAAO5a,IAAI,SAAA6W,GAAO,OAClCiE,sBAAuBjE,EAAIhb,QAC3Bkf,cAAexZ,OAAOsV,EAAIC,cAGtB1a,EAAyB,CAC7B4e,gBAAiBzZ,OAAOlG,KAAK0C,OAC7Bkd,YAAa,CACXC,YAAa,EACbC,eAAgB,IAElBC,WAAY1J,GAAgBO,cAAc2C,UAC1CiG,aAIF5N,MAAMyE,GAAgBO,cAAc6C,eAAgB,CAClD3R,OAAQ,OACRjK,KAAM6T,KAAKC,UAAU5Q,KAEpBpD,KAAK,SAAAqiB,GAIJ,OAHKA,EAAInO,IACPqF,GAAcjU,KAAK,oCAEd+c,EAAIrT,SAEZhP,KAAK,SAAAqiB,GACJ,IAAMC,EAAO3T,OAAO0T,EAAIE,0BAGlBC,EAAgBC,MAAMH,GACxBjF,GACAd,KAAKmG,IAAIrF,GAA0BiF,GACvC/E,GAAiBD,GAEjBoE,EAAac,KAEdtM,MAAM,WAKLsH,KAAYoE,EAAWpE,IACvBD,KACAhE,GAAcjU,KAAK,eAAeiY,QAClCmE,EAAarE,QAEhBsE,GAGLD,CApGmC,MECnC,IAEMiB,GAAa,CTGqB,MAEW,OAEL,QUS9C,QA0CEC,mBAAA,WACE,OAAI7jB,KAAK8jB,MACP,MAAM9c,GAAcrD,uBAAuC,CACzDogB,UAAW/jB,KAAKqG,OAGpBrG,KAAKgkB,IAAI/L,KAAKjY,KAAKikB,gBACnBjkB,KAAK8jB,SAOPD,kBAAA,WACE,OAAI7jB,KAAK8jB,MACP,MAAM9c,GAAcrD,uBAAuC,CACzDogB,UAAW/jB,KAAKqG,OAGpBrG,KAAK8jB,QACL9jB,KAAKgkB,IAAI/L,KAAKjY,KAAKkkB,eACnBlkB,KAAKgkB,IAAI3L,QACPrY,KAAKmkB,aACLnkB,KAAKikB,eACLjkB,KAAKkkB,eAEPlkB,KAAKokB,wBACLhF,GAASpf,OAUX6jB,oBAAA,SACEQ,EACAC,EACA3b,GAUA,GALA3I,KAAKohB,WAAa5D,KAAK+G,MAAiB,IAAXD,GAC7BtkB,KAAKugB,YAAc/C,KAAK+G,MAAkB,IAAZF,GAC1B1b,GAAWA,EAAQ6b,aACrBxkB,KAAKuhB,sBAAwB5Y,EAAQ6b,aAEnC7b,GAAWA,EAAQ8b,QACrB,IAAqB,QAAArf,EAAArG,OAAOoG,KAAKwD,EAAQ8b,SAApBrgB,WAAAA,IAA8B,CAA9C,IAAMsgB,OACJhB,MAAM9T,OAAOjH,EAAQ8b,QAAQC,OAChC1kB,KAAKqhB,SAASqD,GAAU9U,OAAO4N,KAAK+G,MAAM5b,EAAQ8b,QAAQC,MAIhEtF,GAASpf,OASX6jB,6BAAA,SAAgBc,EAAiBC,gBAAAA,UACAphB,IAA3BxD,KAAKqhB,SAASsD,IAChB3kB,KAAK6kB,UAAUF,EAAS,GAE1B3kB,KAAKqhB,SAASsD,IAAYC,GAS5Bf,uBAAA,SAAUc,EAAiBC,GACzB,IDjIJ,SAAkCve,EAAc0d,GAC9C,QAAoB,IAAhB1d,EAAKzG,QAboB,IAaJyG,EAAKzG,UAI3BmkB,GACCA,EAAUe,WTf0B,USgBR,EAA5BlB,GAAWmB,QAAQ1e,KACpBA,EAAKye,WAnBmB,MC4IrBE,CAAkBL,EAAS3kB,KAAKqG,MAGlC,MAAMW,GAAcrD,qCAA6C,CAC/DshB,iBAAkBN,IAHpB3kB,KAAKqhB,SAASsD,GAAWC,GAa7Bf,uBAAA,SAAUc,GACR,OAAO3kB,KAAKqhB,SAASsD,IAAY,GAQnCd,0BAAA,SAAaqB,EAAcxkB,GACzB,IAAMykB,EP7FV,SAA2C9e,GACzC,QAAoB,IAAhBA,EAAKzG,QApDuB,GAoDPyG,EAAKzG,QAGAka,GAA4BsL,KAAK,SAAAC,GAC7D,OAAAhf,EAAKye,WAAWO,OAEiBhf,EAAKif,MAAMvL,KOsFxBwL,CAA2BL,GACzCM,EPpFV,SAA4C9kB,GAC1C,OAAwB,IAAjBA,EAAMd,QAAgBc,EAAMd,QA7DF,IOgJV6lB,CAA4B/kB,GACjD,GAAIykB,GAAeK,EACjBxlB,KAAKuhB,iBAAiB2D,GAAQxkB,MADhC,CAKA,IAAKykB,EACH,MAAMne,GAAcrD,gCAAyC,CAC3D+hB,cAAeR,IAGnB,IAAKM,EACH,MAAMxe,GAAcrD,iCAA0C,CAC5DgiB,eAAgBjlB,MAStBmjB,0BAAA,SAAaqB,GACX,OAAOllB,KAAKuhB,iBAAiB2D,IAG/BrB,6BAAA,SAAgBqB,QACsB1hB,IAAhCxD,KAAKuhB,iBAAiB2D,WAGnBllB,KAAKuhB,iBAAiB2D,IAG/BrB,2BAAA,WACE,YAAY7jB,KAAKuhB,mBAGXsC,0BAAR,SAAqBQ,GACnBrkB,KAAKugB,YAAc8D,GAGbR,yBAAR,SAAoBS,GAClBtkB,KAAKohB,WAAakD,GAOZT,mCAAR,WACE,IAAM+B,EAAqB5lB,KAAKgkB,IAAIxL,iBAAiBxY,KAAKmkB,cACpD0B,EAAmBD,GAAsBA,EAAmB,GAC9DC,IACF7lB,KAAKohB,WAAa5D,KAAK+G,MAAkC,IAA5BsB,EAAiBvB,UAC9CtkB,KAAKugB,YAAc/C,KAAK+G,MACoC,KAAzDsB,EAAiBxB,UAAYrkB,KAAKgkB,IAAI8B,oBAWtCjC,kBAAP,SACEkC,EACAC,EACAC,GAEA,IAAMC,EAAQtO,GAAIsC,cAAc6H,SAChC,GAAKmE,EAAL,CAGA,IAAM7G,EAAQ,IAAIwE,GV9OoB,OU8OeqC,GAAO,GACtDC,EAAe3I,KAAK+G,MAA0C,IAApC3M,GAAIsC,cAAc4L,iBAsBlD,GArBAzG,EAAM+G,aAAaD,GAGfJ,GAAqBA,EAAkB,KACzC1G,EAAMgH,YAAY7I,KAAK+G,MAAsC,IAAhCwB,EAAkB,GAAGzB,WAClDjF,EAAMwF,UACJ,iBACArH,KAAK+G,MAA4C,IAAtCwB,EAAkB,GAAGO,iBAElCjH,EAAMwF,UACJ,2BACArH,KAAK+G,MAAsD,IAAhDwB,EAAkB,GAAGQ,2BAElClH,EAAMwF,UACJ,eACArH,KAAK+G,MAA0C,IAApCwB,EAAkB,GAAGS,gBAMhCR,EAAc,CAChB,IAAMS,EAAaT,EAAaU,KAC9B,SAAAC,GAAe,MAJC,gBAIDA,EAAYtgB,OAEzBogB,GAAcA,EAAWpC,WAC3BhF,EAAMwF,UVxQ0B,MU0Q9BrH,KAAK+G,MAA6B,IAAvBkC,EAAWpC,YAG1B,IAAMuC,EAAuBZ,EAAaU,KACxC,SAAAC,GAAe,MAZY,2BAYZA,EAAYtgB,OAEzBugB,GAAwBA,EAAqBvC,WAC/ChF,EAAMwF,UV/QqC,OUiRzCrH,KAAK+G,MAAuC,IAAjCqC,EAAqBvC,YAIhC4B,GACF5G,EAAMwF,UVpRgC,OUsRpCrH,KAAK+G,MAAwB,IAAlB0B,IAKjB7G,GAASC,KAGJwE,yBAAP,SAA6B3L,GAE3BkH,GADc,IAAIyE,GAAM3L,GAAa,EAAOA,SAnQ9C,YACW7R,EACAmZ,EACTqH,gBADSrH,MADAxf,UAAAqG,EACArG,YAAAwf,EApBHxf,aAGAA,sBAA8C,GACtDA,cAA8C,GACtCA,SAAM4X,GAAIsC,cACVla,cAAWwd,KAAK+G,MAAsB,IAAhB/G,KAAKC,UAiB5Bzd,KAAKwf,SACRxf,KAAKikB,eAAoB6C,uBAA2B9mB,KAAK+mB,aAAY/mB,KAAKqG,KAC1ErG,KAAKkkB,cAAmB8C,sBAA0BhnB,KAAK+mB,aAAY/mB,KAAKqG,KACxErG,KAAKmkB,aACH0C,GACGrP,OAAwBxX,KAAK+mB,aAAY/mB,KAAKqG,KAE/CwgB,GAGF7mB,KAAKokB,yBC3Db,SA+BgB6C,GAA0B3S,GACxC,IAAM4S,EAAmB5S,EACzB,GAAK4S,QAAuD1jB,IAAnC0jB,EAAiBC,cAA1C,CAGA,IAAM1O,EAAab,GAAIsC,cAAc4L,gBAC/BvF,EAAc/C,KAAK+G,MACqB,KAA3C2C,EAAiB7C,UAAY5L,IAE1BgI,EAA4ByG,EAAiBC,cAC/C3J,KAAK+G,MAC6D,KAA/D2C,EAAiBC,cAAgBD,EAAiB7C,iBAErD7gB,EACEmd,EAA4BnD,KAAK+G,MACyB,KAA7D2C,EAAiBE,YAAcF,EAAiB7C,aHgFrD,SAAkCvE,GAChC,IAAMR,EAAkB3F,GAAgBO,cAEnCoF,EAAgBC,wBAIjBO,EAAeE,MAAQV,EAAgBvC,eAAehF,MAAM,KAAK,IAKlEuH,EAAgB3E,gBAChB2E,EAAgBhC,yBAKnB/L,WACE,WAAM,OAAA0N,KAAY7Y,IAAI0Z,MACtB,GGxFFuH,CARuC,CACrCrH,IAFUkH,EAAiB7gB,MAAQ6gB,EAAiB7gB,KAAK0R,MAAM,KAAK,GAGpEsI,qBAAsB6G,EAAiBI,aACvC/G,cACAE,4BACAE,+BClDJ,IAAM4G,GAAmB,IAEzB,SAAgBC,KAET3N,OAKLtI,WAAW,WAAM,OAcnB,WACE,IAAMyS,EAAMpM,GAAIsC,cACV6L,EAAoB/B,EAAIzL,iBAC5B,cAEIyN,EAAehC,EAAIzL,iBAAiB,SAG1C,GAAIyL,EAAIxK,kBAAmB,CAGzB,IAAIiO,EAAiBlW,WAAW,WAC9BsS,GAAM6D,eAAe3B,EAAmBC,GACxCyB,OAAYjkB,GACX+jB,IACHvD,EAAIxK,kBAAkB,SAAClH,GACjBmV,IACFE,aAAaF,GACb5D,GAAM6D,eAAe3B,EAAmBC,EAAc1T,WAI1DuR,GAAM6D,eAAe3B,EAAmBC,GApCzB4B,IAAkB,GACnCrW,WAAW,WAAM,OAInB,WAGE,IAFA,IAAMyS,EAAMpM,GAAIsC,cACV2N,EAAY7D,EAAIzL,iBAAiB,gBAChBuP,IAAA1jB,WAAAA,IAAW,CAChC6iB,SAEFjD,EAAI+D,cAAc,WAAYd,IAVbe,IAAwB,GACzCzW,WAAW,WAAM,OAsCnB,WAIE,IAHA,IAAMyS,EAAMpM,GAAIsC,cAEV+N,EAAWjE,EAAIzL,iBAAiB,eAChB2P,IAAA9jB,WAAAA,IAAU,CAC9B+jB,SAGFnE,EAAI+D,cAAc,UAAWI,IA9CZC,IAAyB,IAiD5C,SAASD,GAAsB9P,GAC7B,IAAMH,EAAcG,EAAQhS,KAG1B6R,EAAYmQ,UAAU,EAAG7Q,GAAqB5X,UAC9C4X,IAIFqM,GAAMsE,sBAAsBjQ,GC3E9B,QAoBEoQ,mBAAA,SAAMjiB,GACJ,OAAO,IAAIwd,GAAMxd,IAGnBtH,sBAAIupB,2CAGJ,WACE,OAAO3O,GAAgBO,cAAcqF,4BAJvC,SAA2B1Y,GACzB8S,GAAgBO,cAAcqF,uBAAyB1Y,mCAMzD9H,sBAAIupB,0CAGJ,WACE,OAAO3O,GAAgBO,cAAcuF,2BAJvC,SAA0B5Y,GACxB8S,GAAgBO,cAAcuF,sBAAwB5Y,uCAtBxD,YAAqB4C,GAAAzJ,SAAAyJ,EACfmO,GAAIsC,cAAcwF,wBACpB9B,KAA2B3c,KAAKumB,GAAmBA,IAEnDhN,GAAcjU,KACZ,iHCwBYyC,EAPexB,SAASqC,gBACxC,cAjB4C,SAC5CJ,GAEA,GANuB,cAMnBA,EAAIpD,KACN,MAAMW,GAAcrD,yBAEtB,GAAsB,oBAAXwV,OACT,MAAMnS,GAAcrD,oBAItB,gBhBmGqBwV,GACvB7B,GAAiB6B,EgBtGfoP,CAASpP,QACTQ,GAAgBO,cAAcN,oBAAsBnQ,EAC7C,IAAI6e,GAAsB7e,IAIV"***REMOVED***