var fs = require('fs');

var protocols = {
  http  : require('http'),
  https : require('https')
***REMOVED***

var keys = {
  cert : fs.readFileSync(__dirname + '/keys/ssl.cert'),
  key  : fs.readFileSync(__dirname + '/keys/ssl.key')
***REMOVED***

var helpers = {***REMOVED***;

helpers.server = function(opts, cb) {

  var defaults = {
    code    : 200,
    headers : {'Content-Type': 'application/json'***REMOVED***
***REMOVED***

  var mirror_response = function(req) {
    return JSON.stringify({
      headers: req.headers,
      body: req.body
  ***REMOVED***)
***REMOVED***

  var get = function(what) {
    if (!opts[what])
      return defaults[what];
  
    if (typeof opts[what] == 'function')
      return opts[what](); // set them at runtime
    else
      return opts[what];
***REMOVED***

  var finish = function(req, res) {
    res.writeHead(get('code'), get('headers'));
    res.end(opts.response || mirror_response(req));
***REMOVED***

  var handler = function(req, res) {

    req.setEncoding('utf8'); // get as string
    req.body = '';
    req.on('data', function(str) { req.body += str ***REMOVED***)
    req.socket.on('error', function(e) { 
      // res.writeHead(500, {'Content-Type': 'text/plain'***REMOVED***);
      // res.end('Error: ' + e.message);
  ***REMOVED***)

    setTimeout(function(){
      finish(req, res);
  ***REMOVED***, opts.wait || 0);

***REMOVED***

  var protocol = opts.protocol || 'http';
  var server;

  if (protocol == 'https')
    server = protocols[protocol].createServer(keys, handler);
  else
    server = protocols[protocol].createServer(handler);

  server.listen(opts.port, cb);
  return server;
***REMOVED***

module.exports = helpers;